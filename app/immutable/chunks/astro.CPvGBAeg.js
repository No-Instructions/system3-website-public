import{s as ya,d as p,i as r,f as m,t as d,n as I,$ as S,P as j,a0 as C,b as De,p as x,g as w,c as T,e as Y,q as ze,j as b,h as E}from"./scheduler.D_DiFEDa.js";import{S as wa,i as ba,d as f,t as u,a as F,m as _,c as g,b as h}from"./index.uqldPLAT.js";import{B as xa}from"./blueprint.Dy4glII9.js";import"./form-demo.CdCUS8IN.js";import{C as Gt}from"./callout.DvnzS11h.js";import"./index.C7oMflsj.js";import"./utils.DREkexI4.js";import"./config.RmrLwRmw.js";import"./entry.BsU3B_FI.js";import{S as va}from"./steps.D2WMxhFa.js";import"./ctx.umHR9d8j.js";import"./index.LrWe5HSb.js";import"./root.svelte_svelte_type_style_lang.BW7dnU17.js";import{H as Sa}from"./h2.DtBDGVvi.js";import{H as q}from"./h3.gq_MzxDM.js";import{P as U}from"./p.DrBHW023.js";import{P as N}from"./pre.BCHLVfkL.js";import{A as ga}from"./a.B4mCXPxd.js";function Ca(i){let t;return{c(){t=d("Setup your project")},l(a){t=m(a,"Setup your project")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function ka(i){let t;return{c(){t=d("Create project")},l(a){t=m(a,"Create project")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function La(i){let t;return{c(){t=d("Start by creating a new Astro project:")},l(a){t=m(a,"Start by creating a new Astro project:")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function ja(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> create</span><span style="color:#FFF8"> astro@latest</span></span></code>',s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Ba(i){let t;return{c(){t=d("Configure your Astro project")},l(a){t=m(a,"Configure your Astro project")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Ia(i){let t;return{c(){t=d("You will be asked a few questions to configure your project:")},l(a){t=m(a,"You will be asked a few questions to configure your project:")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Aa(i){let t,a=`<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> Where</span><span style="color:#FFF8"> should</span><span style="color:#FFF8"> we</span><span style="color:#FFF8"> create</span><span style="color:#FFF8"> your</span><span style="color:#FFF8"> new</span><span style="color:#FFF8"> project?</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">./your-app-name</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> How</span><span style="color:#FFF8"> would</span><span style="color:#FFF8"> you</span><span style="color:#FFF8"> like</span><span style="color:#FFF8"> to</span><span style="color:#FFF8"> start</span><span style="color:#FFF8"> your</span><span style="color:#FFF8"> new</span><span style="color:#FFF8"> project?</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">Choose</span><span style="color:#FFF8"> a</span><span style="color:#FFF8"> starter</span><span style="color:#FFF8"> template</span><span style="color:#FFF"> (or </span><span style="color:#FFF8">Empty</span><span style="color:#FFF">)</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> Install</span><span style="color:#FFF8"> dependencies?</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">Yes</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> Do</span><span style="color:#FFF8"> you</span><span style="color:#FFF8"> plan</span><span style="color:#FFF8"> to</span><span style="color:#FFF8"> write</span><span style="color:#FFF8"> TypeScript?</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">Yes</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> How</span><span style="color:#FFF8"> strict</span><span style="color:#FFF8"> should</span><span style="color:#FFF8"> TypeScript</span><span style="color:#FFF8"> be?</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">Strict</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">-</span><span style="color:#FFF8"> Initialize</span><span style="color:#FFF8"> a</span><span style="color:#FFF8"> new</span><span style="color:#FFF8"> git</span><span style="color:#FFF8"> repository?</span><span style="color:#FFF"> (optional)</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">Yes/No</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Ta(i){let t;return{c(){t=d("Add Svelte to your project")},l(a){t=m(a,"Add Svelte to your project")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Ea(i){let t;return{c(){t=d("Install Svelte using the Astro CLI:")},l(a){t=m(a,"Install Svelte using the Astro CLI:")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Ga(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> astro</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> svelte</span></span></code>',s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Ra(i){let t,a,s="<code>Yes</code>",n;return{c(){t=d("Answer "),a=new C(!1),n=d(" to all the question prompted by the CLI when installing Svelte."),this.h()},l(l){t=m(l,"Answer "),a=S(l,!1),n=m(l," to all the question prompted by the CLI when installing Svelte."),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function Ua(i){let t,a;return t=new U({props:{$$slots:{default:[Ra]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(s){g(t.$$.fragment,s)},m(s,n){_(t,s,n),a=!0},p(s,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){a||(F(t.$$.fragment,s),a=!0)},o(s){u(t.$$.fragment,s),a=!1},d(s){f(t,s)}}}function Ya(i){let t;return{c(){t=d("Add TailwindCSS to your project")},l(a){t=m(a,"Add TailwindCSS to your project")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Na(i){let t;return{c(){t=d("Add Tailwind CSS using the Astro CLI:")},l(a){t=m(a,"Add Tailwind CSS using the Astro CLI:")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function qa(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> astro</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> tailwind</span></span></code>',s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Ha(i){let t,a,s="<code>Yes</code>",n;return{c(){t=d("Answer "),a=new C(!1),n=d(" to all the question prompted by the CLI when installing Svelte."),this.h()},l(l){t=m(l,"Answer "),a=S(l,!1),n=m(l," to all the question prompted by the CLI when installing Svelte."),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function Pa(i){let t,a;return t=new U({props:{$$slots:{default:[Ha]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(s){g(t.$$.fragment,s)},m(s,n){_(t,s,n),a=!0},p(s,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){a||(F(t.$$.fragment,s),a=!0)},o(s){u(t.$$.fragment,s),a=!1},d(s){f(t,s)}}}function Wa(i){let t;return{c(){t=d("Setup path aliases")},l(a){t=m(a,"Setup path aliases")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Oa(i){let t,a,s="<code>tsconfig.json</code>",n;return{c(){t=d("Add the following code to the "),a=new C(!1),n=d(" file to resolve paths:"),this.h()},l(l){t=m(l,"Add the following code to the "),a=S(l,!1),n=m(l," file to resolve paths:"),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function Da(i){let t,a=`<code data-line-numbers="" data-language="jsonc" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color:#FFF8">&#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  "</span><span style="color:#FFF">compilerOptions</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    //</span><span style="color:#FFF4"> ...</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    "</span><span style="color:#FFF">baseUrl</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "."</span><span style="color:#FFF8">,</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    "</span><span style="color:#FFF">paths</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      "</span><span style="color:#FFF">$lib/*</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"./src/*"</span><span style="color:#FFF8">],</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    //</span><span style="color:#FFF4"> ...</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function za(i){let t;return{c(){t=d("learn more about it")},l(a){t=m(a,"learn more about it")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Ja(i){let t,a,s,n;return a=new ga({props:{href:"https://docs.astro.build/en/guides/aliases/",$$slots:{default:[za]},$$scope:{ctx:i}}}),{c(){t=d("If needed, adapt the path aliases to your specific needs ("),h(a.$$.fragment),s=d(").")},l(l){t=m(l,"If needed, adapt the path aliases to your specific needs ("),g(a.$$.fragment,l),s=m(l,").")},m(l,$){r(l,t,$),_(a,l,$),r(l,s,$),n=!0},p(l,$){const v={};$&1&&(v.$$scope={dirty:$,ctx:l}),a.$set(v)},i(l){n||(F(a.$$.fragment,l),n=!0)},o(l){u(a.$$.fragment,l),n=!1},d(l){l&&(p(t),p(s)),f(a,l)}}}function Ka(i){let t,a;return t=new U({props:{$$slots:{default:[Ja]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(s){g(t.$$.fragment,s)},m(s,n){_(t,s,n),a=!0},p(s,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){a||(F(t.$$.fragment,s),a=!0)},o(s){u(t.$$.fragment,s),a=!1},d(s){f(t,s)}}}function Ma(i){let t;return{c(){t=d("Create a global CSS file")},l(a){t=m(a,"Create a global CSS file")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Qa(i){let t,a,s="<code>src/styles/app.css</code>",n;return{c(){t=d("Create the global stylesheet in "),a=new C(!1),n=d(":"),this.h()},l(l){t=m(l,"Create the global stylesheet in "),a=S(l,!1),n=m(l,":"),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function Va(i){let t,a=`<code data-line-numbers="" data-language="css" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> base</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> components</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> utilities</span><span style="color:#FFF8">;</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Xa(i){let t;return{c(){t=d("Import the global CSS file")},l(a){t=m(a,"Import the global CSS file")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function Za(i){let t,a,s="<code>app.css</code>",n,l,$="<code>src/pages/index.astro</code>",v;return{c(){t=d("Import the "),a=new C(!1),n=d(" file in the "),l=new C(!1),v=d(" file:"),this.h()},l(y){t=m(y,"Import the "),a=S(y,!1),n=m(y," file in the "),l=S(y,!1),v=m(y," file:"),this.h()},h(){a.a=n,l.a=v},m(y,A){r(y,t,A),a.m(s,y,A),r(y,n,A),l.m($,y,A),r(y,v,A)},p:I,d(y){y&&(p(t),a.d(),p(n),l.d(),p(v))}}}function es(i){let t,a=`<code data-line-numbers="" data-language="ts" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span data-line=""><span style="color:#FFF8">---</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> "$lib/styles/app.css"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">---</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function ts(i){let t;return{c(){t=d("Run the CLI")},l(a){t=m(a,"Run the CLI")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function as(i){let t,a,s="<code>shadcn-svelte</code>",n;return{c(){t=d("Run the "),a=new C(!1),n=d(" init command to setup your project:"),this.h()},l(l){t=m(l,"Run the "),a=S(l,!1),n=m(l," init command to setup your project:"),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function ss(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> init</span></span></code>',s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function ns(i){let t;return{c(){t=d("Configure components.json")},l(a){t=m(a,"Configure components.json")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function ls(i){let t,a,s="<code>components.json</code>",n;return{c(){t=d("You will be asked a few questions to configure "),a=new C(!1),n=d(":"),this.h()},l(l){t=m(l,"You will be asked a few questions to configure "),a=S(l,!1),n=m(l,":"),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function os(i){let t,a=`<code data-line-numbers="" data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span data-line=""><span>Would you like to use TypeScript (recommended)? › Yes</span></span>
<span data-line=""><span>Which style would you like to use? › Default</span></span>
<span data-line=""><span>Which color would you like to use as base color? › Slate</span></span>
<span data-line=""><span>Where is your global CSS file? › src/styles/app.css</span></span>
<span data-line=""><span>Where is your tailwind.config.[cjs|mjs|js|ts] located? › tailwind.config.mjs</span></span>
<span data-line=""><span>Configure the import alias for components: › $lib/components</span></span>
<span data-line=""><span>Configure the import alias for utils: › $lib/utils</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function ps(i){let t;return{c(){t=d("Update Astro's Tailwind config")},l(a){t=m(a,"Update Astro's Tailwind config")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function rs(i){let t,a,s="<code>app.css</code>",n,l,$="<code>applyBaseStyles</code>",v,y,A="<code>astro.config.mjs</code>",B,c,k="<code>false</code>",R;return{c(){t=d("To prevent serving the Tailwind base styles twice, we need to tell Astro not to apply the base styles, since we already include them in our own "),a=new C(!1),n=d(" file. To do this, set the "),l=new C(!1),v=d(" config option for the tailwind plugin in "),y=new C(!1),B=d(" to "),c=new C(!1),R=d("."),this.h()},l(L){t=m(L,"To prevent serving the Tailwind base styles twice, we need to tell Astro not to apply the base styles, since we already include them in our own "),a=S(L,!1),n=m(L," file. To do this, set the "),l=S(L,!1),v=m(L," config option for the tailwind plugin in "),y=S(L,!1),B=m(L," to "),c=S(L,!1),R=m(L,"."),this.h()},h(){a.a=n,l.a=v,y.a=B,c.a=R},m(L,G){r(L,t,G),a.m(s,L,G),r(L,n,G),l.m($,L,G),r(L,v,G),y.m(A,L,G),r(L,B,G),c.m(k,L,G),r(L,R,G)},p:I,d(L){L&&(p(t),a.d(),p(n),l.d(),p(v),y.d(),p(B),c.d(),p(R))}}}function is(i){let t,a=`<code data-line-numbers="" data-language="ts" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> default</span><span style="color:#FFF"> defineConfig</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF">  integrations</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">    tailwind</span><span style="color:#FFF8">(&#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">      applyBaseStyles</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> false,</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;),</span></span>
<span data-line=""><span style="color:#FFF8">    //</span><span style="color:#FFF4"> ...</span></span>
<span data-line=""><span style="color:#FFF8">  ],</span></span>
<span data-line=""><span style="color:#FFF8">&#125;);</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function $s(i){let t;return{c(){t=d("Update tailwind.config.mjs")},l(a){t=m(a,"Update tailwind.config.mjs")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function cs(i){let t,a,s="<code>shadcn-svelte@latest init</code>",n,l,$="<code>astro</code>",v,y,A="<code>content</code>",B;return{c(){t=d("When running "),a=new C(!1),n=d(", your Tailwind config for content will be overwritten. To fix this, add "),l=new C(!1),v=d(" as one of the options inside of "),y=new C(!1),B=d(":"),this.h()},l(c){t=m(c,"When running "),a=S(c,!1),n=m(c,", your Tailwind config for content will be overwritten. To fix this, add "),l=S(c,!1),v=m(c," as one of the options inside of "),y=S(c,!1),B=m(c,":"),this.h()},h(){a.a=n,l.a=v,y.a=B},m(c,k){r(c,t,k),a.m(s,c,k),r(c,n,k),l.m($,c,k),r(c,v,k),y.m(A,c,k),r(c,B,k)},p:I,d(c){c&&(p(t),a.d(),p(n),l.d(),p(v),y.d(),p(B))}}}function ms(i){let t,a=`<code data-line-numbers="" data-language="js" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">const</span><span style="color:#FFF"> config </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">  content</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"./src/**/*.&#123;astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue&#125;"</span><span style="color:#FFF8">],</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> ...</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""><span style="color:#FFF8">//</span><span style="color:#FFF4"> ...</span></span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> default</span><span style="color:#FFF"> config</span><span style="color:#FFF8">;</span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function ds(i){let t;return{c(){t=d("That's it")},l(a){t=m(a,"That's it")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function fs(i){let t;return{c(){t=d("You can now start adding components to your project.")},l(a){t=m(a,"You can now start adding components to your project.")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function us(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> button</span></span></code>',s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function Fs(i){let t,a,s="<code>Button</code>",n;return{c(){t=d("The command above will add the "),a=new C(!1),n=d(" component to your project. You can then import it like this:"),this.h()},l(l){t=m(l,"The command above will add the "),a=S(l,!1),n=m(l," component to your project. You can then import it like this:"),this.h()},h(){a.a=n},m(l,$){r(l,t,$),a.m(s,l,$),r(l,n,$)},p:I,d(l){l&&(p(t),a.d(),p(n))}}}function _s(i){let t,a=`<code data-line-numbers="" data-language="astro" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color:#FFF4">---</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">html lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"en"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;</span><span style="color:#FFF">head</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">		&lt;</span><span style="color:#FFF">title</span><span style="color:#FFF8">></span><span style="color:#FFF">Astro</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">title</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;/</span><span style="color:#FFF">head</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">		&lt;</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span><span style="color:#FFF">Hello World</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;/</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">html</span><span style="color:#FFF8">></span></span></code>`,s;return{c(){t=new C(!1),s=j(),this.h()},l(n){t=S(n,!1),s=j(),this.h()},h(){t.a=s},m(n,l){t.m(a,n,l),r(n,s,l)},p:I,d(n){n&&(p(s),t.d())}}}function gs(i){let t;return{c(){t=d("learn more about it")},l(a){t=m(a,"learn more about it")},m(a,s){r(a,t,s)},d(a){a&&p(t)}}}function hs(i){let t,a,s="<code>client</code>",n,l,$="<code>.astro</code>",v,y,A,B;return y=new ga({props:{href:"https://docs.astro.build/en/reference/directives-reference/#client-directives",$$slots:{default:[gs]},$$scope:{ctx:i}}}),{c(){t=d("Remember to use the "),a=new C(!1),n=d(" directives inside "),l=new C(!1),v=d(" files when dealing with interactive components ("),h(y.$$.fragment),A=d(")."),this.h()},l(c){t=m(c,"Remember to use the "),a=S(c,!1),n=m(c," directives inside "),l=S(c,!1),v=m(c," files when dealing with interactive components ("),g(y.$$.fragment,c),A=m(c,")."),this.h()},h(){a.a=n,l.a=v},m(c,k){r(c,t,k),a.m(s,c,k),r(c,n,k),l.m($,c,k),r(c,v,k),_(y,c,k),r(c,A,k),B=!0},p(c,k){const R={};k&1&&(R.$$scope={dirty:k,ctx:c}),y.$set(R)},i(c){B||(F(y.$$.fragment,c),B=!0)},o(c){u(y.$$.fragment,c),B=!1},d(c){c&&(p(t),a.d(),p(n),l.d(),p(v),p(A)),f(y,c)}}}function ys(i){let t,a;return t=new U({props:{$$slots:{default:[hs]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(s){g(t.$$.fragment,s)},m(s,n){_(t,s,n),a=!0},p(s,n){const l={};n&1&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){a||(F(t.$$.fragment,s),a=!0)},o(s){u(t.$$.fragment,s),a=!1},d(s){f(t,s)}}}function ws(i){let t,a,s,n,l,$,v,y,A,B,c,k,R,L,G,Ze,Z,et,Ee,ee,tt,te,at,ae,st,se,nt,Ge,ne,lt,le,ot,oe,pt,pe,rt,H,P,Rt="tsconfig.json",re,it,ie,$t,$e,ct,ce,mt,W,O,Ut="src/styles/app.css",me,dt,de,ft,fe,ut,D,z,Yt="src/pages/index.astro",ue,Ft,Fe,_t,_e,gt,Re,ge,ht,he,yt,ye,wt,Ue,we,bt,be,xt,xe,vt,J,K,Nt="astro.config.mjs",ve,St,Se,Ct,Ce,kt,M,Q,qt="tailwind.config.mjs",ke,Lt,Le,jt,je,Bt,Ye,Be,It,Ie,At,V,X,Ht="index.astro",Ae,Tt,Te,Et;return t=new q({props:{id:"create-project",$$slots:{default:[ka]},$$scope:{ctx:i}}}),s=new U({props:{$$slots:{default:[La]},$$scope:{ctx:i}}}),$=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ja]},$$scope:{ctx:i}}}),y=new q({props:{id:"configure-your-astro-project",$$slots:{default:[Ba]},$$scope:{ctx:i}}}),B=new U({props:{$$slots:{default:[Ia]},$$scope:{ctx:i}}}),R=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Aa]},$$scope:{ctx:i}}}),G=new q({props:{id:"add-svelte-to-your-project",$$slots:{default:[Ta]},$$scope:{ctx:i}}}),Z=new U({props:{$$slots:{default:[Ea]},$$scope:{ctx:i}}}),ee=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ga]},$$scope:{ctx:i}}}),te=new Gt({props:{className:"mt-4",$$slots:{default:[Ua]},$$scope:{ctx:i}}}),ae=new q({props:{id:"add-tailwindcss-to-your-project",$$slots:{default:[Ya]},$$scope:{ctx:i}}}),se=new U({props:{$$slots:{default:[Na]},$$scope:{ctx:i}}}),ne=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[qa]},$$scope:{ctx:i}}}),le=new Gt({props:{className:"mt-4",$$slots:{default:[Pa]},$$scope:{ctx:i}}}),oe=new q({props:{id:"setup-path-aliases",$$slots:{default:[Wa]},$$scope:{ctx:i}}}),pe=new U({props:{$$slots:{default:[Oa]},$$scope:{ctx:i}}}),re=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"jsonc","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[Da]},$$scope:{ctx:i}}}),ie=new Gt({props:{className:"mt-4",$$slots:{default:[Ka]},$$scope:{ctx:i}}}),$e=new q({props:{id:"create-a-global-css-file",$$slots:{default:[Ma]},$$scope:{ctx:i}}}),ce=new U({props:{$$slots:{default:[Qa]},$$scope:{ctx:i}}}),me=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"css","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[Va]},$$scope:{ctx:i}}}),de=new q({props:{id:"import-the-global-css-file",$$slots:{default:[Xa]},$$scope:{ctx:i}}}),fe=new U({props:{$$slots:{default:[Za]},$$scope:{ctx:i}}}),ue=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[es]},$$scope:{ctx:i}}}),Fe=new q({props:{id:"run-the-cli",$$slots:{default:[ts]},$$scope:{ctx:i}}}),_e=new U({props:{$$slots:{default:[as]},$$scope:{ctx:i}}}),ge=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ss]},$$scope:{ctx:i}}}),he=new q({props:{id:"configure-componentsjson",$$slots:{default:[ns]},$$scope:{ctx:i}}}),ye=new U({props:{$$slots:{default:[ls]},$$scope:{ctx:i}}}),we=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[os]},$$scope:{ctx:i}}}),be=new q({props:{id:"update-astros-tailwind-config",$$slots:{default:[ps]},$$scope:{ctx:i}}}),xe=new U({props:{$$slots:{default:[rs]},$$scope:{ctx:i}}}),ve=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[is]},$$scope:{ctx:i}}}),Se=new q({props:{id:"update-tailwindconfigmjs",$$slots:{default:[$s]},$$scope:{ctx:i}}}),Ce=new U({props:{$$slots:{default:[cs]},$$scope:{ctx:i}}}),ke=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"js","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[ms]},$$scope:{ctx:i}}}),Le=new q({props:{id:"thats-it",$$slots:{default:[ds]},$$scope:{ctx:i}}}),je=new U({props:{$$slots:{default:[fs]},$$scope:{ctx:i}}}),Be=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[us]},$$scope:{ctx:i}}}),Ie=new U({props:{$$slots:{default:[Fs]},$$scope:{ctx:i}}}),Ae=new N({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"astro","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[_s]},$$scope:{ctx:i}}}),Te=new Gt({props:{className:"mt-4",$$slots:{default:[ys]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment),a=b(),h(s.$$.fragment),n=b(),l=E("figure"),h($.$$.fragment),v=b(),h(y.$$.fragment),A=b(),h(B.$$.fragment),c=b(),k=E("figure"),h(R.$$.fragment),L=b(),h(G.$$.fragment),Ze=b(),h(Z.$$.fragment),et=b(),Ee=E("figure"),h(ee.$$.fragment),tt=b(),h(te.$$.fragment),at=b(),h(ae.$$.fragment),st=b(),h(se.$$.fragment),nt=b(),Ge=E("figure"),h(ne.$$.fragment),lt=b(),h(le.$$.fragment),ot=b(),h(oe.$$.fragment),pt=b(),h(pe.$$.fragment),rt=b(),H=E("figure"),P=E("figcaption"),P.textContent=Rt,h(re.$$.fragment),it=b(),h(ie.$$.fragment),$t=b(),h($e.$$.fragment),ct=b(),h(ce.$$.fragment),mt=b(),W=E("figure"),O=E("figcaption"),O.textContent=Ut,h(me.$$.fragment),dt=b(),h(de.$$.fragment),ft=b(),h(fe.$$.fragment),ut=b(),D=E("figure"),z=E("figcaption"),z.textContent=Yt,h(ue.$$.fragment),Ft=b(),h(Fe.$$.fragment),_t=b(),h(_e.$$.fragment),gt=b(),Re=E("figure"),h(ge.$$.fragment),ht=b(),h(he.$$.fragment),yt=b(),h(ye.$$.fragment),wt=b(),Ue=E("figure"),h(we.$$.fragment),bt=b(),h(be.$$.fragment),xt=b(),h(xe.$$.fragment),vt=b(),J=E("figure"),K=E("figcaption"),K.textContent=Nt,h(ve.$$.fragment),St=b(),h(Se.$$.fragment),Ct=b(),h(Ce.$$.fragment),kt=b(),M=E("figure"),Q=E("figcaption"),Q.textContent=qt,h(ke.$$.fragment),Lt=b(),h(Le.$$.fragment),jt=b(),h(je.$$.fragment),Bt=b(),Ye=E("figure"),h(Be.$$.fragment),It=b(),h(Ie.$$.fragment),At=b(),V=E("figure"),X=E("figcaption"),X.textContent=Ht,h(Ae.$$.fragment),Tt=b(),h(Te.$$.fragment),this.h()},l(e){g(t.$$.fragment,e),a=w(e),g(s.$$.fragment,e),n=w(e),l=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var o=Y(l);g($.$$.fragment,o),o.forEach(p),v=w(e),g(y.$$.fragment,e),A=w(e),g(B.$$.fragment,e),c=w(e),k=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Je=Y(k);g(R.$$.fragment,Je),Je.forEach(p),L=w(e),g(G.$$.fragment,e),Ze=w(e),g(Z.$$.fragment,e),et=w(e),Ee=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Ke=Y(Ee);g(ee.$$.fragment,Ke),Ke.forEach(p),tt=w(e),g(te.$$.fragment,e),at=w(e),g(ae.$$.fragment,e),st=w(e),g(se.$$.fragment,e),nt=w(e),Ge=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Me=Y(Ge);g(ne.$$.fragment,Me),Me.forEach(p),lt=w(e),g(le.$$.fragment,e),ot=w(e),g(oe.$$.fragment,e),pt=w(e),g(pe.$$.fragment,e),rt=w(e),H=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Ne=Y(H);P=T(Ne,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(P)!=="svelte-47scrc"&&(P.textContent=Rt),g(re.$$.fragment,Ne),Ne.forEach(p),it=w(e),g(ie.$$.fragment,e),$t=w(e),g($e.$$.fragment,e),ct=w(e),g(ce.$$.fragment,e),mt=w(e),W=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var qe=Y(W);O=T(qe,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(O)!=="svelte-rn1ub9"&&(O.textContent=Ut),g(me.$$.fragment,qe),qe.forEach(p),dt=w(e),g(de.$$.fragment,e),ft=w(e),g(fe.$$.fragment,e),ut=w(e),D=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var He=Y(D);z=T(He,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(z)!=="svelte-10fusmu"&&(z.textContent=Yt),g(ue.$$.fragment,He),He.forEach(p),Ft=w(e),g(Fe.$$.fragment,e),_t=w(e),g(_e.$$.fragment,e),gt=w(e),Re=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Qe=Y(Re);g(ge.$$.fragment,Qe),Qe.forEach(p),ht=w(e),g(he.$$.fragment,e),yt=w(e),g(ye.$$.fragment,e),wt=w(e),Ue=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Ve=Y(Ue);g(we.$$.fragment,Ve),Ve.forEach(p),bt=w(e),g(be.$$.fragment,e),xt=w(e),g(xe.$$.fragment,e),vt=w(e),J=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Pe=Y(J);K=T(Pe,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(K)!=="svelte-1vg0u94"&&(K.textContent=Nt),g(ve.$$.fragment,Pe),Pe.forEach(p),St=w(e),g(Se.$$.fragment,e),Ct=w(e),g(Ce.$$.fragment,e),kt=w(e),M=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var We=Y(M);Q=T(We,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(Q)!=="svelte-m8yf0j"&&(Q.textContent=qt),g(ke.$$.fragment,We),We.forEach(p),Lt=w(e),g(Le.$$.fragment,e),jt=w(e),g(je.$$.fragment,e),Bt=w(e),Ye=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Xe=Y(Ye);g(Be.$$.fragment,Xe),Xe.forEach(p),It=w(e),g(Ie.$$.fragment,e),At=w(e),V=T(e,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Oe=Y(V);X=T(Oe,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),ze(X)!=="svelte-8numuo"&&(X.textContent=Ht),g(Ae.$$.fragment,Oe),Oe.forEach(p),Tt=w(e),g(Te.$$.fragment,e),this.h()},h(){x(l,"data-rehype-pretty-code-figure",""),x(k,"data-rehype-pretty-code-figure",""),x(Ee,"data-rehype-pretty-code-figure",""),x(Ge,"data-rehype-pretty-code-figure",""),x(P,"data-rehype-pretty-code-title",""),x(P,"data-language","jsonc"),x(P,"data-theme","Lambda Studio — Blackout"),x(H,"data-rehype-pretty-code-figure",""),x(H,"data-metadata",""),x(O,"data-rehype-pretty-code-title",""),x(O,"data-language","css"),x(O,"data-theme","Lambda Studio — Blackout"),x(W,"data-rehype-pretty-code-figure",""),x(W,"data-metadata",""),x(z,"data-rehype-pretty-code-title",""),x(z,"data-language","ts"),x(z,"data-theme","Lambda Studio — Blackout"),x(D,"data-rehype-pretty-code-figure",""),x(D,"data-metadata",""),x(Re,"data-rehype-pretty-code-figure",""),x(Ue,"data-rehype-pretty-code-figure",""),x(K,"data-rehype-pretty-code-title",""),x(K,"data-language","ts"),x(K,"data-theme","Lambda Studio — Blackout"),x(J,"data-rehype-pretty-code-figure",""),x(J,"data-metadata",""),x(Q,"data-rehype-pretty-code-title",""),x(Q,"data-language","js"),x(Q,"data-theme","Lambda Studio — Blackout"),x(M,"data-rehype-pretty-code-figure",""),x(M,"data-metadata",""),x(Ye,"data-rehype-pretty-code-figure",""),x(X,"data-rehype-pretty-code-title",""),x(X,"data-language","astro"),x(X,"data-theme","Lambda Studio — Blackout"),x(V,"data-rehype-pretty-code-figure",""),x(V,"data-metadata","")},m(e,o){_(t,e,o),r(e,a,o),_(s,e,o),r(e,n,o),r(e,l,o),_($,l,null),r(e,v,o),_(y,e,o),r(e,A,o),_(B,e,o),r(e,c,o),r(e,k,o),_(R,k,null),r(e,L,o),_(G,e,o),r(e,Ze,o),_(Z,e,o),r(e,et,o),r(e,Ee,o),_(ee,Ee,null),r(e,tt,o),_(te,e,o),r(e,at,o),_(ae,e,o),r(e,st,o),_(se,e,o),r(e,nt,o),r(e,Ge,o),_(ne,Ge,null),r(e,lt,o),_(le,e,o),r(e,ot,o),_(oe,e,o),r(e,pt,o),_(pe,e,o),r(e,rt,o),r(e,H,o),De(H,P),_(re,H,null),r(e,it,o),_(ie,e,o),r(e,$t,o),_($e,e,o),r(e,ct,o),_(ce,e,o),r(e,mt,o),r(e,W,o),De(W,O),_(me,W,null),r(e,dt,o),_(de,e,o),r(e,ft,o),_(fe,e,o),r(e,ut,o),r(e,D,o),De(D,z),_(ue,D,null),r(e,Ft,o),_(Fe,e,o),r(e,_t,o),_(_e,e,o),r(e,gt,o),r(e,Re,o),_(ge,Re,null),r(e,ht,o),_(he,e,o),r(e,yt,o),_(ye,e,o),r(e,wt,o),r(e,Ue,o),_(we,Ue,null),r(e,bt,o),_(be,e,o),r(e,xt,o),_(xe,e,o),r(e,vt,o),r(e,J,o),De(J,K),_(ve,J,null),r(e,St,o),_(Se,e,o),r(e,Ct,o),_(Ce,e,o),r(e,kt,o),r(e,M,o),De(M,Q),_(ke,M,null),r(e,Lt,o),_(Le,e,o),r(e,jt,o),_(je,e,o),r(e,Bt,o),r(e,Ye,o),_(Be,Ye,null),r(e,It,o),_(Ie,e,o),r(e,At,o),r(e,V,o),De(V,X),_(Ae,V,null),r(e,Tt,o),_(Te,e,o),Et=!0},p(e,o){const Je={};o&1&&(Je.$$scope={dirty:o,ctx:e}),t.$set(Je);const Ke={};o&1&&(Ke.$$scope={dirty:o,ctx:e}),s.$set(Ke);const Me={};o&1&&(Me.$$scope={dirty:o,ctx:e}),$.$set(Me);const Ne={};o&1&&(Ne.$$scope={dirty:o,ctx:e}),y.$set(Ne);const qe={};o&1&&(qe.$$scope={dirty:o,ctx:e}),B.$set(qe);const He={};o&1&&(He.$$scope={dirty:o,ctx:e}),R.$set(He);const Qe={};o&1&&(Qe.$$scope={dirty:o,ctx:e}),G.$set(Qe);const Ve={};o&1&&(Ve.$$scope={dirty:o,ctx:e}),Z.$set(Ve);const Pe={};o&1&&(Pe.$$scope={dirty:o,ctx:e}),ee.$set(Pe);const We={};o&1&&(We.$$scope={dirty:o,ctx:e}),te.$set(We);const Xe={};o&1&&(Xe.$$scope={dirty:o,ctx:e}),ae.$set(Xe);const Oe={};o&1&&(Oe.$$scope={dirty:o,ctx:e}),se.$set(Oe);const Pt={};o&1&&(Pt.$$scope={dirty:o,ctx:e}),ne.$set(Pt);const Wt={};o&1&&(Wt.$$scope={dirty:o,ctx:e}),le.$set(Wt);const Ot={};o&1&&(Ot.$$scope={dirty:o,ctx:e}),oe.$set(Ot);const Dt={};o&1&&(Dt.$$scope={dirty:o,ctx:e}),pe.$set(Dt);const zt={};o&1&&(zt.$$scope={dirty:o,ctx:e}),re.$set(zt);const Jt={};o&1&&(Jt.$$scope={dirty:o,ctx:e}),ie.$set(Jt);const Kt={};o&1&&(Kt.$$scope={dirty:o,ctx:e}),$e.$set(Kt);const Mt={};o&1&&(Mt.$$scope={dirty:o,ctx:e}),ce.$set(Mt);const Qt={};o&1&&(Qt.$$scope={dirty:o,ctx:e}),me.$set(Qt);const Vt={};o&1&&(Vt.$$scope={dirty:o,ctx:e}),de.$set(Vt);const Xt={};o&1&&(Xt.$$scope={dirty:o,ctx:e}),fe.$set(Xt);const Zt={};o&1&&(Zt.$$scope={dirty:o,ctx:e}),ue.$set(Zt);const ea={};o&1&&(ea.$$scope={dirty:o,ctx:e}),Fe.$set(ea);const ta={};o&1&&(ta.$$scope={dirty:o,ctx:e}),_e.$set(ta);const aa={};o&1&&(aa.$$scope={dirty:o,ctx:e}),ge.$set(aa);const sa={};o&1&&(sa.$$scope={dirty:o,ctx:e}),he.$set(sa);const na={};o&1&&(na.$$scope={dirty:o,ctx:e}),ye.$set(na);const la={};o&1&&(la.$$scope={dirty:o,ctx:e}),we.$set(la);const oa={};o&1&&(oa.$$scope={dirty:o,ctx:e}),be.$set(oa);const pa={};o&1&&(pa.$$scope={dirty:o,ctx:e}),xe.$set(pa);const ra={};o&1&&(ra.$$scope={dirty:o,ctx:e}),ve.$set(ra);const ia={};o&1&&(ia.$$scope={dirty:o,ctx:e}),Se.$set(ia);const $a={};o&1&&($a.$$scope={dirty:o,ctx:e}),Ce.$set($a);const ca={};o&1&&(ca.$$scope={dirty:o,ctx:e}),ke.$set(ca);const ma={};o&1&&(ma.$$scope={dirty:o,ctx:e}),Le.$set(ma);const da={};o&1&&(da.$$scope={dirty:o,ctx:e}),je.$set(da);const fa={};o&1&&(fa.$$scope={dirty:o,ctx:e}),Be.$set(fa);const ua={};o&1&&(ua.$$scope={dirty:o,ctx:e}),Ie.$set(ua);const Fa={};o&1&&(Fa.$$scope={dirty:o,ctx:e}),Ae.$set(Fa);const _a={};o&1&&(_a.$$scope={dirty:o,ctx:e}),Te.$set(_a)},i(e){Et||(F(t.$$.fragment,e),F(s.$$.fragment,e),F($.$$.fragment,e),F(y.$$.fragment,e),F(B.$$.fragment,e),F(R.$$.fragment,e),F(G.$$.fragment,e),F(Z.$$.fragment,e),F(ee.$$.fragment,e),F(te.$$.fragment,e),F(ae.$$.fragment,e),F(se.$$.fragment,e),F(ne.$$.fragment,e),F(le.$$.fragment,e),F(oe.$$.fragment,e),F(pe.$$.fragment,e),F(re.$$.fragment,e),F(ie.$$.fragment,e),F($e.$$.fragment,e),F(ce.$$.fragment,e),F(me.$$.fragment,e),F(de.$$.fragment,e),F(fe.$$.fragment,e),F(ue.$$.fragment,e),F(Fe.$$.fragment,e),F(_e.$$.fragment,e),F(ge.$$.fragment,e),F(he.$$.fragment,e),F(ye.$$.fragment,e),F(we.$$.fragment,e),F(be.$$.fragment,e),F(xe.$$.fragment,e),F(ve.$$.fragment,e),F(Se.$$.fragment,e),F(Ce.$$.fragment,e),F(ke.$$.fragment,e),F(Le.$$.fragment,e),F(je.$$.fragment,e),F(Be.$$.fragment,e),F(Ie.$$.fragment,e),F(Ae.$$.fragment,e),F(Te.$$.fragment,e),Et=!0)},o(e){u(t.$$.fragment,e),u(s.$$.fragment,e),u($.$$.fragment,e),u(y.$$.fragment,e),u(B.$$.fragment,e),u(R.$$.fragment,e),u(G.$$.fragment,e),u(Z.$$.fragment,e),u(ee.$$.fragment,e),u(te.$$.fragment,e),u(ae.$$.fragment,e),u(se.$$.fragment,e),u(ne.$$.fragment,e),u(le.$$.fragment,e),u(oe.$$.fragment,e),u(pe.$$.fragment,e),u(re.$$.fragment,e),u(ie.$$.fragment,e),u($e.$$.fragment,e),u(ce.$$.fragment,e),u(me.$$.fragment,e),u(de.$$.fragment,e),u(fe.$$.fragment,e),u(ue.$$.fragment,e),u(Fe.$$.fragment,e),u(_e.$$.fragment,e),u(ge.$$.fragment,e),u(he.$$.fragment,e),u(ye.$$.fragment,e),u(we.$$.fragment,e),u(be.$$.fragment,e),u(xe.$$.fragment,e),u(ve.$$.fragment,e),u(Se.$$.fragment,e),u(Ce.$$.fragment,e),u(ke.$$.fragment,e),u(Le.$$.fragment,e),u(je.$$.fragment,e),u(Be.$$.fragment,e),u(Ie.$$.fragment,e),u(Ae.$$.fragment,e),u(Te.$$.fragment,e),Et=!1},d(e){e&&(p(a),p(n),p(l),p(v),p(A),p(c),p(k),p(L),p(Ze),p(et),p(Ee),p(tt),p(at),p(st),p(nt),p(Ge),p(lt),p(ot),p(pt),p(rt),p(H),p(it),p($t),p(ct),p(mt),p(W),p(dt),p(ft),p(ut),p(D),p(Ft),p(_t),p(gt),p(Re),p(ht),p(yt),p(wt),p(Ue),p(bt),p(xt),p(vt),p(J),p(St),p(Ct),p(kt),p(M),p(Lt),p(jt),p(Bt),p(Ye),p(It),p(At),p(V),p(Tt)),f(t,e),f(s,e),f($),f(y,e),f(B,e),f(R),f(G,e),f(Z,e),f(ee),f(te,e),f(ae,e),f(se,e),f(ne),f(le,e),f(oe,e),f(pe,e),f(re),f(ie,e),f($e,e),f(ce,e),f(me),f(de,e),f(fe,e),f(ue),f(Fe,e),f(_e,e),f(ge),f(he,e),f(ye,e),f(we),f(be,e),f(xe,e),f(ve),f(Se,e),f(Ce,e),f(ke),f(Le,e),f(je,e),f(Be),f(Ie,e),f(Ae),f(Te,e)}}}function bs(i){let t,a,s,n;return t=new Sa({props:{id:"setup-your-project",$$slots:{default:[Ca]},$$scope:{ctx:i}}}),s=new va({props:{$$slots:{default:[ws]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment),a=b(),h(s.$$.fragment)},l(l){g(t.$$.fragment,l),a=w(l),g(s.$$.fragment,l)},m(l,$){_(t,l,$),r(l,a,$),_(s,l,$),n=!0},p(l,$){const v={};$&1&&(v.$$scope={dirty:$,ctx:l}),t.$set(v);const y={};$&1&&(y.$$scope={dirty:$,ctx:l}),s.$set(y)},i(l){n||(F(t.$$.fragment,l),F(s.$$.fragment,l),n=!0)},o(l){u(t.$$.fragment,l),u(s.$$.fragment,l),n=!1},d(l){l&&p(a),f(t,l),f(s,l)}}}function xs(i){let t,a;return t=new xa({props:{metadata:ha,$$slots:{default:[bs]},$$scope:{ctx:i}}}),{c(){h(t.$$.fragment)},l(s){g(t.$$.fragment,s)},m(s,n){_(t,s,n),a=!0},p(s,[n]){const l={};n&1&&(l.$$scope={dirty:n,ctx:s}),t.$set(l)},i(s){a||(F(t.$$.fragment,s),a=!0)},o(s){u(t.$$.fragment,s),a=!1},d(s){f(t,s)}}}const ha={title:"Astro",description:"How to setup shadcn-svelte in an Astro project."},{title:Ps,description:Ws}=ha;class Os extends wa{constructor(t){super(),ba(this,t,null,xs,ya,{})}}export{Os as default,ha as metadata};
