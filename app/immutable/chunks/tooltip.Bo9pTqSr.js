import{s as N,d as F,n as E,i as m,$ as R,P as x,a0 as I,p as b,c as L,e as S,g as B,h as C,j as k,f as H,t as U}from"./scheduler.D_DiFEDa.js";import{S as Q,i as W,d,t as $,a as f,m as _,c as g,b as h}from"./index.uqldPLAT.js";import{B as X}from"./blueprint.Dy4glII9.js";import"./form-demo.CdCUS8IN.js";import"./index.C7oMflsj.js";import"./utils.DREkexI4.js";import{C as Y}from"./component-preview.D8Bv0Erw.js";import"./entry.BsU3B_FI.js";import{M as Z}from"./manual-install.D7SsDgnQ.js";import"./config.RmrLwRmw.js";import"./ctx.umHR9d8j.js";import"./index.LrWe5HSb.js";import"./root.svelte_svelte_type_style_lang.BW7dnU17.js";import{P as G}from"./pre.BCHLVfkL.js";import{H as V}from"./h2.DtBDGVvi.js";import{O as z}from"./ol.oT7_YDmp.js";import{L as J}from"./li.DzA--h_r.js";function ss(r){let s,e=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Tooltip </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/tooltip/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Hover</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span><span style="color:#FFF">Add to library</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new I(!1),a=x(),this.h()},l(t){s=R(t,!1),a=x(),this.h()},h(){s.a=a},m(t,l){s.m(e,t,l),m(t,a,l)},p:E,d(t){t&&(F(a),s.d())}}}function as(r){let s,e=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Tooltip </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/tooltip/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Hover</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span><span style="color:#FFF">Add to library</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new I(!1),a=x(),this.h()},l(t){s=R(t,!1),a=x(),this.h()},h(){s.a=a},m(t,l){s.m(e,t,l),m(t,a,l)},p:E,d(t){t&&(F(a),s.d())}}}function ts(r){let s,e,a,t,l,c,u;return e=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ss]},$$scope:{ctx:r}}}),t=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[as]},$$scope:{ctx:r}}}),{c(){s=C("figure"),h(e.$$.fragment),a=C("figure"),h(t.$$.fragment),l=k(),c=C("div"),this.h()},l(n){s=L(n,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var p=S(s);g(e.$$.fragment,p),p.forEach(F),a=L(n,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var y=S(a);g(t.$$.fragment,y),y.forEach(F),l=B(n),c=L(n,"DIV",{}),S(c).forEach(F),this.h()},h(){b(s,"__src__","../src/lib/registry/new-york/example/tooltip-demo.svelte"),b(s,"__style__","new-york"),b(s,"class","code"),b(s,"data-rehype-pretty-code-figure",""),b(a,"__src__","../src/lib/registry/default/example/tooltip-demo.svelte"),b(a,"__style__","default"),b(a,"class","code"),b(a,"data-rehype-pretty-code-figure","")},m(n,p){m(n,s,p),_(e,s,null),m(n,a,p),_(t,a,null),m(n,l,p),m(n,c,p),u=!0},p(n,p){const y={};p&1&&(y.$$scope={dirty:p,ctx:n}),e.$set(y);const w={};p&1&&(w.$$scope={dirty:p,ctx:n}),t.$set(w)},i(n){u||(f(e.$$.fragment,n),f(t.$$.fragment,n),u=!0)},o(n){$(e.$$.fragment,n),$(t.$$.fragment,n),u=!1},d(n){n&&(F(s),F(a),F(l),F(c)),d(e),d(t)}}}function es(r){let s;return{c(){s=U("Installation")},l(e){s=H(e,"Installation")},m(e,a){m(e,s,a)},d(e){e&&F(s)}}}function ns(r){let s,e='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> tooltip</span></span></code>',a;return{c(){s=new I(!1),a=x(),this.h()},l(t){s=R(t,!1),a=x(),this.h()},h(){s.a=a},m(t,l){s.m(e,t,l),m(t,a,l)},p:E,d(t){t&&(F(a),s.d())}}}function ls(r){let s,e,a="<code>bits-ui</code>",t;return{c(){s=U("Install "),e=new I(!1),t=U(":"),this.h()},l(l){s=H(l,"Install "),e=R(l,!1),t=H(l,":"),this.h()},h(){e.a=t},m(l,c){m(l,s,c),e.m(a,l,c),m(l,t,c)},p:E,d(l){l&&(F(s),e.d(),F(t))}}}function os(r){let s,e;return s=new J({props:{$$slots:{default:[ls]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,t){_(s,a,t),e=!0},p(a,t){const l={};t&1&&(l.$$scope={dirty:t,ctx:a}),s.$set(l)},i(a){e||(f(s.$$.fragment,a),e=!0)},o(a){$(s.$$.fragment,a),e=!1},d(a){d(s,a)}}}function ps(r){let s,e='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> bits-ui</span></span></code>',a;return{c(){s=new I(!1),a=x(),this.h()},l(t){s=R(t,!1),a=x(),this.h()},h(){s.a=a},m(t,l){s.m(e,t,l),m(t,a,l)},p:E,d(t){t&&(F(a),s.d())}}}function Fs(r){let s;return{c(){s=U("Copy and paste the component source files linked at the top of this page into your project.")},l(e){s=H(e,"Copy and paste the component source files linked at the top of this page into your project.")},m(e,a){m(e,s,a)},d(e){e&&F(s)}}}function rs(r){let s,e;return s=new J({props:{$$slots:{default:[Fs]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,t){_(s,a,t),e=!0},p(a,t){const l={};t&1&&(l.$$scope={dirty:t,ctx:a}),s.$set(l)},i(a){e||(f(s.$$.fragment,a),e=!0)},o(a){$(s.$$.fragment,a),e=!1},d(a){d(s,a)}}}function cs(r){let s,e,a,t,l,c,u;return s=new z({props:{$$slots:{default:[os]},$$scope:{ctx:r}}}),t=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ps]},$$scope:{ctx:r}}}),c=new z({props:{start:"2",$$slots:{default:[rs]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment),e=k(),a=C("figure"),h(t.$$.fragment),l=k(),h(c.$$.fragment),this.h()},l(n){g(s.$$.fragment,n),e=B(n),a=L(n,"FIGURE",{"data-rehype-pretty-code-figure":!0});var p=S(a);g(t.$$.fragment,p),p.forEach(F),l=B(n),g(c.$$.fragment,n),this.h()},h(){b(a,"data-rehype-pretty-code-figure","")},m(n,p){_(s,n,p),m(n,e,p),m(n,a,p),_(t,a,null),m(n,l,p),_(c,n,p),u=!0},p(n,p){const y={};p&1&&(y.$$scope={dirty:p,ctx:n}),s.$set(y);const w={};p&1&&(w.$$scope={dirty:p,ctx:n}),t.$set(w);const v={};p&1&&(v.$$scope={dirty:p,ctx:n}),c.$set(v)},i(n){u||(f(s.$$.fragment,n),f(t.$$.fragment,n),f(c.$$.fragment,n),u=!0)},o(n){$(s.$$.fragment,n),$(t.$$.fragment,n),$(c.$$.fragment,n),u=!1},d(n){n&&(F(e),F(a),F(l)),d(s,n),d(t),d(c,n)}}}function is(r){let s;return{c(){s=U("Usage")},l(e){s=H(e,"Usage")},m(e,a){m(e,s,a)},d(e){e&&F(s)}}}function ms(r){let s,e=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Tooltip </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/tooltip"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span><span style="color:#FFF">Hover</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span><span style="color:#FFF">Add to library</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Tooltip</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new I(!1),a=x(),this.h()},l(t){s=R(t,!1),a=x(),this.h()},h(){s.a=a},m(t,l){s.m(e,t,l),m(t,a,l)},p:E,d(t){t&&(F(a),s.d())}}}function ys(r){let s,e,a,t,l,c,u,n,p,y,w,v,T,A;return s=new Y({props:{name:"tooltip-demo",$$slots:{default:[ts]},$$scope:{ctx:r}}}),a=new V({props:{id:"installation",$$slots:{default:[es]},$$scope:{ctx:r}}}),c=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ns]},$$scope:{ctx:r}}}),n=new Z({props:{$$slots:{default:[cs]},$$scope:{ctx:r}}}),y=new V({props:{id:"usage",$$slots:{default:[is]},$$scope:{ctx:r}}}),T=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ms]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment),e=k(),h(a.$$.fragment),t=k(),l=C("figure"),h(c.$$.fragment),u=k(),h(n.$$.fragment),p=k(),h(y.$$.fragment),w=k(),v=C("figure"),h(T.$$.fragment),this.h()},l(o){g(s.$$.fragment,o),e=B(o),g(a.$$.fragment,o),t=B(o),l=L(o,"FIGURE",{"data-rehype-pretty-code-figure":!0});var i=S(l);g(c.$$.fragment,i),i.forEach(F),u=B(o),g(n.$$.fragment,o),p=B(o),g(y.$$.fragment,o),w=B(o),v=L(o,"FIGURE",{"data-rehype-pretty-code-figure":!0});var j=S(v);g(T.$$.fragment,j),j.forEach(F),this.h()},h(){b(l,"data-rehype-pretty-code-figure",""),b(v,"data-rehype-pretty-code-figure","")},m(o,i){_(s,o,i),m(o,e,i),_(a,o,i),m(o,t,i),m(o,l,i),_(c,l,null),m(o,u,i),_(n,o,i),m(o,p,i),_(y,o,i),m(o,w,i),m(o,v,i),_(T,v,null),A=!0},p(o,i){const j={};i&1&&(j.$$scope={dirty:i,ctx:o}),s.$set(j);const P={};i&1&&(P.$$scope={dirty:i,ctx:o}),a.$set(P);const M={};i&1&&(M.$$scope={dirty:i,ctx:o}),c.$set(M);const O={};i&1&&(O.$$scope={dirty:i,ctx:o}),n.$set(O);const q={};i&1&&(q.$$scope={dirty:i,ctx:o}),y.$set(q);const D={};i&1&&(D.$$scope={dirty:i,ctx:o}),T.$set(D)},i(o){A||(f(s.$$.fragment,o),f(a.$$.fragment,o),f(c.$$.fragment,o),f(n.$$.fragment,o),f(y.$$.fragment,o),f(T.$$.fragment,o),A=!0)},o(o){$(s.$$.fragment,o),$(a.$$.fragment,o),$(c.$$.fragment,o),$(n.$$.fragment,o),$(y.$$.fragment,o),$(T.$$.fragment,o),A=!1},d(o){o&&(F(e),F(t),F(l),F(u),F(p),F(w),F(v)),d(s,o),d(a,o),d(c),d(n,o),d(y,o),d(T)}}}function us(r){let s,e;return s=new X({props:{metadata:K,$$slots:{default:[ys]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,t){_(s,a,t),e=!0},p(a,[t]){const l={};t&1&&(l.$$scope={dirty:t,ctx:a}),s.$set(l)},i(a){e||(f(s.$$.fragment,a),e=!0)},o(a){$(s.$$.fragment,a),e=!1},d(a){d(s,a)}}}const K={title:"Tooltip",description:"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",component:!0,source:"https://github.com/huntabyte/shadcn-svelte/tree/main/apps/www/src/lib/registry/default/ui/tooltip",bits:"https://www.bits-ui.com/docs/components/tooltip"},{title:Rs,description:Is,component:js,source:Hs,bits:Us}=K;class Gs extends Q{constructor(s){super(),W(this,s,null,us,N,{})}}export{Gs as default,K as metadata};
