import{s as Ps,d as t,n as E,i as y,$ as j,P as w,a0 as D,p as i,c as L,e as k,g as v,h as B,j as S,f as U,t as G}from"./scheduler.D_DiFEDa.js";import{S as Ts,i as Hs,d as f,t as _,a as $,m as g,c as h,b}from"./index.uqldPLAT.js";import{B as Os}from"./blueprint.Dy4glII9.js";import"./form-demo.CdCUS8IN.js";import"./index.C7oMflsj.js";import"./utils.DREkexI4.js";import{C as Q}from"./component-preview.D8Bv0Erw.js";import"./entry.BsU3B_FI.js";import{M as Ws}from"./manual-install.D7SsDgnQ.js";import"./config.RmrLwRmw.js";import"./ctx.umHR9d8j.js";import"./index.LrWe5HSb.js";import"./root.svelte_svelte_type_style_lang.BW7dnU17.js";import{P as I}from"./pre.BCHLVfkL.js";import{H as $s}from"./h2.DtBDGVvi.js";import{O as Js}from"./ol.oT7_YDmp.js";import{L as Ms}from"./li.DzA--h_r.js";import{H as Z}from"./h3.gq_MzxDM.js";function Ns(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-xs"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function Ys(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-xs"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function qs(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ns]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ys]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-demo.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-demo.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function As(c){let s;return{c(){s=G("Installation")},l(l){s=U(l,"Installation")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function Ks(c){let s,l='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> input</span></span></code>',a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function Qs(c){let s;return{c(){s=G("Copy and paste the component source files linked at the top of this page into your project.")},l(l){s=U(l,"Copy and paste the component source files linked at the top of this page into your project.")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function Xs(c){let s,l;return s=new Ms({props:{$$slots:{default:[Qs]},$$scope:{ctx:c}}}),{c(){b(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,n){g(s,a,n),l=!0},p(a,n){const e={};n&2&&(e.$$scope={dirty:n,ctx:a}),s.$set(e)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){_(s.$$.fragment,a),l=!1},d(a){f(s,a)}}}function Zs(c){let s,l;return s=new Js({props:{$$slots:{default:[Xs]},$$scope:{ctx:c}}}),{c(){b(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,n){g(s,a,n),l=!0},p(a,n){const e={};n&2&&(e.$$scope={dirty:n,ctx:a}),s.$set(e)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){_(s.$$.fragment,a),l=!1},d(a){f(s,a)}}}function sa(c){let s;return{c(){s=G("Usage")},l(l){s=U(l,"Usage")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function aa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input </span><span style="color:#FFF8">/></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function na(c){let s;return{c(){s=G("Examples")},l(l){s=U(l,"Examples")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function la(c){let s;return{c(){s=G("Default")},l(l){s=U(l,"Default")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function Fa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-xs"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function pa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-xs"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function ea(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Fa]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[pa]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-demo.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-demo.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ta(c){let s;return{c(){s=G("Disabled")},l(l){s=U(l,"Disabled")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function oa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input disabled type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-xs"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function ra(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Input disabled type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-sm"</span><span style="color:#FFF8"> /></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function ca(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[oa]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ra]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-disabled.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-disabled.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ya(c){let s;return{c(){s=G("With Label")},l(l){s=U(l,"With Label")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function ia(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"grid w-full max-w-sm items-center gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8">></span><span style="color:#FFF">Email</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function ma(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-full max-w-sm flex-col gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8">></span><span style="color:#FFF">Email</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function da(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ia]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ma]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-with-label.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-with-label.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ua(c){let s;return{c(){s=G("With Text")},l(l){s=U(l,"With Text")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function fa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"grid w-full max-w-sm items-center gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email-2"</span><span style="color:#FFF8">></span><span style="color:#FFF">Email</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email-2"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">p class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm text-muted-foreground"</span><span style="color:#FFF8">></span><span style="color:#FFF">Enter your email address.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function _a(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-full max-w-sm flex-col gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email-2"</span><span style="color:#FFF8">></span><span style="color:#FFF">Email</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email-2"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">p class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm text-muted-foreground"</span><span style="color:#FFF8">></span><span style="color:#FFF">Enter your email address.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function $a(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[fa]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[_a]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-with-text.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-with-text.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ga(c){let s;return{c(){s=G("With Button")},l(l){s=U(l,"With Button")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function ha(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">form class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-full max-w-sm items-center space-x-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Button type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"submit"</span><span style="color:#FFF8">></span><span style="color:#FFF">Subscribe</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">form</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function ba(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">form class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-full max-w-sm items-center space-x-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF"> placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"email"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Button type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"submit"</span><span style="color:#FFF8">></span><span style="color:#FFF">Subscribe</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">form</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function wa(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ha]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ba]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-with-button.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-with-button.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function xa(c){let s;return{c(){s=G("File")},l(l){s=U(l,"File")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function va(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"grid w-full max-w-sm items-center gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"picture"</span><span style="color:#FFF8">></span><span style="color:#FFF">Picture</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"picture"</span><span style="color:#FFF"> type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"file"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function Sa(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Label </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/label/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"grid w-full max-w-sm items-center gap-1.5"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Label for</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"picture"</span><span style="color:#FFF8">></span><span style="color:#FFF">Picture</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Input id</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"picture"</span><span style="color:#FFF"> type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"file"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function La(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[va]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Sa]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/input-file.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/input-file.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ka(c){let s;return{c(){s=G("Form")},l(l){s=U(l,"Form")},m(l,a){y(l,s,a)},d(l){l&&t(s)}}}function Ba(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF"> context</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"module"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> z </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "zod"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> const</span><span style="color:#FFF"> formSchema </span><span style="color:#FFF8">=</span><span style="color:#FFF"> z</span><span style="color:#FFF8">.</span><span style="color:#FFF">object</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF">    username</span><span style="color:#FFF8">:</span><span style="color:#FFF"> z</span><span style="color:#FFF8">.</span><span style="color:#FFF">string</span><span style="color:#FFF8">().</span><span style="color:#FFF">min</span><span style="color:#FFF8">(2).</span><span style="color:#FFF">max</span><span style="color:#FFF8">(50)</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> type</span><span style="color:#FFF;font-weight:bold"> FormSchema</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> typeof</span><span style="color:#FFF"> formSchema</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> SuperDebug</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> Infer</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> SuperValidated</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    superForm</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "sveltekit-superforms"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> zodClient </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "sveltekit-superforms/adapters"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toast </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-sonner"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> browser </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$app/environment"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Form </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/form/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> data</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> SuperValidated</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF;font-weight:bold">Infer</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF;font-weight:bold">FormSchema</span><span style="color:#FFF8">>>;</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> data </span><span style="color:#FFF8">as</span><span style="color:#FFF"> form </span><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> form </span><span style="color:#FFF8">=</span><span style="color:#FFF"> superForm</span><span style="color:#FFF8">(</span><span style="color:#FFF">data</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    validators</span><span style="color:#FFF8">:</span><span style="color:#FFF"> zodClient</span><span style="color:#FFF8">(</span><span style="color:#FFF">formSchema</span><span style="color:#FFF8">),</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">    onUpdated</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> (&#123;</span><span style="color:#FFF"> form</span><span style="color:#FFF8">:</span><span style="color:#FFF"> f </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">f</span><span style="color:#FFF8">.</span><span style="color:#FFF">valid</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">success</span><span style="color:#FFF8">(</span><span style="color:#FFF8">&#96;You submitted $&#123;</span><span style="color:#FFF">JSON</span><span style="color:#FFF8">.</span><span style="color:#FFF">stringify</span><span style="color:#FFF8">(</span><span style="color:#FFF">f</span><span style="color:#FFF8">.</span><span style="color:#FFF">data</span><span style="color:#FFF8">, null, 2)</span><span style="color:#FFF8">&#125;&#96;</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span><span style="color:#FFF8"> else</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">error</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Please fix the errors in the form."</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> form</span><span style="color:#FFF8">:</span><span style="color:#FFF"> formData</span><span style="color:#FFF8">,</span><span style="color:#FFF"> enhance </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> form</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">form action</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/?/username"</span><span style="color:#FFF"> method</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"POST"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-2/3 space-y-6"</span><span style="color:#FFF8"> use:</span><span style="color:#FFF">enhance</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Field &#123;form&#125; name</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"username"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Control </span><span style="color:#FFF8">let:</span><span style="color:#FFF">attrs</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span><span style="color:#FFF">Username</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Input &#123;</span><span style="color:#FFF8">...</span><span style="color:#FFF">attrs&#125; </span><span style="color:#FFF8">bind:</span><span style="color:#FFF;font-weight:bold">value</span><span style="color:#FFF8">=&#123;$</span><span style="color:#FFF">formData</span><span style="color:#FFF8">.</span><span style="color:#FFF">username</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Control</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span><span style="color:#FFF">This is your public display name.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">FieldErrors </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Field</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span><span style="color:#FFF">Submit</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &#123;#if</span><span style="color:#FFF"> browser</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">SuperDebug data</span><span style="color:#FFF8">=&#123;$</span><span style="color:#FFF">formData</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &#123;/if&#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">form</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function Ia(c){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF"> context</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"module"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> z </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "zod"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> const</span><span style="color:#FFF"> formSchema </span><span style="color:#FFF8">=</span><span style="color:#FFF"> z</span><span style="color:#FFF8">.</span><span style="color:#FFF">object</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF">    username</span><span style="color:#FFF8">:</span><span style="color:#FFF"> z</span><span style="color:#FFF8">.</span><span style="color:#FFF">string</span><span style="color:#FFF8">().</span><span style="color:#FFF">min</span><span style="color:#FFF8">(2).</span><span style="color:#FFF">max</span><span style="color:#FFF8">(50)</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> type</span><span style="color:#FFF;font-weight:bold"> FormSchema</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> typeof</span><span style="color:#FFF"> formSchema</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> SuperDebug</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> Infer</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> SuperValidated</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    superForm</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "sveltekit-superforms"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> zodClient </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "sveltekit-superforms/adapters"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toast </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-sonner"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> browser </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$app/environment"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Form </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/form/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Input </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/input/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> data</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> SuperValidated</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF;font-weight:bold">Infer</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF;font-weight:bold">FormSchema</span><span style="color:#FFF8">>>;</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> data </span><span style="color:#FFF8">as</span><span style="color:#FFF"> form </span><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> form </span><span style="color:#FFF8">=</span><span style="color:#FFF"> superForm</span><span style="color:#FFF8">(</span><span style="color:#FFF">data</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    validators</span><span style="color:#FFF8">:</span><span style="color:#FFF"> zodClient</span><span style="color:#FFF8">(</span><span style="color:#FFF">formSchema</span><span style="color:#FFF8">),</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">    onUpdated</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> (&#123;</span><span style="color:#FFF"> form</span><span style="color:#FFF8">:</span><span style="color:#FFF"> f </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">f</span><span style="color:#FFF8">.</span><span style="color:#FFF">valid</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">success</span><span style="color:#FFF8">(</span><span style="color:#FFF8">&#96;You submitted $&#123;</span><span style="color:#FFF">JSON</span><span style="color:#FFF8">.</span><span style="color:#FFF">stringify</span><span style="color:#FFF8">(</span><span style="color:#FFF">f</span><span style="color:#FFF8">.</span><span style="color:#FFF">data</span><span style="color:#FFF8">, null, 2)</span><span style="color:#FFF8">&#125;&#96;</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span><span style="color:#FFF8"> else</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">error</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Please fix the errors in the form."</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> form</span><span style="color:#FFF8">:</span><span style="color:#FFF"> formData</span><span style="color:#FFF8">,</span><span style="color:#FFF"> enhance </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> form</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">form action</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/?/username"</span><span style="color:#FFF"> method</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"POST"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-2/3 space-y-6"</span><span style="color:#FFF8"> use:</span><span style="color:#FFF">enhance</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Field &#123;form&#125; name</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"username"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Control </span><span style="color:#FFF8">let:</span><span style="color:#FFF">attrs</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span><span style="color:#FFF">Username</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Input &#123;</span><span style="color:#FFF8">...</span><span style="color:#FFF">attrs&#125; </span><span style="color:#FFF8">bind:</span><span style="color:#FFF;font-weight:bold">value</span><span style="color:#FFF8">=&#123;$</span><span style="color:#FFF">formData</span><span style="color:#FFF8">.</span><span style="color:#FFF">username</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Control</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span><span style="color:#FFF">This is your public display name.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">FieldErrors </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Field</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span><span style="color:#FFF">Submit</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Form</span><span style="color:#FFF8">.</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &#123;#if</span><span style="color:#FFF"> browser</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">SuperDebug data</span><span style="color:#FFF8">=&#123;$</span><span style="color:#FFF">formData</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &#123;/if&#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">form</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new D(!1),a=w(),this.h()},l(n){s=j(n,!1),a=w(),this.h()},h(){s.a=a},m(n,e){s.m(l,n,e),y(n,a,e)},p:E,d(n){n&&(t(a),s.d())}}}function Ea(c){let s,l,a,n,e,m,u;return l=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ba]},$$scope:{ctx:c}}}),n=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ia]},$$scope:{ctx:c}}}),{c(){s=B("figure"),b(l.$$.fragment),a=B("figure"),b(n.$$.fragment),e=S(),m=B("div"),this.h()},l(F){s=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=k(s);h(l.$$.fragment,o),o.forEach(t),a=L(F,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=k(a);h(n.$$.fragment,d),d.forEach(t),e=v(F),m=L(F,"DIV",{}),k(m).forEach(t),this.h()},h(){i(s,"__src__","../src/lib/registry/new-york/example/form-demo.svelte"),i(s,"__style__","new-york"),i(s,"class","code"),i(s,"data-rehype-pretty-code-figure",""),i(a,"__src__","../src/lib/registry/default/example/form-demo.svelte"),i(a,"__style__","default"),i(a,"class","code"),i(a,"data-rehype-pretty-code-figure","")},m(F,o){y(F,s,o),g(l,s,null),y(F,a,o),g(n,a,null),y(F,e,o),y(F,m,o),u=!0},p(F,o){const d={};o&2&&(d.$$scope={dirty:o,ctx:F}),l.$set(d);const x={};o&2&&(x.$$scope={dirty:o,ctx:F}),n.$set(x)},i(F){u||($(l.$$.fragment,F),$(n.$$.fragment,F),u=!0)},o(F){_(l.$$.fragment,F),_(n.$$.fragment,F),u=!1},d(F){F&&(t(s),t(a),t(e),t(m)),f(l),f(n)}}}function ja(c){let s,l,a,n,e,m,u,F,o,d,x,X,R,as,C,ns,z,ls,V,Fs,P,ps,T,es,H,ts,O,os,W,rs,J,cs,M,ys,N,is,Y,ms,q,ds,A,us,K,fs;return s=new Q({props:{name:"input-demo",$$slots:{default:[qs]},$$scope:{ctx:c}}}),a=new $s({props:{id:"installation",$$slots:{default:[As]},$$scope:{ctx:c}}}),m=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Ks]},$$scope:{ctx:c}}}),F=new Ws({props:{$$slots:{default:[Zs]},$$scope:{ctx:c}}}),d=new $s({props:{id:"usage",$$slots:{default:[sa]},$$scope:{ctx:c}}}),R=new I({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[aa]},$$scope:{ctx:c}}}),C=new $s({props:{id:"examples",$$slots:{default:[na]},$$scope:{ctx:c}}}),z=new Z({props:{id:"default",$$slots:{default:[la]},$$scope:{ctx:c}}}),V=new Q({props:{name:"input-demo",$$slots:{default:[ea]},$$scope:{ctx:c}}}),P=new Z({props:{id:"disabled",$$slots:{default:[ta]},$$scope:{ctx:c}}}),T=new Q({props:{name:"input-disabled",$$slots:{default:[ca]},$$scope:{ctx:c}}}),H=new Z({props:{id:"with-label",$$slots:{default:[ya]},$$scope:{ctx:c}}}),O=new Q({props:{name:"input-with-label",$$slots:{default:[da]},$$scope:{ctx:c}}}),W=new Z({props:{id:"with-text",$$slots:{default:[ua]},$$scope:{ctx:c}}}),J=new Q({props:{name:"input-with-text",$$slots:{default:[$a]},$$scope:{ctx:c}}}),M=new Z({props:{id:"with-button",$$slots:{default:[ga]},$$scope:{ctx:c}}}),N=new Q({props:{name:"input-with-button",$$slots:{default:[wa]},$$scope:{ctx:c}}}),Y=new Z({props:{id:"file",$$slots:{default:[xa]},$$scope:{ctx:c}}}),q=new Q({props:{name:"input-file",$$slots:{default:[La]},$$scope:{ctx:c}}}),A=new Z({props:{id:"form",$$slots:{default:[ka]},$$scope:{ctx:c}}}),K=new Q({props:{name:"form-demo",form:c[0],$$slots:{default:[Ea]},$$scope:{ctx:c}}}),{c(){b(s.$$.fragment),l=S(),b(a.$$.fragment),n=S(),e=B("figure"),b(m.$$.fragment),u=S(),b(F.$$.fragment),o=S(),b(d.$$.fragment),x=S(),X=B("figure"),b(R.$$.fragment),as=S(),b(C.$$.fragment),ns=S(),b(z.$$.fragment),ls=S(),b(V.$$.fragment),Fs=S(),b(P.$$.fragment),ps=S(),b(T.$$.fragment),es=S(),b(H.$$.fragment),ts=S(),b(O.$$.fragment),os=S(),b(W.$$.fragment),rs=S(),b(J.$$.fragment),cs=S(),b(M.$$.fragment),ys=S(),b(N.$$.fragment),is=S(),b(Y.$$.fragment),ms=S(),b(q.$$.fragment),ds=S(),b(A.$$.fragment),us=S(),b(K.$$.fragment),this.h()},l(p){h(s.$$.fragment,p),l=v(p),h(a.$$.fragment,p),n=v(p),e=L(p,"FIGURE",{"data-rehype-pretty-code-figure":!0});var r=k(e);h(m.$$.fragment,r),r.forEach(t),u=v(p),h(F.$$.fragment,p),o=v(p),h(d.$$.fragment,p),x=v(p),X=L(p,"FIGURE",{"data-rehype-pretty-code-figure":!0});var ss=k(X);h(R.$$.fragment,ss),ss.forEach(t),as=v(p),h(C.$$.fragment,p),ns=v(p),h(z.$$.fragment,p),ls=v(p),h(V.$$.fragment,p),Fs=v(p),h(P.$$.fragment,p),ps=v(p),h(T.$$.fragment,p),es=v(p),h(H.$$.fragment,p),ts=v(p),h(O.$$.fragment,p),os=v(p),h(W.$$.fragment,p),rs=v(p),h(J.$$.fragment,p),cs=v(p),h(M.$$.fragment,p),ys=v(p),h(N.$$.fragment,p),is=v(p),h(Y.$$.fragment,p),ms=v(p),h(q.$$.fragment,p),ds=v(p),h(A.$$.fragment,p),us=v(p),h(K.$$.fragment,p),this.h()},h(){i(e,"data-rehype-pretty-code-figure",""),i(X,"data-rehype-pretty-code-figure","")},m(p,r){g(s,p,r),y(p,l,r),g(a,p,r),y(p,n,r),y(p,e,r),g(m,e,null),y(p,u,r),g(F,p,r),y(p,o,r),g(d,p,r),y(p,x,r),y(p,X,r),g(R,X,null),y(p,as,r),g(C,p,r),y(p,ns,r),g(z,p,r),y(p,ls,r),g(V,p,r),y(p,Fs,r),g(P,p,r),y(p,ps,r),g(T,p,r),y(p,es,r),g(H,p,r),y(p,ts,r),g(O,p,r),y(p,os,r),g(W,p,r),y(p,rs,r),g(J,p,r),y(p,cs,r),g(M,p,r),y(p,ys,r),g(N,p,r),y(p,is,r),g(Y,p,r),y(p,ms,r),g(q,p,r),y(p,ds,r),g(A,p,r),y(p,us,r),g(K,p,r),fs=!0},p(p,r){const ss={};r&2&&(ss.$$scope={dirty:r,ctx:p}),s.$set(ss);const gs={};r&2&&(gs.$$scope={dirty:r,ctx:p}),a.$set(gs);const hs={};r&2&&(hs.$$scope={dirty:r,ctx:p}),m.$set(hs);const bs={};r&2&&(bs.$$scope={dirty:r,ctx:p}),F.$set(bs);const ws={};r&2&&(ws.$$scope={dirty:r,ctx:p}),d.$set(ws);const xs={};r&2&&(xs.$$scope={dirty:r,ctx:p}),R.$set(xs);const vs={};r&2&&(vs.$$scope={dirty:r,ctx:p}),C.$set(vs);const Ss={};r&2&&(Ss.$$scope={dirty:r,ctx:p}),z.$set(Ss);const Ls={};r&2&&(Ls.$$scope={dirty:r,ctx:p}),V.$set(Ls);const ks={};r&2&&(ks.$$scope={dirty:r,ctx:p}),P.$set(ks);const Bs={};r&2&&(Bs.$$scope={dirty:r,ctx:p}),T.$set(Bs);const Is={};r&2&&(Is.$$scope={dirty:r,ctx:p}),H.$set(Is);const Es={};r&2&&(Es.$$scope={dirty:r,ctx:p}),O.$set(Es);const js={};r&2&&(js.$$scope={dirty:r,ctx:p}),W.$set(js);const Ds={};r&2&&(Ds.$$scope={dirty:r,ctx:p}),J.$set(Ds);const Us={};r&2&&(Us.$$scope={dirty:r,ctx:p}),M.$set(Us);const Gs={};r&2&&(Gs.$$scope={dirty:r,ctx:p}),N.$set(Gs);const Rs={};r&2&&(Rs.$$scope={dirty:r,ctx:p}),Y.$set(Rs);const Cs={};r&2&&(Cs.$$scope={dirty:r,ctx:p}),q.$set(Cs);const zs={};r&2&&(zs.$$scope={dirty:r,ctx:p}),A.$set(zs);const _s={};r&1&&(_s.form=p[0]),r&2&&(_s.$$scope={dirty:r,ctx:p}),K.$set(_s)},i(p){fs||($(s.$$.fragment,p),$(a.$$.fragment,p),$(m.$$.fragment,p),$(F.$$.fragment,p),$(d.$$.fragment,p),$(R.$$.fragment,p),$(C.$$.fragment,p),$(z.$$.fragment,p),$(V.$$.fragment,p),$(P.$$.fragment,p),$(T.$$.fragment,p),$(H.$$.fragment,p),$(O.$$.fragment,p),$(W.$$.fragment,p),$(J.$$.fragment,p),$(M.$$.fragment,p),$(N.$$.fragment,p),$(Y.$$.fragment,p),$(q.$$.fragment,p),$(A.$$.fragment,p),$(K.$$.fragment,p),fs=!0)},o(p){_(s.$$.fragment,p),_(a.$$.fragment,p),_(m.$$.fragment,p),_(F.$$.fragment,p),_(d.$$.fragment,p),_(R.$$.fragment,p),_(C.$$.fragment,p),_(z.$$.fragment,p),_(V.$$.fragment,p),_(P.$$.fragment,p),_(T.$$.fragment,p),_(H.$$.fragment,p),_(O.$$.fragment,p),_(W.$$.fragment,p),_(J.$$.fragment,p),_(M.$$.fragment,p),_(N.$$.fragment,p),_(Y.$$.fragment,p),_(q.$$.fragment,p),_(A.$$.fragment,p),_(K.$$.fragment,p),fs=!1},d(p){p&&(t(l),t(n),t(e),t(u),t(o),t(x),t(X),t(as),t(ns),t(ls),t(Fs),t(ps),t(es),t(ts),t(os),t(rs),t(cs),t(ys),t(is),t(ms),t(ds),t(us)),f(s,p),f(a,p),f(m),f(F,p),f(d,p),f(R),f(C,p),f(z,p),f(V,p),f(P,p),f(T,p),f(H,p),f(O,p),f(W,p),f(J,p),f(M,p),f(N,p),f(Y,p),f(q,p),f(A,p),f(K,p)}}}function Da(c){let s,l;return s=new Os({props:{metadata:Vs,$$slots:{default:[ja]},$$scope:{ctx:c}}}),{c(){b(s.$$.fragment)},l(a){h(s.$$.fragment,a)},m(a,n){g(s,a,n),l=!0},p(a,[n]){const e={};n&3&&(e.$$scope={dirty:n,ctx:a}),s.$set(e)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){_(s.$$.fragment,a),l=!1},d(a){f(s,a)}}}const Vs={title:"Input",description:"Displays a form input field or a component that looks like an input field.",component:!0,source:"https://github.com/huntabyte/shadcn-svelte/tree/main/apps/www/src/lib/registry/default/ui/input"},{title:Xa,description:Za,component:sn,source:an}=Vs;function Ua(c,s,l){let{form:a}=s;return c.$$set=n=>{"form"in n&&l(0,a=n.form)},[a]}class nn extends Ts{constructor(s){super(),Hs(this,s,Ua,Da,Ps,{form:0})}}export{nn as default,Vs as metadata};
