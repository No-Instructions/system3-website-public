import{s as Hs,d as F,i as c,f as b,t as v,$ as D,a0 as I,n as A,P as B,p as $,c as L,e as E,g as M,h as T,j as S,b as fs,q as hs}from"./scheduler.D_DiFEDa.js";import{S as Ps,i as js,d as f,t as h,a as g,m as _,c as w,b as k}from"./index.uqldPLAT.js";import{B as Ws}from"./blueprint.Cj9pmS4S.js";import"./form-demo.DXtuK9ec.js";import"./index.DXbq52S5.js";import"./utils.CAuzFALn.js";import{C as Rs}from"./component-preview.C5xabSVs.js";import"./entry.jGg6BVSF.js";import{S as Os}from"./steps.D2WMxhFa.js";import"./config.Bpq0wkaU.js";import"./ctx.C_ZXec9n.js";import"./index.C452eye1.js";import"./root.svelte_svelte_type_style_lang.CmWxcNQk.js";import{P as ns}from"./p.CkWVxGwj.js";import{A as gs}from"./a.DcKJwqI9.js";import{H as zs}from"./h2.XqTVsW-v.js";import{H as ls}from"./h3.XlKUGQnt.js";import{P as Y}from"./pre._9XYjU2k.js";import{H as Us}from"./h4.ONaB4VDm.js";function Ns(i){let s;return{c(){s=v("Tailwind CSS documentation")},l(a){s=b(a,"Tailwind CSS documentation")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function qs(i){let s,a,e="<code>class</code>",t,p,y,m;return p=new gs({props:{href:"https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually",$$slots:{default:[Ns]},$$scope:{ctx:i}}}),{c(){s=v("Just like in regular Svelte, we use the "),a=new I(!1),t=v(" strategy from Tailwind CSS to support dark mode toggling. See the "),k(p.$$.fragment),y=v(" for more information."),this.h()},l(l){s=b(l,"Just like in regular Svelte, we use the "),a=D(l,!1),t=b(l," strategy from Tailwind CSS to support dark mode toggling. See the "),w(p.$$.fragment,l),y=b(l," for more information."),this.h()},h(){a.a=t},m(l,o){c(l,s,o),a.m(e,l,o),c(l,t,o),_(p,l,o),c(l,y,o),m=!0},p(l,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:l}),p.$set(d)},i(l){m||(g(p.$$.fragment,l),m=!0)},o(l){h(p.$$.fragment,l),m=!1},d(l){l&&(F(s),a.d(),F(t),F(y)),f(p,l)}}}function Js(i){let s;return{c(){s=v("mode-watcher")},l(a){s=b(a,"mode-watcher")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function Vs(i){let s,a,e="<code>dark</code>",t,p,y="<code>html</code>",m,l,o,d;return l=new gs({props:{href:"https://github.com/svecosystem/mode-watcher",$$slots:{default:[Js]},$$scope:{ctx:i}}}),{c(){s=v("How you add the "),a=new I(!1),t=v(" class to the "),p=new I(!1),m=v(" element is up to you. In this guide, we'll take a look at enabling dark mode toggling with "),k(l.$$.fragment),o=v("."),this.h()},l(u){s=b(u,"How you add the "),a=D(u,!1),t=b(u," class to the "),p=D(u,!1),m=b(u," element is up to you. In this guide, we'll take a look at enabling dark mode toggling with "),w(l.$$.fragment,u),o=b(u,"."),this.h()},h(){a.a=t,p.a=m},m(u,x){c(u,s,x),a.m(e,u,x),c(u,t,x),p.m(y,u,x),c(u,m,x),_(l,u,x),c(u,o,x),d=!0},p(u,x){const C={};x&1&&(C.$$scope={dirty:x,ctx:u}),l.$set(C)},i(u){d||(g(l.$$.fragment,u),d=!0)},o(u){h(l.$$.fragment,u),d=!1},d(u){u&&(F(s),a.d(),F(t),p.d(),F(m),F(o)),f(l,u)}}}function Ks(i){let s;return{c(){s=v("Usage")},l(a){s=b(a,"Usage")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function Qs(i){let s;return{c(){s=v("Create an inline theme script")},l(a){s=b(a,"Create an inline theme script")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function Xs(i){let s;return{c(){s=v("FUOC")},l(a){s=b(a,"FUOC")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function Ys(i){let s,a,e="<code>localStorage</code>",t,p,y,m;return p=new gs({props:{href:"https://en.wikipedia.org/wiki/Flash_of_unstyled_content",$$slots:{default:[Xs]},$$scope:{ctx:i}}}),{c(){s=v("This script will, in part, keep and track the dark mode value in "),a=new I(!1),t=v(" and prevent "),k(p.$$.fragment),y=v("."),this.h()},l(l){s=b(l,"This script will, in part, keep and track the dark mode value in "),a=D(l,!1),t=b(l," and prevent "),w(p.$$.fragment,l),y=b(l,"."),this.h()},h(){a.a=t},m(l,o){c(l,s,o),a.m(e,l,o),c(l,t,o),_(p,l,o),c(l,y,o),m=!0},p(l,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:l}),p.$set(d)},i(l){m||(g(p.$$.fragment,l),m=!0)},o(l){h(p.$$.fragment,l),m=!1},d(l){l&&(F(s),a.d(),F(t),F(y)),f(p,l)}}}function Zs(i){let s,a=`<code data-line-numbers="" data-language="astro" data-theme="Lambda Studio â€” Blackout" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> "$lib/styles/app.css"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""> </span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script is:inline</span><span style="color:#FFF8">></span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> isBrowser </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> typeof</span><span style="color:#FFF"> localStorage </span><span style="color:#FFF8">!==</span><span style="color:#FFF8"> 'undefined'</span><span style="color:#FFF8">;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> getThemePreference</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> ()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">isBrowser </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF"> localStorage</span><span style="color:#FFF8">.</span><span style="color:#FFF">getItem</span><span style="color:#FFF8">(</span><span style="color:#FFF8">'theme'</span><span style="color:#FFF8">))</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      return</span><span style="color:#FFF"> localStorage</span><span style="color:#FFF8">.</span><span style="color:#FFF">getItem</span><span style="color:#FFF8">(</span><span style="color:#FFF8">'theme'</span><span style="color:#FFF8">);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF"> window</span><span style="color:#FFF8">.</span><span style="color:#FFF">matchMedia</span><span style="color:#FFF8">(</span><span style="color:#FFF8">'(prefers-color-scheme: dark)'</span><span style="color:#FFF8">).</span><span style="color:#FFF">matches</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      ?</span><span style="color:#FFF8"> 'dark'</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 'light'</span><span style="color:#FFF8">;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> isDark </span><span style="color:#FFF8">=</span><span style="color:#FFF"> getThemePreference</span><span style="color:#FFF8">()</span><span style="color:#FFF8"> ===</span><span style="color:#FFF8"> 'dark'</span><span style="color:#FFF8">;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">  document</span><span style="color:#FFF8">.</span><span style="color:#FFF">documentElement</span><span style="color:#FFF8">.</span><span style="color:#FFF">classList</span><span style="color:#FFF8">[</span><span style="color:#FFF">isDark </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 'add'</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 'remove'</span><span style="color:#FFF8">](</span><span style="color:#FFF8">'dark'</span><span style="color:#FFF8">);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""> </span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">isBrowser</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF"> observer </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> new</span><span style="color:#FFF"> MutationObserver</span><span style="color:#FFF8">(()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> isDark </span><span style="color:#FFF8">=</span><span style="color:#FFF"> document</span><span style="color:#FFF8">.</span><span style="color:#FFF">documentElement</span><span style="color:#FFF8">.</span><span style="color:#FFF">classList</span><span style="color:#FFF8">.</span><span style="color:#FFF">contains</span><span style="color:#FFF8">(</span><span style="color:#FFF8">'dark'</span><span style="color:#FFF8">);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">      localStorage</span><span style="color:#FFF8">.</span><span style="color:#FFF">setItem</span><span style="color:#FFF8">(</span><span style="color:#FFF8">'theme'</span><span style="color:#FFF8">,</span><span style="color:#FFF"> isDark </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 'dark'</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 'light'</span><span style="color:#FFF8">);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">    observer</span><span style="color:#FFF8">.</span><span style="color:#FFF">observe</span><span style="color:#FFF8">(</span><span style="color:#FFF">document</span><span style="color:#FFF8">.</span><span style="color:#FFF">documentElement</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">      attributes</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> true,</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">      attributeFilter</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">'class'</span><span style="color:#FFF8">]</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;);</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  &#125;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">html lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"en"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span><span style="color:#FFF">Astro</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;/</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">html</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function sa(i){let s;return{c(){s=v("Install mode-watcher")},l(a){s=b(a,"Install mode-watcher")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function aa(i){let s,a='<code data-language="bash" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> mode-watcher</span></span></code>',e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function na(i){let s;return{c(){s=v("Add the ModeWatcher component")},l(a){s=b(a,"Add the ModeWatcher component")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function ea(i){let s,a,e="<code>ModeWatcher</code>",t,p,y="<code>client:load</code>",m;return{c(){s=v("Import the "),a=new I(!1),t=v(" component and use it in your page with the "),p=new I(!1),m=v(" directive:"),this.h()},l(l){s=b(l,"Import the "),a=D(l,!1),t=b(l," component and use it in your page with the "),p=D(l,!1),m=b(l," directive:"),this.h()},h(){a.a=t,p.a=m},m(l,o){c(l,s,o),a.m(e,l,o),c(l,t,o),p.m(y,l,o),c(l,m,o)},p:A,d(l){l&&(F(s),a.d(),F(t),p.d(),F(m))}}}function la(i){let s,a=`<code data-line-numbers="" data-language="astro" data-theme="Lambda Studio â€” Blackout" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> "$lib/styles/app.css"</span><span style="color:#FFF8">;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ModeWatcher </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;!--</span><span style="color:#FFF4"> inline-script </span><span style="color:#FFF8">--></span></span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">html lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"en"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span><span style="color:#FFF">Astro</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">ModeWatcher client:load </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;/</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">html</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ta(i){let s;return{c(){s=v("Create a mode toggle")},l(a){s=b(a,"Create a mode toggle")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function oa(i){let s;return{c(){s=v("Create a mode toggle on your site to toggle between light and dark mode:")},l(a){s=b(a,"Create a mode toggle on your site to toggle between light and dark mode:")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function pa(i){let s;return{c(){s=v("Light switch")},l(a){s=b(a,"Light switch")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function Fa(i){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Sun </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Sun.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Moon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Moon.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toggleMode </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Button </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">toggleMode</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Sun</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"</span></span>
<span data-line=""><span style="color:#FFF8">  /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Moon</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"</span></span>
<span data-line=""><span style="color:#FFF8">  /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle theme</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ra(i){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Sun </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/sun"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Moon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/moon"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toggleMode </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Button </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">toggleMode</span><span style="color:#FFF8">&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Sun</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"</span></span>
<span data-line=""><span style="color:#FFF8">  /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Moon</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"</span></span>
<span data-line=""><span style="color:#FFF8">  /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle theme</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ca(i){let s,a,e,t,p,y,m;return a=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Fa]},$$scope:{ctx:i}}}),t=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ra]},$$scope:{ctx:i}}}),{c(){s=T("figure"),k(a.$$.fragment),e=T("figure"),k(t.$$.fragment),p=S(),y=T("div"),this.h()},l(l){s=L(l,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=E(s);w(a.$$.fragment,o),o.forEach(F),e=L(l,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=E(e);w(t.$$.fragment,d),d.forEach(F),p=M(l),y=L(l,"DIV",{}),E(y).forEach(F),this.h()},h(){$(s,"__src__","../src/lib/registry/new-york/example/dark-mode-light-switch.svelte"),$(s,"__style__","new-york"),$(s,"class","code"),$(s,"data-rehype-pretty-code-figure",""),$(e,"__src__","../src/lib/registry/default/example/dark-mode-light-switch.svelte"),$(e,"__style__","default"),$(e,"class","code"),$(e,"data-rehype-pretty-code-figure","")},m(l,o){c(l,s,o),_(a,s,null),c(l,e,o),_(t,e,null),c(l,p,o),c(l,y,o),m=!0},p(l,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:l}),a.$set(d);const u={};o&1&&(u.$$scope={dirty:o,ctx:l}),t.$set(u)},i(l){m||(g(a.$$.fragment,l),g(t.$$.fragment,l),m=!0)},o(l){h(a.$$.fragment,l),h(t.$$.fragment,l),m=!1},d(l){l&&(F(s),F(e),F(p),F(y)),f(a),f(t)}}}function ia(i){let s;return{c(){s=v("Dropdown menu")},l(a){s=b(a,"Dropdown menu")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function da(i){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Sun </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Sun.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Moon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Moon.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> resetMode</span><span style="color:#FFF8">,</span><span style="color:#FFF"> setMode </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> DropdownMenu </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/dropdown-menu/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Sun</span></span>
<span data-line=""><span style="color:#FFF">        class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"</span></span>
<span data-line=""><span style="color:#FFF8">      /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Moon</span></span>
<span data-line=""><span style="color:#FFF">        class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"</span></span>
<span data-line=""><span style="color:#FFF8">      /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle theme</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content align</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"end"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> setMode</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"light"</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      ></span><span style="color:#FFF">Light</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> setMode</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"dark"</span><span style="color:#FFF8">)&#125;></span><span style="color:#FFF">Dark</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> resetMode</span><span style="color:#FFF8">()&#125;></span><span style="color:#FFF">System</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ya(i){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Sun </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/sun"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Moon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/moon"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> resetMode</span><span style="color:#FFF8">,</span><span style="color:#FFF"> setMode </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> DropdownMenu </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/dropdown-menu/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Sun</span></span>
<span data-line=""><span style="color:#FFF">        class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"</span></span>
<span data-line=""><span style="color:#FFF8">      /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Moon</span></span>
<span data-line=""><span style="color:#FFF">        class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"</span></span>
<span data-line=""><span style="color:#FFF8">      /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle theme</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content align</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"end"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> setMode</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"light"</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      ></span><span style="color:#FFF">Light</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> setMode</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"dark"</span><span style="color:#FFF8">)&#125;></span><span style="color:#FFF">Dark</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item </span><span style="color:#FFF8">on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> resetMode</span><span style="color:#FFF8">()&#125;></span><span style="color:#FFF">System</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ma(i){let s,a,e,t,p,y,m;return a=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[da]},$$scope:{ctx:i}}}),t=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ya]},$$scope:{ctx:i}}}),{c(){s=T("figure"),k(a.$$.fragment),e=T("figure"),k(t.$$.fragment),p=S(),y=T("div"),this.h()},l(l){s=L(l,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=E(s);w(a.$$.fragment,o),o.forEach(F),e=L(l,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=E(e);w(t.$$.fragment,d),d.forEach(F),p=M(l),y=L(l,"DIV",{}),E(y).forEach(F),this.h()},h(){$(s,"__src__","../src/lib/registry/new-york/example/dark-mode-dropdown-menu.svelte"),$(s,"__style__","new-york"),$(s,"class","code"),$(s,"data-rehype-pretty-code-figure",""),$(e,"__src__","../src/lib/registry/default/example/dark-mode-dropdown-menu.svelte"),$(e,"__style__","default"),$(e,"class","code"),$(e,"data-rehype-pretty-code-figure","")},m(l,o){c(l,s,o),_(a,s,null),c(l,e,o),_(t,e,null),c(l,p,o),c(l,y,o),m=!0},p(l,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:l}),a.$set(d);const u={};o&1&&(u.$$scope={dirty:o,ctx:l}),t.$set(u)},i(l){m||(g(a.$$.fragment,l),g(t.$$.fragment,l),m=!0)},o(l){h(a.$$.fragment,l),h(t.$$.fragment,l),m=!1},d(l){l&&(F(s),F(e),F(p),F(y)),f(a),f(t)}}}function ua(i){let s;return{c(){s=v("Add mode toggle to page")},l(a){s=b(a,"Add mode toggle to page")},m(a,e){c(a,s,e)},d(a){a&&F(s)}}}function $a(i){let s,a,e="<code>client:load</code>",t;return{c(){s=v("Add the mode toggle to the page (also with the "),a=new I(!1),t=v(" directive):"),this.h()},l(p){s=b(p,"Add the mode toggle to the page (also with the "),a=D(p,!1),t=b(p," directive):"),this.h()},h(){a.a=t},m(p,y){c(p,s,y),a.m(e,p,y),c(p,t,y)},p:A,d(p){p&&(F(s),a.d(),F(t))}}}function fa(i){let s,a=`<code data-line-numbers="" data-language="astro" data-theme="Lambda Studio â€” Blackout" style="display: grid;" data-line-numbers-max-digits="2"><span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> "$lib/styles/app.css"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ModeWatcher </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "mode-watcher"</span><span style="color:#FFF8">;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">import</span><span style="color:#FFF"> ModeToggle </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/mode-toggle.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF4">---</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;!--</span><span style="color:#FFF4"> inline-script </span><span style="color:#FFF8">--></span></span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">html lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"en"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span><span style="color:#FFF">Astro</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h1</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">ModeWatcher client:load </span><span style="color:#FFF8">/></span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">ModeToggle client:load </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">	&lt;/</span><span style="color:#FFF">body</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">html</span><span style="color:#FFF8">></span></span></code>`,e;return{c(){s=new I(!1),e=B(),this.h()},l(t){s=D(t,!1),e=B(),this.h()},h(){s.a=e},m(t,p){s.m(a,t,p),c(t,e,p)},p:A,d(t){t&&(F(e),s.d())}}}function ha(i){let s,a,e,t,p,y,m="src/pages/index.astro",l,o,d,u,x,C,Z,P,ts,j,os,R,U,_s="src/pages/index.astro",W,ps,O,Fs,z,rs,N,cs,q,is,J,ds,V,ys,K,ms,Q,us,G,H,ws="src/pages/index.astro",X,$s;return s=new ls({props:{id:"create-an-inline-theme-script",$$slots:{default:[Qs]},$$scope:{ctx:i}}}),e=new ns({props:{$$slots:{default:[Ys]},$$scope:{ctx:i}}}),l=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"astro","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[Zs]},$$scope:{ctx:i}}}),d=new ls({props:{id:"install-mode-watcher",$$slots:{default:[sa]},$$scope:{ctx:i}}}),C=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[aa]},$$scope:{ctx:i}}}),P=new ls({props:{id:"add-the-modewatcher-component",$$slots:{default:[na]},$$scope:{ctx:i}}}),j=new ns({props:{$$slots:{default:[ea]},$$scope:{ctx:i}}}),W=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"astro","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[la]},$$scope:{ctx:i}}}),O=new ls({props:{id:"create-a-mode-toggle",$$slots:{default:[ta]},$$scope:{ctx:i}}}),z=new ns({props:{$$slots:{default:[oa]},$$scope:{ctx:i}}}),N=new Us({props:{id:"light-switch",$$slots:{default:[pa]},$$scope:{ctx:i}}}),q=new Rs({props:{name:"dark-mode-light-switch",$$slots:{default:[ca]},$$scope:{ctx:i}}}),J=new Us({props:{id:"dropdown-menu",$$slots:{default:[ia]},$$scope:{ctx:i}}}),V=new Rs({props:{name:"dark-mode-dropdown-menu",$$slots:{default:[ma]},$$scope:{ctx:i}}}),K=new ls({props:{id:"add-mode-toggle-to-page",$$slots:{default:[ua]},$$scope:{ctx:i}}}),Q=new ns({props:{$$slots:{default:[$a]},$$scope:{ctx:i}}}),X=new Y({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"astro","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[fa]},$$scope:{ctx:i}}}),{c(){k(s.$$.fragment),a=S(),k(e.$$.fragment),t=S(),p=T("figure"),y=T("figcaption"),y.textContent=m,k(l.$$.fragment),o=S(),k(d.$$.fragment),u=S(),x=T("figure"),k(C.$$.fragment),Z=S(),k(P.$$.fragment),ts=S(),k(j.$$.fragment),os=S(),R=T("figure"),U=T("figcaption"),U.textContent=_s,k(W.$$.fragment),ps=S(),k(O.$$.fragment),Fs=S(),k(z.$$.fragment),rs=S(),k(N.$$.fragment),cs=S(),k(q.$$.fragment),is=S(),k(J.$$.fragment),ds=S(),k(V.$$.fragment),ys=S(),k(K.$$.fragment),ms=S(),k(Q.$$.fragment),us=S(),G=T("figure"),H=T("figcaption"),H.textContent=ws,k(X.$$.fragment),this.h()},l(n){w(s.$$.fragment,n),a=M(n),w(e.$$.fragment,n),t=M(n),p=L(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var r=E(p);y=L(r,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),hs(y)!=="svelte-1hked82"&&(y.textContent=m),w(l.$$.fragment,r),r.forEach(F),o=M(n),w(d.$$.fragment,n),u=M(n),x=L(n,"FIGURE",{"data-rehype-pretty-code-figure":!0});var es=E(x);w(C.$$.fragment,es),es.forEach(F),Z=M(n),w(P.$$.fragment,n),ts=M(n),w(j.$$.fragment,n),os=M(n),R=L(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var ss=E(R);U=L(ss,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),hs(U)!=="svelte-1hked82"&&(U.textContent=_s),w(W.$$.fragment,ss),ss.forEach(F),ps=M(n),w(O.$$.fragment,n),Fs=M(n),w(z.$$.fragment,n),rs=M(n),w(N.$$.fragment,n),cs=M(n),w(q.$$.fragment,n),is=M(n),w(J.$$.fragment,n),ds=M(n),w(V.$$.fragment,n),ys=M(n),w(K.$$.fragment,n),ms=M(n),w(Q.$$.fragment,n),us=M(n),G=L(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var as=E(G);H=L(as,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),hs(H)!=="svelte-1hked82"&&(H.textContent=ws),w(X.$$.fragment,as),as.forEach(F),this.h()},h(){$(y,"data-rehype-pretty-code-title",""),$(y,"data-language","astro"),$(y,"data-theme","Lambda Studio â€” Blackout"),$(p,"data-rehype-pretty-code-figure",""),$(p,"data-metadata",""),$(x,"data-rehype-pretty-code-figure",""),$(U,"data-rehype-pretty-code-title",""),$(U,"data-language","astro"),$(U,"data-theme","Lambda Studio â€” Blackout"),$(R,"data-rehype-pretty-code-figure",""),$(R,"data-metadata",""),$(H,"data-rehype-pretty-code-title",""),$(H,"data-language","astro"),$(H,"data-theme","Lambda Studio â€” Blackout"),$(G,"data-rehype-pretty-code-figure",""),$(G,"data-metadata","")},m(n,r){_(s,n,r),c(n,a,r),_(e,n,r),c(n,t,r),c(n,p,r),fs(p,y),_(l,p,null),c(n,o,r),_(d,n,r),c(n,u,r),c(n,x,r),_(C,x,null),c(n,Z,r),_(P,n,r),c(n,ts,r),_(j,n,r),c(n,os,r),c(n,R,r),fs(R,U),_(W,R,null),c(n,ps,r),_(O,n,r),c(n,Fs,r),_(z,n,r),c(n,rs,r),_(N,n,r),c(n,cs,r),_(q,n,r),c(n,is,r),_(J,n,r),c(n,ds,r),_(V,n,r),c(n,ys,r),_(K,n,r),c(n,ms,r),_(Q,n,r),c(n,us,r),c(n,G,r),fs(G,H),_(X,G,null),$s=!0},p(n,r){const es={};r&1&&(es.$$scope={dirty:r,ctx:n}),s.$set(es);const ss={};r&1&&(ss.$$scope={dirty:r,ctx:n}),e.$set(ss);const as={};r&1&&(as.$$scope={dirty:r,ctx:n}),l.$set(as);const ks={};r&1&&(ks.$$scope={dirty:r,ctx:n}),d.$set(ks);const bs={};r&1&&(bs.$$scope={dirty:r,ctx:n}),C.$set(bs);const vs={};r&1&&(vs.$$scope={dirty:r,ctx:n}),P.$set(vs);const xs={};r&1&&(xs.$$scope={dirty:r,ctx:n}),j.$set(xs);const Ms={};r&1&&(Ms.$$scope={dirty:r,ctx:n}),W.$set(Ms);const Ss={};r&1&&(Ss.$$scope={dirty:r,ctx:n}),O.$set(Ss);const Bs={};r&1&&(Bs.$$scope={dirty:r,ctx:n}),z.$set(Bs);const Ds={};r&1&&(Ds.$$scope={dirty:r,ctx:n}),N.$set(Ds);const Is={};r&1&&(Is.$$scope={dirty:r,ctx:n}),q.$set(Is);const Cs={};r&1&&(Cs.$$scope={dirty:r,ctx:n}),J.$set(Cs);const Ls={};r&1&&(Ls.$$scope={dirty:r,ctx:n}),V.$set(Ls);const Ts={};r&1&&(Ts.$$scope={dirty:r,ctx:n}),K.$set(Ts);const Es={};r&1&&(Es.$$scope={dirty:r,ctx:n}),Q.$set(Es);const As={};r&1&&(As.$$scope={dirty:r,ctx:n}),X.$set(As)},i(n){$s||(g(s.$$.fragment,n),g(e.$$.fragment,n),g(l.$$.fragment,n),g(d.$$.fragment,n),g(C.$$.fragment,n),g(P.$$.fragment,n),g(j.$$.fragment,n),g(W.$$.fragment,n),g(O.$$.fragment,n),g(z.$$.fragment,n),g(N.$$.fragment,n),g(q.$$.fragment,n),g(J.$$.fragment,n),g(V.$$.fragment,n),g(K.$$.fragment,n),g(Q.$$.fragment,n),g(X.$$.fragment,n),$s=!0)},o(n){h(s.$$.fragment,n),h(e.$$.fragment,n),h(l.$$.fragment,n),h(d.$$.fragment,n),h(C.$$.fragment,n),h(P.$$.fragment,n),h(j.$$.fragment,n),h(W.$$.fragment,n),h(O.$$.fragment,n),h(z.$$.fragment,n),h(N.$$.fragment,n),h(q.$$.fragment,n),h(J.$$.fragment,n),h(V.$$.fragment,n),h(K.$$.fragment,n),h(Q.$$.fragment,n),h(X.$$.fragment,n),$s=!1},d(n){n&&(F(a),F(t),F(p),F(o),F(u),F(x),F(Z),F(ts),F(os),F(R),F(ps),F(Fs),F(rs),F(cs),F(is),F(ds),F(ys),F(ms),F(us),F(G)),f(s,n),f(e,n),f(l),f(d,n),f(C),f(P,n),f(j,n),f(W),f(O,n),f(z,n),f(N,n),f(q,n),f(J,n),f(V,n),f(K,n),f(Q,n),f(X)}}}function ga(i){let s,a,e,t,p,y,m,l;return s=new ns({props:{$$slots:{default:[qs]},$$scope:{ctx:i}}}),e=new ns({props:{$$slots:{default:[Vs]},$$scope:{ctx:i}}}),p=new zs({props:{id:"usage",$$slots:{default:[Ks]},$$scope:{ctx:i}}}),m=new Os({props:{$$slots:{default:[ha]},$$scope:{ctx:i}}}),{c(){k(s.$$.fragment),a=S(),k(e.$$.fragment),t=S(),k(p.$$.fragment),y=S(),k(m.$$.fragment)},l(o){w(s.$$.fragment,o),a=M(o),w(e.$$.fragment,o),t=M(o),w(p.$$.fragment,o),y=M(o),w(m.$$.fragment,o)},m(o,d){_(s,o,d),c(o,a,d),_(e,o,d),c(o,t,d),_(p,o,d),c(o,y,d),_(m,o,d),l=!0},p(o,d){const u={};d&1&&(u.$$scope={dirty:d,ctx:o}),s.$set(u);const x={};d&1&&(x.$$scope={dirty:d,ctx:o}),e.$set(x);const C={};d&1&&(C.$$scope={dirty:d,ctx:o}),p.$set(C);const Z={};d&1&&(Z.$$scope={dirty:d,ctx:o}),m.$set(Z)},i(o){l||(g(s.$$.fragment,o),g(e.$$.fragment,o),g(p.$$.fragment,o),g(m.$$.fragment,o),l=!0)},o(o){h(s.$$.fragment,o),h(e.$$.fragment,o),h(p.$$.fragment,o),h(m.$$.fragment,o),l=!1},d(o){o&&(F(a),F(t),F(y)),f(s,o),f(e,o),f(p,o),f(m,o)}}}function _a(i){let s,a;return s=new Ws({props:{metadata:Gs,$$slots:{default:[ga]},$$scope:{ctx:i}}}),{c(){k(s.$$.fragment)},l(e){w(s.$$.fragment,e)},m(e,t){_(s,e,t),a=!0},p(e,[t]){const p={};t&1&&(p.$$scope={dirty:t,ctx:e}),s.$set(p)},i(e){a||(g(s.$$.fragment,e),a=!0)},o(e){h(s.$$.fragment,e),a=!1},d(e){f(s,e)}}}const Gs={title:"Dark mode on Astro",description:"Adding dark mode to your Astro site."},{title:Pa,description:ja}=Gs;class Wa extends Ps{constructor(s){super(),js(this,s,null,_a,Hs,{})}}export{Wa as default,Gs as metadata};
