import{s as ep,d as t,i as r,f,t as $,n as T,a2 as $F,p as _,c as R,h as D,a9 as np,Z as Fp,b as Ia,e as j,g as k,j as C,$ as I,P as S,a0 as P,q as mF}from"./scheduler.D_DiFEDa.js";import{S as tp,i as rp,d as g,t as h,a as w,m as b,c as v,b as x}from"./index.uqldPLAT.js";import{e as fF}from"./each.8prNeyls.js";import{B as cp}from"./blueprint.Cj9pmS4S.js";import"./form-demo.DXtuK9ec.js";import"./index.DXbq52S5.js";import"./utils.CAuzFALn.js";import{C as H}from"./component-preview.C5xabSVs.js";import"./entry.jGg6BVSF.js";import"./config.Bpq0wkaU.js";import"./ctx.C_ZXec9n.js";import"./index.C452eye1.js";import"./root.svelte_svelte_type_style_lang.CmWxcNQk.js";import{H as Ra}from"./h2.XqTVsW-v.js";import{H as N}from"./h3.XlKUGQnt.js";import{P as z}from"./p.CkWVxGwj.js";import{A as U}from"./a.DcKJwqI9.js";import{P as M}from"./pre._9XYjU2k.js";import{H as uF}from"./h4.ONaB4VDm.js";const as={sources:{avif:""+new URL("../assets/dashboard-1-dark.IWAUZA5Q.avif",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1-dark.BfsWuAzm.avif",import.meta.url).href+" 3312w",webp:""+new URL("../assets/dashboard-1-dark.BXEUFnHZ.webp",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1-dark.DKOxTdeZ.webp",import.meta.url).href+" 3312w",jpeg:""+new URL("../assets/dashboard-1-dark.CarlM0Me.jpeg",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1-dark.DAiCSmAd.jpeg",import.meta.url).href+" 3312w"},img:{src:""+new URL("../assets/dashboard-1-dark.DAiCSmAd.jpeg",import.meta.url).href,w:3312,h:2022}},ns={sources:{avif:""+new URL("../assets/dashboard-1.d766vmGN.avif",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1.UweH3vjO.avif",import.meta.url).href+" 3312w",webp:""+new URL("../assets/dashboard-1.Ci99cOJZ.webp",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1.B7zHmz4E.webp",import.meta.url).href+" 3312w",jpeg:""+new URL("../assets/dashboard-1.C76kvv30.jpeg",import.meta.url).href+" 1656w, "+new URL("../assets/dashboard-1.BHDGNgA7.jpeg",import.meta.url).href+" 3312w"},img:{src:""+new URL("../assets/dashboard-1.BHDGNgA7.jpeg",import.meta.url).href,w:3312,h:2022}};function Jl(y,s,a){const F=y.slice();return F[0]=s[a][0],F[1]=s[a][1],F}function Ql(y,s,a){const F=y.slice();return F[0]=s[a][0],F[1]=s[a][1],F}function yp(y){let s;return{c(){s=$("March 2024")},l(a){s=f(a,"March 2024")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ip(y){let s;return{c(){s=$("Introducing Blocks")},l(a){s=f(a,"Introducing Blocks")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function dp(y){let s;return{c(){s=$("Blocks")},l(a){s=f(a,"Blocks")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function mp(y){let s,a,F;return s=new U({props:{href:"/blocks",$$slots:{default:[dp]},$$scope:{ctx:y}}}),{c(){x(s.$$.fragment),a=$(" are ready-made components that you can use to build your apps. They are fully responsive, accessible, and composable, meaning they are built using the same principles as the rest of the components in shadcn-svelte.")},l(l){v(s.$$.fragment,l),a=f(l," are ready-made components that you can use to build your apps. They are fully responsive, accessible, and composable, meaning they are built using the same principles as the rest of the components in shadcn-svelte.")},m(l,p){b(s,l,p),r(l,a,p),F=!0},p(l,p){const i={};p&64&&(i.$$scope={dirty:p,ctx:l}),s.$set(i)},i(l){F||(w(s.$$.fragment,l),F=!0)},o(l){h(s.$$.fragment,l),F=!1},d(l){l&&t(a),g(s,l)}}}function up(y){let s,a,F,l,p=fF(Object.entries(as.sources)),i=[];for(let d=0;d<p.length;d+=1)i[d]=sp(Ql(y,p,d));return{c(){s=D("picture");for(let d=0;d<i.length;d+=1)i[d].c();a=C(),F=D("img"),this.h()},l(d){s=R(d,"PICTURE",{});var o=j(s);for(let e=0;e<i.length;e+=1)i[e].l(o);a=k(o),F=R(o,"IMG",{src:!0,alt:!0,class:!0,width:!0,height:!0}),o.forEach(t),this.h()},h(){$F(F.src,l=as.img.src)||_(F,"src",l),_(F,"alt","A screenshot of the dashboard-01 block"),_(F,"class","h-full w-full hidden dark:block mt-6"),_(F,"width",as.img.w),_(F,"height",as.img.h)},m(d,o){r(d,s,o);for(let e=0;e<i.length;e+=1)i[e]&&i[e].m(s,null);Ia(s,a),Ia(s,F)},p(d,o){if(o&0){p=fF(Object.entries(as.sources));let e;for(e=0;e<p.length;e+=1){const m=Ql(d,p,e);i[e]?i[e].p(m,o):(i[e]=sp(m),i[e].c(),i[e].m(s,a))}for(;e<i.length;e+=1)i[e].d(1);i.length=p.length}},d(d){d&&t(s),Fp(i,d)}}}function fp(y){let s,a;return{c(){s=D("img"),this.h()},l(F){s=R(F,"IMG",{src:!0,alt:!0,class:!0,width:!0,height:!0}),this.h()},h(){$F(s.src,a=as.img.src)||_(s,"src",a),_(s,"alt","A screenshot of the dashboard-01 block"),_(s,"class","h-full w-full hidden dark:block mt-6"),_(s,"width",as.img.w),_(s,"height",as.img.h)},m(F,l){r(F,s,l)},p:T,d(F){F&&t(s)}}}function sp(y){let s,a;return{c(){s=D("source"),this.h()},l(F){s=R(F,"SOURCE",{srcset:!0,type:!0}),this.h()},h(){np(s,a=y[1])||_(s,"srcset",a),_(s,"type","image/"+y[0])},m(F,l){r(F,s,l)},p:T,d(F){F&&t(s)}}}function $p(y){let s,a,F,l,p=fF(Object.entries(ns.sources)),i=[];for(let d=0;d<p.length;d+=1)i[d]=ap(Jl(y,p,d));return{c(){s=D("picture");for(let d=0;d<i.length;d+=1)i[d].c();a=C(),F=D("img"),this.h()},l(d){s=R(d,"PICTURE",{});var o=j(s);for(let e=0;e<i.length;e+=1)i[e].l(o);a=k(o),F=R(o,"IMG",{src:!0,alt:!0,class:!0,width:!0,height:!0}),o.forEach(t),this.h()},h(){$F(F.src,l=ns.img.src)||_(F,"src",l),_(F,"alt","A screenshot of the dashboard-01 block"),_(F,"class","h-full w-full block dark:hidden mt-6"),_(F,"width",ns.img.w),_(F,"height",ns.img.h)},m(d,o){r(d,s,o);for(let e=0;e<i.length;e+=1)i[e]&&i[e].m(s,null);Ia(s,a),Ia(s,F)},p(d,o){if(o&0){p=fF(Object.entries(ns.sources));let e;for(e=0;e<p.length;e+=1){const m=Jl(d,p,e);i[e]?i[e].p(m,o):(i[e]=ap(m),i[e].c(),i[e].m(s,a))}for(;e<i.length;e+=1)i[e].d(1);i.length=p.length}},d(d){d&&t(s),Fp(i,d)}}}function _p(y){let s,a;return{c(){s=D("img"),this.h()},l(F){s=R(F,"IMG",{src:!0,alt:!0,class:!0,width:!0,height:!0}),this.h()},h(){$F(s.src,a=ns.img.src)||_(s,"src",a),_(s,"alt","A screenshot of the dashboard-01 block"),_(s,"class","h-full w-full block dark:hidden mt-6"),_(s,"width",ns.img.w),_(s,"height",ns.img.h)},m(F,l){r(F,s,l)},p:T,d(F){F&&t(s)}}}function ap(y){let s,a;return{c(){s=D("source"),this.h()},l(F){s=R(F,"SOURCE",{srcset:!0,type:!0}),this.h()},h(){np(s,a=y[1])||_(s,"srcset",a),_(s,"type","image/"+y[0])},m(F,l){r(F,s,l)},p:T,d(F){F&&t(s)}}}function gp(y){let s;return{c(){s=$("v0")},l(a){s=f(a,"v0")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function hp(y){let s;return{c(){s=$("shadcn/ui")},l(a){s=f(a,"shadcn/ui")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function wp(y){let s,a,F,l,p;return s=new U({props:{href:"https://v0.dev",$$slots:{default:[gp]},$$scope:{ctx:y}}}),F=new U({props:{href:"https://ui.shadcn.com",$$slots:{default:[hp]},$$scope:{ctx:y}}}),{c(){x(s.$$.fragment),a=$(" only supports React at the moment, so you can't customize them like you can the original from "),x(F.$$.fragment),l=$(". However, if having support for Svelte interests you, I'm sure the v0 team would love to hear about it. :)")},l(i){v(s.$$.fragment,i),a=f(i," only supports React at the moment, so you can't customize them like you can the original from "),v(F.$$.fragment,i),l=f(i,". However, if having support for Svelte interests you, I'm sure the v0 team would love to hear about it. :)")},m(i,d){b(s,i,d),r(i,a,d),b(F,i,d),r(i,l,d),p=!0},p(i,d){const o={};d&64&&(o.$$scope={dirty:d,ctx:i}),s.$set(o);const e={};d&64&&(e.$$scope={dirty:d,ctx:i}),F.$set(e)},i(i){p||(w(s.$$.fragment,i),w(F.$$.fragment,i),p=!0)},o(i){h(s.$$.fragment,i),h(F.$$.fragment,i),p=!1},d(i){i&&(t(a),t(l)),g(s,i),g(F,i)}}}function bp(y){let s;return{c(){s=$("New Component: Breadcrumb")},l(a){s=f(a,"New Component: Breadcrumb")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function vp(y){let s;return{c(){s=$("Breadcrumb")},l(a){s=f(a,"Breadcrumb")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function xp(y){let s,a,F,l;return a=new U({props:{href:"/docs/components/breadcrumb",$$slots:{default:[vp]},$$scope:{ctx:y}}}),{c(){s=$("We've added a new component to the project, "),x(a.$$.fragment),F=$(".")},l(p){s=f(p,"We've added a new component to the project, "),v(a.$$.fragment,p),F=f(p,".")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function kp(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Breadcrumb </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/breadcrumb/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> DropdownMenu </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/dropdown-menu/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link href</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/"</span><span style="color:#FFF8">></span><span style="color:#FFF">Home</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center gap-1"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Ellipsis class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle menu</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content align</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"start"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">Documentation</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">Themes</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">GitHub</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link href</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/docs/components"</span><span style="color:#FFF8">></span><span style="color:#FFF">Components</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Page</span><span style="color:#FFF8">></span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Page</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Cp(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Breadcrumb </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/breadcrumb/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> DropdownMenu </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/dropdown-menu/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link href</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/"</span><span style="color:#FFF8">></span><span style="color:#FFF">Home</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center gap-1"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Ellipsis class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle menu</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content align</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"start"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">Documentation</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">Themes</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span><span style="color:#FFF">GitHub</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">DropdownMenu</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link href</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"/docs/components"</span><span style="color:#FFF8">></span><span style="color:#FFF">Components</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Page</span><span style="color:#FFF8">></span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Page</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Breadcrumb</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Bp(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[kp]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Cp]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/breadcrumb-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/breadcrumb-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Sp(y){let s;return{c(){s=$("New Component: Scroll Area")},l(a){s=f(a,"New Component: Scroll Area")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ip(y){let s;return{c(){s=$("Scroll Area")},l(a){s=f(a,"Scroll Area")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Pp(y){let s;return{c(){s=$("Scroll Area")},l(a){s=f(a,"Scroll Area")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Lp(y){let s,a,F,l,p,i;return a=new U({props:{href:"/docs/components/scroll-area",$$slots:{default:[Ip]},$$scope:{ctx:y}}}),l=new U({props:{href:"https://bits-ui.com/docs/components/scroll-area",$$slots:{default:[Pp]},$$scope:{ctx:y}}}),{c(){s=$("We've added a new component to the project, "),x(a.$$.fragment),F=$(", which is built on top of the "),x(l.$$.fragment),p=$(" component from Bits UI.")},l(d){s=f(d,"We've added a new component to the project, "),v(a.$$.fragment,d),F=f(d,", which is built on top of the "),v(l.$$.fragment,d),p=f(d," component from Bits UI.")},m(d,o){r(d,s,o),b(a,d,o),r(d,F,o),b(l,d,o),r(d,p,o),i=!0},p(d,o){const e={};o&64&&(e.$$scope={dirty:o,ctx:d}),a.$set(e);const m={};o&64&&(m.$$scope={dirty:o,ctx:d}),l.$set(m)},i(d){i||(w(a.$$.fragment,d),w(l.$$.fragment,d),i=!0)},o(d){h(a.$$.fragment,d),h(l.$$.fragment,d),i=!1},d(d){d&&(t(s),t(F),t(p)),g(a,d),g(l,d)}}}function Rp(y){let s;return{c(){s=$("It supports both vertical and horizontal scrolling, and is designed to provide a consistent experience across all browsers and platforms.")},l(a){s=f(a,"It supports both vertical and horizontal scrolling, and is designed to provide a consistent experience across all browsers and platforms.")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Dp(y){let s;return{c(){s=$("Examples")},l(a){s=f(a,"Examples")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ep(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ScrollArea </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/scroll-area/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Separator </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/separator/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> tags </span><span style="color:#FFF8">=</span><span style="color:#FFF"> Array</span><span style="color:#FFF8">.</span><span style="color:#FFF">from</span><span style="color:#FFF8">(&#123;</span><span style="color:#FFF"> length</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 50</span><span style="color:#FFF8"> &#125;).</span><span style="color:#FFF">map</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">    (</span><span style="color:#FFF">_</span><span style="color:#FFF8">,</span><span style="color:#FFF"> i</span><span style="color:#FFF8">,</span><span style="color:#FFF"> a</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#96;v1.2.0-beta.$&#123;</span><span style="color:#FFF">a</span><span style="color:#FFF8">.length - </span><span style="color:#FFF">i</span><span style="color:#FFF8">&#125;&#96;</span></span>
<span data-line=""><span style="color:#FFF8">  );</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ScrollArea class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-72 w-48 rounded-md border"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">h4 class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mb-4 text-sm font-medium leading-none"</span><span style="color:#FFF8">></span><span style="color:#FFF">Tags</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h4</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> tags </span><span style="color:#FFF8">as</span><span style="color:#FFF"> tag</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;</span><span style="color:#FFF">tag</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Separator class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"my-2"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ScrollArea</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function jp(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ScrollArea </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/scroll-area/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Separator </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/separator/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> tags </span><span style="color:#FFF8">=</span><span style="color:#FFF"> Array</span><span style="color:#FFF8">.</span><span style="color:#FFF">from</span><span style="color:#FFF8">(&#123;</span><span style="color:#FFF"> length</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 50</span><span style="color:#FFF8"> &#125;).</span><span style="color:#FFF">map</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">    (</span><span style="color:#FFF">_</span><span style="color:#FFF8">,</span><span style="color:#FFF"> i</span><span style="color:#FFF8">,</span><span style="color:#FFF"> a</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#96;v1.2.0-beta.$&#123;</span><span style="color:#FFF">a</span><span style="color:#FFF8">.length - </span><span style="color:#FFF">i</span><span style="color:#FFF8">&#125;&#96;</span></span>
<span data-line=""><span style="color:#FFF8">  );</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ScrollArea class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-72 w-48 rounded-md border"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">h4 class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mb-4 text-sm font-medium leading-none"</span><span style="color:#FFF8">></span><span style="color:#FFF">Tags</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h4</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> tags </span><span style="color:#FFF8">as</span><span style="color:#FFF"> tag</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;</span><span style="color:#FFF">tag</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Separator class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"my-2"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ScrollArea</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Tp(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Ep]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[jp]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/scroll-area-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/scroll-area-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Gp(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ScrollArea </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/scroll-area/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  type</span><span style="color:#FFF;font-weight:bold"> Artwork</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    artist</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">    art</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> works</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Artwork</span><span style="color:#FFF8">[]</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Ornella Binni"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1465869185982-5a1a7522cbcb?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Tom Byrom"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1548516173-3cabfa4607e9?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Vladimir Malyavko"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1494337480532-3725c85fd2ab?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ScrollArea</span></span>
<span data-line=""><span style="color:#FFF">  class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-96 whitespace-nowrap rounded-md border"</span></span>
<span data-line=""><span style="color:#FFF">  orientation</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"horizontal"</span></span>
<span data-line=""><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-max space-x-4 p-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> works </span><span style="color:#FFF8">as</span><span style="color:#FFF"> artwork </span><span style="color:#FFF8">(</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">figure class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"shrink-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"overflow-hidden rounded-md"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">img</span></span>
<span data-line=""><span style="color:#FFF">            src</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">art</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            alt</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF8">&#96;Photo by $&#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">&#125;&#96;</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"aspect-[3/4] h-fit w-fit object-cover"</span></span>
<span data-line=""><span style="color:#FFF">            width</span><span style="color:#FFF8">=&#123;300&#125;</span></span>
<span data-line=""><span style="color:#FFF">            height</span><span style="color:#FFF8">=&#123;400&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">figcaption class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"pt-2 text-xs text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">          Photo by</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold text-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">figcaption</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">figure</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ScrollArea</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Ap(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> ScrollArea </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/scroll-area/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  type</span><span style="color:#FFF;font-weight:bold"> Artwork</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    artist</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">    art</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> works</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Artwork</span><span style="color:#FFF8">[]</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Ornella Binni"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1465869185982-5a1a7522cbcb?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Tom Byrom"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1548516173-3cabfa4607e9?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      artist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Vladimir Malyavko"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      art</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "https://images.unsplash.com/photo-1494337480532-3725c85fd2ab?auto=format&amp;fit=crop&amp;w=300&amp;q=80"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ScrollArea</span></span>
<span data-line=""><span style="color:#FFF">  class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-96 whitespace-nowrap rounded-md border"</span></span>
<span data-line=""><span style="color:#FFF">  orientation</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"horizontal"</span></span>
<span data-line=""><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex w-max space-x-4 p-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> works </span><span style="color:#FFF8">as</span><span style="color:#FFF"> artwork </span><span style="color:#FFF8">(</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">figure class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"shrink-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"overflow-hidden rounded-md"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">img</span></span>
<span data-line=""><span style="color:#FFF">            src</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">art</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            alt</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF8">&#96;Photo by $&#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">&#125;&#96;</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"aspect-[3/4] h-fit w-fit object-cover"</span></span>
<span data-line=""><span style="color:#FFF">            width</span><span style="color:#FFF8">=&#123;300&#125;</span></span>
<span data-line=""><span style="color:#FFF">            height</span><span style="color:#FFF8">=&#123;400&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">figcaption class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"pt-2 text-xs text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">          Photo by</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold text-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">artwork</span><span style="color:#FFF8">.</span><span style="color:#FFF">artist</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">figcaption</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">figure</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ScrollArea</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Up(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Gp]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Ap]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/scroll-area-horizontal.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/scroll-area-horizontal.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function zp(y){let s;return{c(){s=$("February 2024")},l(a){s=f(a,"February 2024")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Mp(y){let s;return{c(){s=$("New Component: Resizable")},l(a){s=f(a,"New Component: Resizable")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Np(y){let s;return{c(){s=$("Resizable")},l(a){s=f(a,"Resizable")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Vp(y){let s;return{c(){s=$("PaneForge")},l(a){s=f(a,"PaneForge")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Wp(y){let s;return{c(){s=$("PaneForge GitHub")},l(a){s=f(a,"PaneForge GitHub")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Hp(y){let s,a,F,l,p,i,d,o;return a=new U({props:{href:"/docs/components/resizable",$$slots:{default:[Np]},$$scope:{ctx:y}}}),l=new U({props:{href:"https://paneforge.com",$$slots:{default:[Vp]},$$scope:{ctx:y}}}),i=new U({props:{href:"https://github.com/svecosystem/paneforge",$$slots:{default:[Wp]},$$scope:{ctx:y}}}),{c(){s=$("We've added a new component to the project, "),x(a.$$.fragment),F=$(", which is built on top of "),x(l.$$.fragment),p=$(". PaneForge is still in an early stage, so be sure to raise any issues you find with the library on the "),x(i.$$.fragment),d=$(".")},l(e){s=f(e,"We've added a new component to the project, "),v(a.$$.fragment,e),F=f(e,", which is built on top of "),v(l.$$.fragment,e),p=f(e,". PaneForge is still in an early stage, so be sure to raise any issues you find with the library on the "),v(i.$$.fragment,e),d=f(e,".")},m(e,m){r(e,s,m),b(a,e,m),r(e,F,m),b(l,e,m),r(e,p,m),b(i,e,m),r(e,d,m),o=!0},p(e,m){const u={};m&64&&(u.$$scope={dirty:m,ctx:e}),a.$set(u);const B={};m&64&&(B.$$scope={dirty:m,ctx:e}),l.$set(B);const E={};m&64&&(E.$$scope={dirty:m,ctx:e}),i.$set(E)},i(e){o||(w(a.$$.fragment,e),w(l.$$.fragment,e),w(i.$$.fragment,e),o=!0)},o(e){h(a.$$.fragment,e),h(l.$$.fragment,e),h(i.$$.fragment,e),o=!1},d(e){e&&(t(s),t(F),t(p),t(d)),g(a,e),g(l,e),g(i,e)}}}function Op(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Resizable </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/resizable/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup direction</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"horizontal"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-md rounded-lg border"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;50&#125;></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-[200px] items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">One</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Handle </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;50&#125;></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup direction</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"vertical"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;25&#125;></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-full items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">Two</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Handle </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;75&#125;></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-full items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">Three</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Kp(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Resizable </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/resizable/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup direction</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"horizontal"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"max-w-md rounded-lg border"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;50&#125;></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-[200px] items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">One</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Handle </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;50&#125;></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup direction</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"vertical"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;25&#125;></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-full items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">Two</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Handle </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane defaultSize</span><span style="color:#FFF8">=&#123;75&#125;></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex h-full items-center justify-center p-6"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">Three</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">Pane</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Resizable</span><span style="color:#FFF8">.</span><span style="color:#FFF">PaneGroup</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Zp(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Op]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Kp]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/resizable-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/resizable-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function qp(y){let s;return{c(){s=$("Updated Icon Imports")},l(a){s=f(a,"Updated Icon Imports")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Yp(y){let s;return{c(){s=$("svelte-radix")},l(a){s=f(a,"svelte-radix")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Xp(y){let s,a,F="<code>radix-icons-svelte</code>",l,p,i,d,o="<code>new-york</code>",e,m;return p=new U({props:{href:"https://github.com/shinokada/svelte-radix",$$slots:{default:[Yp]},$$scope:{ctx:y}}}),{c(){s=$("After some feedback about dev server performance, we've updated the way we import icons. With this change, we've decided to move away from the unmaintained "),a=new P(!1),l=$(" package to "),x(p.$$.fragment),i=$(" for the "),d=new P(!1),e=$(" style."),this.h()},l(u){s=f(u,"After some feedback about dev server performance, we've updated the way we import icons. With this change, we've decided to move away from the unmaintained "),a=I(u,!1),l=f(u," package to "),v(p.$$.fragment,u),i=f(u," for the "),d=I(u,!1),e=f(u," style."),this.h()},h(){a.a=l,d.a=e},m(u,B){r(u,s,B),a.m(F,u,B),r(u,l,B),b(p,u,B),r(u,i,B),d.m(o,u,B),r(u,e,B),m=!0},p(u,B){const E={};B&64&&(E.$$scope={dirty:B,ctx:u}),p.$set(E)},i(u){m||(w(p.$$.fragment,u),m=!0)},o(u){h(p.$$.fragment,u),m=!1},d(u){u&&(t(s),a.d(),t(l),t(i),d.d(),t(e)),g(p,u)}}}function Jp(y){let s;return{c(){s=$("Instead of importing icons like so:")},l(a){s=f(a,"Instead of importing icons like so:")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Qp(y){let s,a=`<code data-language="ts" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "lucide-svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">//</span><span style="color:#FFF4"> or</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "radix-icons-svelte"</span><span style="color:#FFF8">;</span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function so(y){let s;return{c(){s=$("We now import them directly:")},l(a){s=f(a,"We now import them directly:")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ao(y){let s,a=`<code data-language="ts" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/check"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">//</span><span style="color:#FFF4"> or</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Check.svelte"</span><span style="color:#FFF8">;</span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function no(y){let s;return{c(){s=$("With deep imports, we're preventing Vite from optimizing the entire icon collections, and instead only optimizing the icons that are actually used in your project. From what we've seen, this has a massive impact on dev server performance. Enjoy! ðŸš€")},l(a){s=f(a,"With deep imports, we're preventing Vite from optimizing the entire icon collections, and instead only optimizing the icons that are actually used in your project. From what we've seen, this has a massive impact on dev server performance. Enjoy! ðŸš€")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Fo(y){let s;return{c(){s=$("Major Forms Update")},l(a){s=f(a,"Major Forms Update")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function lo(y){let s,a,F="<code>shadcn-svelte</code>",l;return{c(){s=$("Formsnap has been completely rewritten to be more flexible, easier to use, and less opinionated. This means we've had to make some changes to the way we use it in "),a=new P(!1),l=$(", but once you get the hang of it, you'll find it's much more powerful and less restrictive than the previous iteration."),this.h()},l(p){s=f(p,"Formsnap has been completely rewritten to be more flexible, easier to use, and less opinionated. This means we've had to make some changes to the way we use it in "),a=I(p,!1),l=f(p,", but once you get the hang of it, you'll find it's much more powerful and less restrictive than the previous iteration."),this.h()},h(){a.a=l},m(p,i){r(p,s,i),a.m(F,p,i),r(p,l,i)},p:T,d(p){p&&(t(s),a.d(),t(l))}}}function po(y){let s,a,F="<code>formsnap</code>",l,p,i="<code>sveltekit-superforms</code>",d;return{c(){s=$("Since the changes are so significant, there isn't a direct migration path from the old version to the new version. You'll need to update your components to use the new API, as well as ensure you're using the latest version of "),a=new P(!1),l=$(" and "),p=new P(!1),d=$("."),this.h()},l(o){s=f(o,"Since the changes are so significant, there isn't a direct migration path from the old version to the new version. You'll need to update your components to use the new API, as well as ensure you're using the latest version of "),a=I(o,!1),l=f(o," and "),p=I(o,!1),d=f(o,"."),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function oo(y){let s;return{c(){s=$("Forms Examples")},l(a){s=f(a,"Forms Examples")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function eo(y){let s,a,F="<code>Form</code>",l,p,i,d;return p=new U({props:{href:"/examples/forms",$$slots:{default:[oo]},$$scope:{ctx:y}}}),{c(){s=$("All of the "),a=new P(!1),l=$(" components have been updated to use the new API, and you can see live examples of them on the "),x(p.$$.fragment),i=$(" page."),this.h()},l(o){s=f(o,"All of the "),a=I(o,!1),l=f(o," components have been updated to use the new API, and you can see live examples of them on the "),v(p.$$.fragment,o),i=f(o," page."),this.h()},h(){a.a=l},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),b(p,o,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),p.$set(m)},i(o){d||(w(p.$$.fragment,o),d=!0)},o(o){h(p.$$.fragment,o),d=!1},d(o){o&&(t(s),a.d(),t(l),t(i)),g(p,o)}}}function to(y){let s;return{c(){s=$("Formsnap")},l(a){s=f(a,"Formsnap")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ro(y){let s,a,F,l;return a=new U({props:{href:"https://formsnap.dev",$$slots:{default:[to]},$$scope:{ctx:y}}}),{c(){s=$("Visit the "),x(a.$$.fragment),F=$(" documentation (which has also been updated) to learn more about the new API and how its used.")},l(p){s=f(p,"Visit the "),v(a.$$.fragment,p),F=f(p," documentation (which has also been updated) to learn more about the new API and how its used.")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function co(y){let s;return{c(){s=$("January 2024")},l(a){s=f(a,"January 2024")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function yo(y){let s;return{c(){s=$("Carousel")},l(a){s=f(a,"Carousel")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function io(y){let s;return{c(){s=$("Drawer")},l(a){s=f(a,"Drawer")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function mo(y){let s;return{c(){s=$("Sonner")},l(a){s=f(a,"Sonner")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function uo(y){let s;return{c(){s=$("Pagination")},l(a){s=f(a,"Pagination")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function fo(y){let s,a,F,l,p,i,d,o,e,m;return a=new U({props:{href:"/docs/components/carousel",$$slots:{default:[yo]},$$scope:{ctx:y}}}),l=new U({props:{href:"/docs/components/drawer",$$slots:{default:[io]},$$scope:{ctx:y}}}),i=new U({props:{href:"/docs/components/sonner",$$slots:{default:[mo]},$$scope:{ctx:y}}}),o=new U({props:{href:"/docs/components/pagination",$$slots:{default:[uo]},$$scope:{ctx:y}}}),{c(){s=$("We've added four new components to the project, "),x(a.$$.fragment),F=$(", "),x(l.$$.fragment),p=$(", "),x(i.$$.fragment),d=$(", & "),x(o.$$.fragment),e=$(".")},l(u){s=f(u,"We've added four new components to the project, "),v(a.$$.fragment,u),F=f(u,", "),v(l.$$.fragment,u),p=f(u,", "),v(i.$$.fragment,u),d=f(u,", & "),v(o.$$.fragment,u),e=f(u,".")},m(u,B){r(u,s,B),b(a,u,B),r(u,F,B),b(l,u,B),r(u,p,B),b(i,u,B),r(u,d,B),b(o,u,B),r(u,e,B),m=!0},p(u,B){const E={};B&64&&(E.$$scope={dirty:B,ctx:u}),a.$set(E);const L={};B&64&&(L.$$scope={dirty:B,ctx:u}),l.$set(L);const A={};B&64&&(A.$$scope={dirty:B,ctx:u}),i.$set(A);const W={};B&64&&(W.$$scope={dirty:B,ctx:u}),o.$set(W)},i(u){m||(w(a.$$.fragment,u),w(l.$$.fragment,u),w(i.$$.fragment,u),w(o.$$.fragment,u),m=!0)},o(u){h(a.$$.fragment,u),h(l.$$.fragment,u),h(i.$$.fragment,u),h(o.$$.fragment,u),m=!1},d(u){u&&(t(s),t(F),t(p),t(d),t(e)),g(a,u),g(l,u),g(i,u),g(o,u)}}}function $o(y){let s;return{c(){s=$("New Component: Carousel")},l(a){s=f(a,"New Component: Carousel")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function _o(y){let s;return{c(){s=$("Carousel")},l(a){s=f(a,"Carousel")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function go(y){let s,a,F,l;return a=new U({props:{href:"/docs/components/carousel",$$slots:{default:[_o]},$$scope:{ctx:y}}}),{c(){s=$("We've added a new component to the project, "),x(a.$$.fragment),F=$(".")},l(p){s=f(p,"We've added a new component to the project, "),v(a.$$.fragment,p),F=f(p,".")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function ho(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Card </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/card/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Carousel </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/carousel/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-full max-w-xs"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> Array</span><span style="color:#FFF8">(5)</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> _</span><span style="color:#FFF8">,</span><span style="color:#FFF"> i </span><span style="color:#FFF8">(</span><span style="color:#FFF">i</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-1"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span></span>
<span data-line=""><span style="color:#FFF">              class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex aspect-square items-center justify-center p-6"</span></span>
<span data-line=""><span style="color:#FFF8">            ></span></span>
<span data-line=""><span style="color:#FFF8">              &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-4xl font-semibold"</span><span style="color:#FFF8">>&#123;</span><span style="color:#FFF">i </span><span style="color:#FFF8">+</span><span style="color:#FFF8"> 1&#125;&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Previous </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Next </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function wo(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Card </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/card/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Carousel </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/carousel/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-full max-w-xs"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> Array</span><span style="color:#FFF8">(5)</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> _</span><span style="color:#FFF8">,</span><span style="color:#FFF"> i </span><span style="color:#FFF8">(</span><span style="color:#FFF">i</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-1"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span></span>
<span data-line=""><span style="color:#FFF">              class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex aspect-square items-center justify-center p-6"</span></span>
<span data-line=""><span style="color:#FFF8">            ></span></span>
<span data-line=""><span style="color:#FFF8">              &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-4xl font-semibold"</span><span style="color:#FFF8">>&#123;</span><span style="color:#FFF">i </span><span style="color:#FFF8">+</span><span style="color:#FFF8"> 1&#125;&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Card</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Previous </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Next </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Carousel</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function bo(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ho]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[wo]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/carousel-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/carousel-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function vo(y){let s;return{c(){s=$("New Component: Drawer")},l(a){s=f(a,"New Component: Drawer")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function xo(y){let s;return{c(){s=$("vaul-svelte")},l(a){s=f(a,"vaul-svelte")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ko(y){let s;return{c(){s=$("vaul")},l(a){s=f(a,"vaul")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Co(y){let s;return{c(){s=$("Emil Kowalski")},l(a){s=f(a,"Emil Kowalski")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Bo(y){let s,a,F,l,p,i,d,o;return a=new U({props:{href:"https://vaul-svelte.com",$$slots:{default:[xo]},$$scope:{ctx:y}}}),l=new U({props:{href:"https://vaul.emilkowalski.ski/",$$slots:{default:[ko]},$$scope:{ctx:y}}}),i=new U({props:{href:"https://twitter.com/emilkowalski_",$$slots:{default:[Co]},$$scope:{ctx:y}}}),{c(){s=$("The Drawer is built on top of "),x(a.$$.fragment),F=$(" and is a port of "),x(l.$$.fragment),p=$(", originally created by "),x(i.$$.fragment),d=$(" for React.")},l(e){s=f(e,"The Drawer is built on top of "),v(a.$$.fragment,e),F=f(e," and is a port of "),v(l.$$.fragment,e),p=f(e,", originally created by "),v(i.$$.fragment,e),d=f(e," for React.")},m(e,m){r(e,s,m),b(a,e,m),r(e,F,m),b(l,e,m),r(e,p,m),b(i,e,m),r(e,d,m),o=!0},p(e,m){const u={};m&64&&(u.$$scope={dirty:m,ctx:e}),a.$set(u);const B={};m&64&&(B.$$scope={dirty:m,ctx:e}),l.$set(B);const E={};m&64&&(E.$$scope={dirty:m,ctx:e}),i.$set(E)},i(e){o||(w(a.$$.fragment,e),w(l.$$.fragment,e),w(i.$$.fragment,e),o=!0)},o(e){h(a.$$.fragment,e),h(l.$$.fragment,e),h(i.$$.fragment,e),o=!1},d(e){e&&(t(s),t(F),t(p),t(d)),g(a,e),g(l,e),g(i,e)}}}function So(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Minus </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Minus.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Plus </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Plus.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> VisGroupedBar</span><span style="color:#FFF8">,</span><span style="color:#FFF"> VisXYContainer </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@unovis/svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Drawer </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/drawer/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> data </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 1,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 400</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 2,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 3,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 4,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 5,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 6,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 278</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 7,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 189</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 8,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 239</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 9,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 10,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 11,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 278</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 12,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 189</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 13,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 349</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> x</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span><span style="color:#FFF">d</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> goal</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span><span style="color:#FFF"> id</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> d</span><span style="color:#FFF8">.</span><span style="color:#FFF">id</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> y</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span><span style="color:#FFF">d</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> goal</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span><span style="color:#FFF"> id</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> d</span><span style="color:#FFF8">.</span><span style="color:#FFF">goal</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> goal </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> 350;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  function</span><span style="color:#FFF;font-weight:bold"> handleClick</span><span style="color:#FFF8">(</span><span style="color:#FFF">adjustment</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    goal </span><span style="color:#FFF8">=</span><span style="color:#FFF"> Math</span><span style="color:#FFF8">.</span><span style="color:#FFF">max</span><span style="color:#FFF8">(200,</span><span style="color:#FFF"> Math</span><span style="color:#FFF8">.</span><span style="color:#FFF">min</span><span style="color:#FFF8">(400,</span><span style="color:#FFF"> goal </span><span style="color:#FFF8">+</span><span style="color:#FFF"> adjustment</span><span style="color:#FFF8">));</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Open Drawer</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mx-auto w-full max-w-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Header</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Title</span><span style="color:#FFF8">></span><span style="color:#FFF">Move Goal</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Title</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span><span style="color:#FFF">Set your daily activity goal.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Header</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-4 pb-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center justify-center space-x-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">            variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">            size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-8 w-8 shrink-0 rounded-full"</span></span>
<span data-line=""><span style="color:#FFF8">            on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> handleClick</span><span style="color:#FFF8">(-10)&#125;</span></span>
<span data-line=""><span style="color:#FFF">            disabled</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">goal </span><span style="color:#FFF8">&lt;=</span><span style="color:#FFF8"> 200&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Minus class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Decrease</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex-1 text-center"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-7xl font-bold tracking-tighter"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">              &#123;</span><span style="color:#FFF">goal</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-[0.70rem] uppercase text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">              Calories/day</span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">            variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">            size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-8 w-8 shrink-0 rounded-full"</span></span>
<span data-line=""><span style="color:#FFF8">            on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> handleClick</span><span style="color:#FFF8">(10)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Plus class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Increase</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mt-3 h-[120px]"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">VisXYContainer &#123;data&#125; height</span><span style="color:#FFF8">=&#123;60&#125;></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">VisGroupedBar &#123;x&#125; &#123;y&#125; color</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hsl(var(--primary) / 0.2)"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">VisXYContainer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Footer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span><span style="color:#FFF">Submit</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Close asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Cancel</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Close</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Footer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Io(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Minus </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/minus"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Plus </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/plus"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> VisGroupedBar</span><span style="color:#FFF8">,</span><span style="color:#FFF"> VisXYContainer </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@unovis/svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Drawer </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/drawer/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> data </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 1,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 400</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 2,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 3,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 4,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 5,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 6,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 278</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 7,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 189</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 8,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 239</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 9,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 300</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 10,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 200</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 11,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 278</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 12,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 189</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      id</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 13,</span></span>
<span data-line=""><span style="color:#FFF">      goal</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 349</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> x</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span><span style="color:#FFF">d</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> goal</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span><span style="color:#FFF"> id</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> d</span><span style="color:#FFF8">.</span><span style="color:#FFF">id</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> y</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span><span style="color:#FFF">d</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> goal</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span><span style="color:#FFF"> id</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number </span><span style="color:#FFF8">&#125;)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> d</span><span style="color:#FFF8">.</span><span style="color:#FFF">goal</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> goal </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> 350;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  function</span><span style="color:#FFF;font-weight:bold"> handleClick</span><span style="color:#FFF8">(</span><span style="color:#FFF">adjustment</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    goal </span><span style="color:#FFF8">=</span><span style="color:#FFF"> Math</span><span style="color:#FFF8">.</span><span style="color:#FFF">max</span><span style="color:#FFF8">(200,</span><span style="color:#FFF"> Math</span><span style="color:#FFF8">.</span><span style="color:#FFF">min</span><span style="color:#FFF8">(400,</span><span style="color:#FFF"> goal </span><span style="color:#FFF8">+</span><span style="color:#FFF"> adjustment</span><span style="color:#FFF8">));</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Open Drawer</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mx-auto w-full max-w-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Header</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Title</span><span style="color:#FFF8">></span><span style="color:#FFF">Move Goal</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Title</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span><span style="color:#FFF">Set your daily activity goal.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Description</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Header</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"p-4 pb-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center justify-center space-x-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">            variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">            size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-8 w-8 shrink-0 rounded-full"</span></span>
<span data-line=""><span style="color:#FFF8">            on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> handleClick</span><span style="color:#FFF8">(-10)&#125;</span></span>
<span data-line=""><span style="color:#FFF">            disabled</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">goal </span><span style="color:#FFF8">&lt;=</span><span style="color:#FFF8"> 200&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Minus class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Decrease</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex-1 text-center"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-7xl font-bold tracking-tighter"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">              &#123;</span><span style="color:#FFF">goal</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-[0.70rem] uppercase text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">              Calories/day</span></span>
<span data-line=""><span style="color:#FFF8">            &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">            variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">            size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"icon"</span></span>
<span data-line=""><span style="color:#FFF">            class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-8 w-8 shrink-0 rounded-full"</span></span>
<span data-line=""><span style="color:#FFF8">            on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> handleClick</span><span style="color:#FFF8">(10)&#125;</span></span>
<span data-line=""><span style="color:#FFF">            disabled</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">goal </span><span style="color:#FFF8">>=</span><span style="color:#FFF8"> 400&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Plus class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Increase</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mt-3 h-[120px]"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">VisXYContainer &#123;data&#125; height</span><span style="color:#FFF8">=&#123;60&#125;></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">VisGroupedBar &#123;x&#125; &#123;y&#125; color</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hsl(var(--primary) / 0.2)"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">VisXYContainer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Footer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span><span style="color:#FFF">Submit</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Close asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span><span style="color:#FFF8">></span><span style="color:#FFF">Cancel</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Close</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Footer</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Drawer</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Po(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[So]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Io]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/drawer-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/drawer-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Lo(y){let s;return{c(){s=$("New Component: Sonner")},l(a){s=f(a,"New Component: Sonner")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ro(y){let s;return{c(){s=$("svelte-sonner")},l(a){s=f(a,"svelte-sonner")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Do(y){let s;return{c(){s=$("Sonner")},l(a){s=f(a,"Sonner")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Eo(y){let s;return{c(){s=$("Emil Kowalski")},l(a){s=f(a,"Emil Kowalski")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function jo(y){let s,a,F,l,p,i,d,o;return a=new U({props:{href:"https://svelte-sonner.vercel.app/",$$slots:{default:[Ro]},$$scope:{ctx:y}}}),l=new U({props:{href:"https://sonner.emilkowal.ski/",$$slots:{default:[Do]},$$scope:{ctx:y}}}),i=new U({props:{href:"https://twitter.com/emilkowalski_",$$slots:{default:[Eo]},$$scope:{ctx:y}}}),{c(){s=$("The Sonner component is provided by "),x(a.$$.fragment),F=$(", which is a Svelte port of "),x(l.$$.fragment),p=$(", originally created by "),x(i.$$.fragment),d=$(" for React.")},l(e){s=f(e,"The Sonner component is provided by "),v(a.$$.fragment,e),F=f(e,", which is a Svelte port of "),v(l.$$.fragment,e),p=f(e,", originally created by "),v(i.$$.fragment,e),d=f(e," for React.")},m(e,m){r(e,s,m),b(a,e,m),r(e,F,m),b(l,e,m),r(e,p,m),b(i,e,m),r(e,d,m),o=!0},p(e,m){const u={};m&64&&(u.$$scope={dirty:m,ctx:e}),a.$set(u);const B={};m&64&&(B.$$scope={dirty:m,ctx:e}),l.$set(B);const E={};m&64&&(E.$$scope={dirty:m,ctx:e}),i.$set(E)},i(e){o||(w(a.$$.fragment,e),w(l.$$.fragment,e),w(i.$$.fragment,e),o=!0)},o(e){h(a.$$.fragment,e),h(l.$$.fragment,e),h(i.$$.fragment,e),o=!1},d(e){e&&(t(s),t(F),t(p),t(d)),g(a,e),g(l,e),g(i,e)}}}function To(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toast </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-sonner"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">  variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF8">  on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span></span>
<span data-line=""><span style="color:#FFF">    toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">success</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Event has been created"</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      description</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Sunday, December 03, 2023 at 9:00 AM"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      action</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Undo"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">        onClick</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> ()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> console</span><span style="color:#FFF8">.</span><span style="color:#FFF">info</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Undo"</span><span style="color:#FFF8">)</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">  Show Toast</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Go(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> toast </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-sonner"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">  variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF8">  on:</span><span style="color:#FFF;font-weight:bold">click</span><span style="color:#FFF8">=&#123;()</span><span style="color:#FFF8"> =></span></span>
<span data-line=""><span style="color:#FFF">    toast</span><span style="color:#FFF8">.</span><span style="color:#FFF">success</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Event has been created"</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      description</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Sunday, December 03, 2023 at 9:00 AM"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      action</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Undo"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">        onClick</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> ()</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> console</span><span style="color:#FFF8">.</span><span style="color:#FFF">info</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"Undo"</span><span style="color:#FFF8">)</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">  Show Toast</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Ao(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[To]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Go]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/sonner-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/sonner-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Uo(y){let s;return{c(){s=$("New Component: Pagination")},l(a){s=f(a,"New Component: Pagination")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function zo(y){let s;return{c(){s=$("Pagination")},l(a){s=f(a,"Pagination")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Mo(y){let s,a,F,l;return a=new U({props:{href:"https://bits-ui.com/docs/components/pagination",$$slots:{default:[zo]},$$scope:{ctx:y}}}),{c(){s=$("Pagination leverages the "),x(a.$$.fragment),F=$(" component from Bits UI.")},l(p){s=f(p,"Pagination leverages the "),v(a.$$.fragment,p),F=f(p," component from Bits UI.")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function No(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronLeft </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/ChevronLeft.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronRight </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/ChevronRight.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> mediaQuery </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-legos"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Pagination </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/pagination/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> isDesktop </span><span style="color:#FFF8">=</span><span style="color:#FFF"> mediaQuery</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"(min-width: 768px)"</span><span style="color:#FFF8">);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> count </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> 20;</span></span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> perPage </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> $</span><span style="color:#FFF">isDesktop </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 3</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 8;</span></span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> siblingCount </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> $</span><span style="color:#FFF">isDesktop </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 1</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 0;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root &#123;count&#125; &#123;perPage&#125; &#123;siblingCount&#125; </span><span style="color:#FFF8">let:</span><span style="color:#FFF">pages </span><span style="color:#FFF8">let:</span><span style="color:#FFF">currentPage</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">PrevButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">ChevronLeft class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hidden sm:block"</span><span style="color:#FFF8">></span><span style="color:#FFF">Previous</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">PrevButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> pages </span><span style="color:#FFF8">as</span><span style="color:#FFF"> page </span><span style="color:#FFF8">(</span><span style="color:#FFF">page</span><span style="color:#FFF8">.</span><span style="color:#FFF">key</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &#123;#if</span><span style="color:#FFF"> page</span><span style="color:#FFF8">.</span><span style="color:#FFF">type </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "ellipsis"</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Ellipsis </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;:else&#125;</span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link &#123;page&#125; isActive</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">currentPage </span><span style="color:#FFF8">===</span><span style="color:#FFF"> page</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">page</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;/if&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">NextButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hidden sm:block"</span><span style="color:#FFF8">></span><span style="color:#FFF">Next</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">ChevronRight class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">NextButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Vo(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronLeft </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/chevron-left"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronRight </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/chevron-right"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> mediaQuery </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte-legos"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Pagination </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/pagination/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> isDesktop </span><span style="color:#FFF8">=</span><span style="color:#FFF"> mediaQuery</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"(min-width: 768px)"</span><span style="color:#FFF8">);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> count </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> 20;</span></span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> perPage </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> $</span><span style="color:#FFF">isDesktop </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 3</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 8;</span></span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> siblingCount </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> $</span><span style="color:#FFF">isDesktop </span><span style="color:#FFF8">?</span><span style="color:#FFF8"> 1</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> 0;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root &#123;count&#125; &#123;perPage&#125; &#123;siblingCount&#125; </span><span style="color:#FFF8">let:</span><span style="color:#FFF">pages </span><span style="color:#FFF8">let:</span><span style="color:#FFF">currentPage</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">PrevButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">ChevronLeft class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hidden sm:block"</span><span style="color:#FFF8">></span><span style="color:#FFF">Previous</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">PrevButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &#123;#each</span><span style="color:#FFF"> pages </span><span style="color:#FFF8">as</span><span style="color:#FFF"> page </span><span style="color:#FFF8">(</span><span style="color:#FFF">page</span><span style="color:#FFF8">.</span><span style="color:#FFF">key</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &#123;#if</span><span style="color:#FFF"> page</span><span style="color:#FFF8">.</span><span style="color:#FFF">type </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "ellipsis"</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Ellipsis </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;:else&#125;</span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link &#123;page&#125; isActive</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">currentPage </span><span style="color:#FFF8">===</span><span style="color:#FFF"> page</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">page</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Link</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;/if&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">NextButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"hidden sm:block"</span><span style="color:#FFF8">></span><span style="color:#FFF">Next</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">ChevronRight class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">NextButton</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Pagination</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Wo(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[No]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Vo]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/pagination-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/pagination-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Ho(y){let s;return{c(){s=$("December 2023")},l(a){s=f(a,"December 2023")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Oo(y){let s;return{c(){s=$("Calendar")},l(a){s=f(a,"Calendar")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ko(y){let s;return{c(){s=$("Range Calendar")},l(a){s=f(a,"Range Calendar")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Zo(y){let s;return{c(){s=$("Date Picker")},l(a){s=f(a,"Date Picker")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function qo(y){let s,a,F,l,p,i,d,o;return a=new U({props:{href:"/docs/components/calendar",$$slots:{default:[Oo]},$$scope:{ctx:y}}}),l=new U({props:{href:"/docs/components/range-calendar",$$slots:{default:[Ko]},$$scope:{ctx:y}}}),i=new U({props:{href:"/docs/components/date-picker",$$slots:{default:[Zo]},$$scope:{ctx:y}}}),{c(){s=$("We've added three new components to the project, "),x(a.$$.fragment),F=$(", "),x(l.$$.fragment),p=$(", & "),x(i.$$.fragment),d=$(".")},l(e){s=f(e,"We've added three new components to the project, "),v(a.$$.fragment,e),F=f(e,", "),v(l.$$.fragment,e),p=f(e,", & "),v(i.$$.fragment,e),d=f(e,".")},m(e,m){r(e,s,m),b(a,e,m),r(e,F,m),b(l,e,m),r(e,p,m),b(i,e,m),r(e,d,m),o=!0},p(e,m){const u={};m&64&&(u.$$scope={dirty:m,ctx:e}),a.$set(u);const B={};m&64&&(B.$$scope={dirty:m,ctx:e}),l.$set(B);const E={};m&64&&(E.$$scope={dirty:m,ctx:e}),i.$set(E)},i(e){o||(w(a.$$.fragment,e),w(l.$$.fragment,e),w(i.$$.fragment,e),o=!0)},o(e){h(a.$$.fragment,e),h(l.$$.fragment,e),h(i.$$.fragment,e),o=!1},d(e){e&&(t(s),t(F),t(p),t(d)),g(a,e),g(l,e),g(i,e)}}}function Yo(y){let s;return{c(){s=$("New Component: Calendar")},l(a){s=f(a,"New Component: Calendar")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Xo(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> getLocalTimeZone</span><span style="color:#FFF8">,</span><span style="color:#FFF"> today </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF"> today</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">());</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Calendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border shadow"</span><span style="color:#FFF8"> /></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Jo(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> getLocalTimeZone</span><span style="color:#FFF8">,</span><span style="color:#FFF"> today </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF"> today</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">());</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Calendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border"</span><span style="color:#FFF8"> /></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Qo(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Xo]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Jo]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/calendar-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/calendar-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function se(y){let s;return{c(){s=$("New Component: Range Calendar")},l(a){s=f(a,"New Component: Range Calendar")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ae(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> getLocalTimeZone</span><span style="color:#FFF8">,</span><span style="color:#FFF"> today </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> RangeCalendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/range-calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> start </span><span style="color:#FFF8">=</span><span style="color:#FFF"> today</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">());</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> end </span><span style="color:#FFF8">=</span><span style="color:#FFF"> start</span><span style="color:#FFF8">.</span><span style="color:#FFF">add</span><span style="color:#FFF8">(&#123;</span><span style="color:#FFF"> days</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 7</span><span style="color:#FFF8"> &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    start</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    end</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">RangeCalendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border shadow"</span><span style="color:#FFF8"> /></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function ne(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> getLocalTimeZone</span><span style="color:#FFF8">,</span><span style="color:#FFF"> today </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> RangeCalendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/range-calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> start </span><span style="color:#FFF8">=</span><span style="color:#FFF"> today</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">());</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> end </span><span style="color:#FFF8">=</span><span style="color:#FFF"> start</span><span style="color:#FFF8">.</span><span style="color:#FFF">add</span><span style="color:#FFF8">(&#123;</span><span style="color:#FFF"> days</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 7</span><span style="color:#FFF8"> &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    start</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    end</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">RangeCalendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border"</span><span style="color:#FFF8"> /></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Fe(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ae]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ne]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/range-calendar-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/range-calendar-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function le(y){let s;return{c(){s=$("New Component: Date Picker")},l(a){s=f(a,"New Component: Date Picker")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function pe(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> CalendarIcon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Calendar.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    DateFormatter</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> DateValue</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    getLocalTimeZone</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cn </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/utils.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Popover </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/popover/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> df </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> new</span><span style="color:#FFF"> DateFormatter</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"en-US"</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    dateStyle</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "long"</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> DateValue</span><span style="color:#FFF8"> |</span><span style="color:#FFF"> undefined </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> undefined;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">      variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">      class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">        "w-[240px] justify-start text-left font-normal"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        !</span><span style="color:#FFF">value </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF8"> "text-muted-foreground"</span></span>
<span data-line=""><span style="color:#FFF8">      )&#125;</span></span>
<span data-line=""><span style="color:#FFF">      builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">CalendarIcon class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;</span><span style="color:#FFF">value </span><span style="color:#FFF8">?</span><span style="color:#FFF"> df</span><span style="color:#FFF8">.</span><span style="color:#FFF">format</span><span style="color:#FFF8">(</span><span style="color:#FFF">value</span><span style="color:#FFF8">.</span><span style="color:#FFF">toDate</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">()))</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> "Pick a date"</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-auto p-0"</span><span style="color:#FFF"> align</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"start"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Calendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function oe(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> CalendarIcon </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/calendar"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    DateFormatter</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">    type</span><span style="color:#FFF"> DateValue</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    getLocalTimeZone</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "@internationalized/date"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cn </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/utils.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/calendar/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Popover </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/popover/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> df </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> new</span><span style="color:#FFF"> DateFormatter</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"en-US"</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    dateStyle</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "long"</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> DateValue</span><span style="color:#FFF8"> |</span><span style="color:#FFF"> undefined </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> undefined;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">      variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">      class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">        "w-[280px] justify-start text-left font-normal"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        !</span><span style="color:#FFF">value </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF8"> "text-muted-foreground"</span></span>
<span data-line=""><span style="color:#FFF8">      )&#125;</span></span>
<span data-line=""><span style="color:#FFF">      builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">CalendarIcon class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;</span><span style="color:#FFF">value </span><span style="color:#FFF8">?</span><span style="color:#FFF"> df</span><span style="color:#FFF8">.</span><span style="color:#FFF">format</span><span style="color:#FFF8">(</span><span style="color:#FFF">value</span><span style="color:#FFF8">.</span><span style="color:#FFF">toDate</span><span style="color:#FFF8">(</span><span style="color:#FFF">getLocalTimeZone</span><span style="color:#FFF8">()))</span><span style="color:#FFF8"> :</span><span style="color:#FFF8"> "Pick a date"</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-auto p-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Calendar </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">value initialFocus </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function ee(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[pe]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[oe]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/date-picker-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/date-picker-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function te(y){let s;return{c(){s=$("November 2023")},l(a){s=f(a,"November 2023")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function re(y){let s;return{c(){s=$("New Component: Toggle Group")},l(a){s=f(a,"New Component: Toggle Group")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ce(y){let s;return{c(){s=$("Toggle Group")},l(a){s=f(a,"Toggle Group")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ye(y){let s,a,F,l;return a=new U({props:{href:"/docs/components/toggle-group",$$slots:{default:[ce]},$$scope:{ctx:y}}}),{c(){s=$("We've added a new component to the library, "),x(a.$$.fragment),F=$(".")},l(p){s=f(p,"We've added a new component to the library, "),v(a.$$.fragment,p),F=f(p,".")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function ie(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> FontBold </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/FontBold.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> FontItalic </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/FontItalic.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Underline </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Underline.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> ToggleGroup </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/toggle-group/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"multiple"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"bold"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle bold"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">FontBold class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"italic"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle italic"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">FontItalic class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"strikethrough"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle strikethrough"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Underline class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function de(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Bold </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/bold"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Italic </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/italic"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Underline </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/underline"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> ToggleGroup </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/toggle-group/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root type</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"multiple"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"bold"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle bold"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Bold class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"italic"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle italic"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Italic class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item value</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"strikethrough"</span><span style="color:#FFF"> aria-label</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Toggle strikethrough"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Underline class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">ToggleGroup</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function me(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ie]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[de]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/toggle-group-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/toggle-group-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function ue(y){let s;return{c(){s=$("October 2023")},l(a){s=f(a,"October 2023")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function fe(y){let s;return{c(){s=$("Command")},l(a){s=f(a,"Command")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function $e(y){let s;return{c(){s=$("Combobox")},l(a){s=f(a,"Combobox")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function _e(y){let s,a,F,l,p,i,d="<code>&lt;Form.Label /></code>",o,e;return a=new U({props:{href:"/docs/components/command",$$slots:{default:[fe]},$$scope:{ctx:y}}}),l=new U({props:{href:"/docs/components/combobox",$$slots:{default:[$e]},$$scope:{ctx:y}}}),{c(){s=$("We've added two new components to the library, "),x(a.$$.fragment),F=$(" & "),x(l.$$.fragment),p=$(". We've also made some updates to the "),i=new P(!1),o=$(" component that you'll want to be aware of."),this.h()},l(m){s=f(m,"We've added two new components to the library, "),v(a.$$.fragment,m),F=f(m," & "),v(l.$$.fragment,m),p=f(m,". We've also made some updates to the "),i=I(m,!1),o=f(m," component that you'll want to be aware of."),this.h()},h(){i.a=o},m(m,u){r(m,s,u),b(a,m,u),r(m,F,u),b(l,m,u),r(m,p,u),i.m(d,m,u),r(m,o,u),e=!0},p(m,u){const B={};u&64&&(B.$$scope={dirty:u,ctx:m}),a.$set(B);const E={};u&64&&(E.$$scope={dirty:u,ctx:m}),l.$set(E)},i(m){e||(w(a.$$.fragment,m),w(l.$$.fragment,m),e=!0)},o(m){h(a.$$.fragment,m),h(l.$$.fragment,m),e=!1},d(m){m&&(t(s),t(F),t(p),i.d(),t(o)),g(a,m),g(l,m)}}}function ge(y){let s;return{c(){s=$("New Component: Command")},l(a){s=f(a,"New Component: Command")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function he(y){let s;return{c(){s=$("cmdk-sv")},l(a){s=f(a,"cmdk-sv")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function we(y){let s;return{c(){s=$("cmdk")},l(a){s=f(a,"cmdk")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function be(y){let s;return{c(){s=$("open an issue")},l(a){s=f(a,"open an issue")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ve(y){let s,a,F,l,p,i,d,o;return a=new U({props:{href:"https://cmdk-sv.com",$$slots:{default:[he]},$$scope:{ctx:y}}}),l=new U({props:{href:"https://cmdk.paco.me",$$slots:{default:[we]},$$scope:{ctx:y}}}),i=new U({props:{href:"https://github.com/huntabyte/cmdk-sv",$$slots:{default:[be]},$$scope:{ctx:y}}}),{c(){s=$("Command is a component that allows you to create a command palette. It's built on top of "),x(a.$$.fragment),F=$(", which is a Svelte port of "),x(l.$$.fragment),p=$(". The library is still in its infancy, but we're excited to see where it goes. If you notice any issues, please "),x(i.$$.fragment),d=$(" with the library.")},l(e){s=f(e,"Command is a component that allows you to create a command palette. It's built on top of "),v(a.$$.fragment,e),F=f(e,", which is a Svelte port of "),v(l.$$.fragment,e),p=f(e,". The library is still in its infancy, but we're excited to see where it goes. If you notice any issues, please "),v(i.$$.fragment,e),d=f(e," with the library.")},m(e,m){r(e,s,m),b(a,e,m),r(e,F,m),b(l,e,m),r(e,p,m),b(i,e,m),r(e,d,m),o=!0},p(e,m){const u={};m&64&&(u.$$scope={dirty:m,ctx:e}),a.$set(u);const B={};m&64&&(B.$$scope={dirty:m,ctx:e}),l.$set(B);const E={};m&64&&(E.$$scope={dirty:m,ctx:e}),i.$set(E)},i(e){o||(w(a.$$.fragment,e),w(l.$$.fragment,e),w(i.$$.fragment,e),o=!0)},o(e){h(a.$$.fragment,e),h(l.$$.fragment,e),h(i.$$.fragment,e),o=!1},d(e){e&&(t(s),t(F),t(p),t(d)),g(a,e),g(l,e),g(i,e)}}}function xe(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Calendar.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> EnvelopeClosed </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/EnvelopeClosed.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Face </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Face.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Gear </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Gear.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Person </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Person.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Rocket </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Rocket.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> onMount </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Command </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/command/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">  onMount</span><span style="color:#FFF8">(()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    function</span><span style="color:#FFF;font-weight:bold"> handleKeydown</span><span style="color:#FFF8">(</span><span style="color:#FFF">e</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> KeyboardEvent</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">e</span><span style="color:#FFF8">.</span><span style="color:#FFF">key </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "j"</span><span style="color:#FFF8"> &amp;&amp;</span><span style="color:#FFF8"> (</span><span style="color:#FFF">e</span><span style="color:#FFF8">.</span><span style="color:#FFF">metaKey </span><span style="color:#FFF8">||</span><span style="color:#FFF"> e</span><span style="color:#FFF8">.</span><span style="color:#FFF">ctrlKey</span><span style="color:#FFF8">))</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        e</span><span style="color:#FFF8">.</span><span style="color:#FFF">preventDefault</span><span style="color:#FFF8">();</span></span>
<span data-line=""><span style="color:#FFF">        open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> !</span><span style="color:#FFF">open</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    document</span><span style="color:#FFF8">.</span><span style="color:#FFF">addEventListener</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"keydown"</span><span style="color:#FFF8">,</span><span style="color:#FFF"> handleKeydown</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF8"> ()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      document</span><span style="color:#FFF8">.</span><span style="color:#FFF">removeEventListener</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"keydown"</span><span style="color:#FFF8">,</span><span style="color:#FFF"> handleKeydown</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">p class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">  Press</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">kbd</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100"</span></span>
<span data-line=""><span style="color:#FFF8">  ></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-xs"</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">J</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">kbd</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Dialog </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">open</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Input placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Type a command or search..."</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span><span style="color:#FFF">No results found.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group heading</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Suggestions"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Calendar class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Calendar</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Face class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Search Emoji</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Rocket class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Launch</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group heading</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Settings"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Person class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Profile</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜P</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">EnvelopeClosed class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Mail</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜B</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Gear class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Settings</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜S</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Dialog</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function ke(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Calculator </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/calculator"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Calendar </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/calendar"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> CreditCard </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/credit-card"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Settings </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/settings"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Smile </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/smile"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> User </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/user"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> onMount </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Command </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/command/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">  onMount</span><span style="color:#FFF8">(()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    function</span><span style="color:#FFF;font-weight:bold"> handleKeydown</span><span style="color:#FFF8">(</span><span style="color:#FFF">e</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> KeyboardEvent</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">e</span><span style="color:#FFF8">.</span><span style="color:#FFF">key </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "j"</span><span style="color:#FFF8"> &amp;&amp;</span><span style="color:#FFF8"> (</span><span style="color:#FFF">e</span><span style="color:#FFF8">.</span><span style="color:#FFF">metaKey </span><span style="color:#FFF8">||</span><span style="color:#FFF"> e</span><span style="color:#FFF8">.</span><span style="color:#FFF">ctrlKey</span><span style="color:#FFF8">))</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        e</span><span style="color:#FFF8">.</span><span style="color:#FFF">preventDefault</span><span style="color:#FFF8">();</span></span>
<span data-line=""><span style="color:#FFF">        open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> !</span><span style="color:#FFF">open</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    document</span><span style="color:#FFF8">.</span><span style="color:#FFF">addEventListener</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"keydown"</span><span style="color:#FFF8">,</span><span style="color:#FFF"> handleKeydown</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF8"> ()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      document</span><span style="color:#FFF8">.</span><span style="color:#FFF">removeEventListener</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"keydown"</span><span style="color:#FFF8">,</span><span style="color:#FFF"> handleKeydown</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">p class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm text-muted-foreground"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">  Press</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">kbd</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-mono text-[10px] font-medium text-muted-foreground opacity-100"</span></span>
<span data-line=""><span style="color:#FFF8">  ></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-xs"</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">J</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">kbd</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">p</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Dialog </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">open</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Input placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Type a command or search..."</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span><span style="color:#FFF">No results found.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group heading</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Suggestions"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Calendar class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Calendar</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Smile class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Search Emoji</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Calculator class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Calculator</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Separator </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group heading</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Settings"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">User class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Profile</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜P</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">CreditCard class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Billing</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜B</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Settings class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"mr-2 h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span><span style="color:#FFF">Settings</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span><span style="color:#FFF">âŒ˜S</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Shortcut</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">List</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Dialog</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Ce(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[xe]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ke]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/command-dialog.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/command-dialog.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Be(y){let s;return{c(){s=$("Command")},l(a){s=f(a,"Command")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Se(y){let s,a,F,l;return a=new U({props:{href:"/docs/components/command",$$slots:{default:[Be]},$$scope:{ctx:y}}}),{c(){s=$("Be sure to check out the "),x(a.$$.fragment),F=$(" docs for more information.")},l(p){s=f(p,"Be sure to check out the "),v(a.$$.fragment,p),F=f(p," docs for more information.")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function Ie(y){let s;return{c(){s=$("New Component: Combobox")},l(a){s=f(a,"New Component: Combobox")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Pe(y){let s,a,F="<code>&lt;Command /></code>",l,p,i="<code>&lt;Popover /></code>",d;return{c(){s=$("Combobox is a combination of the "),a=new P(!1),l=$(" & "),p=new P(!1),d=$(" components. It allows you to create a searchable dropdown menu."),this.h()},l(o){s=f(o,"Combobox is a combination of the "),a=I(o,!1),l=f(o," & "),p=I(o,!1),d=f(o," components. It allows you to create a searchable dropdown menu."),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function Le(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/Check.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> CaretSort </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/CaretSort.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> tick </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Command </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/command/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Popover </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/popover/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cn </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/utils.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> frameworks </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "sveltekit"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "SvelteKit"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "next.js"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Next.js"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "nuxt.js"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Nuxt.js"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "remix"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Remix"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "astro"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Astro"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> selectedValue </span><span style="color:#FFF8">=</span></span>
<span data-line=""><span style="color:#FFF">    frameworks</span><span style="color:#FFF8">.</span><span style="color:#FFF">find</span><span style="color:#FFF8">((</span><span style="color:#FFF">f</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> f</span><span style="color:#FFF8">.</span><span style="color:#FFF">value </span><span style="color:#FFF8">===</span><span style="color:#FFF"> value</span><span style="color:#FFF8">)?.</span><span style="color:#FFF">label </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> "Select a framework..."</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> We want to refocus the trigger button when the user selects</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> an item from the list so users can continue navigating the</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> rest of the form with the keyboard.</span></span>
<span data-line=""><span style="color:#FFF8">  function</span><span style="color:#FFF;font-weight:bold"> closeAndFocusTrigger</span><span style="color:#FFF8">(</span><span style="color:#FFF">triggerId</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""><span style="color:#FFF">    tick</span><span style="color:#FFF8">().</span><span style="color:#FFF">then</span><span style="color:#FFF8">(()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      document</span><span style="color:#FFF8">.</span><span style="color:#FFF">getElementById</span><span style="color:#FFF8">(</span><span style="color:#FFF">triggerId</span><span style="color:#FFF8">)?.</span><span style="color:#FFF">focus</span><span style="color:#FFF8">();</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">open </span><span style="color:#FFF8">let:</span><span style="color:#FFF">ids</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">      builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span></span>
<span data-line=""><span style="color:#FFF">      variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">      role</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"combobox"</span></span>
<span data-line=""><span style="color:#FFF">      aria-expanded</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">open</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">      class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[200px] justify-between"</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;</span><span style="color:#FFF">selectedValue</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">CaretSort class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ml-2 h-4 w-4 shrink-0 opacity-50"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[200px] p-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Input placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Search framework..."</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-9"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span><span style="color:#FFF">No framework found.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;#each</span><span style="color:#FFF"> frameworks </span><span style="color:#FFF8">as</span><span style="color:#FFF"> framework</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span></span>
<span data-line=""><span style="color:#FFF">            value</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            onSelect</span><span style="color:#FFF8">=&#123;(</span><span style="color:#FFF">currentValue</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">              value </span><span style="color:#FFF8">=</span><span style="color:#FFF"> currentValue</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">              closeAndFocusTrigger</span><span style="color:#FFF8">(</span><span style="color:#FFF">ids</span><span style="color:#FFF8">.</span><span style="color:#FFF">trigger</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">            &#125;&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Check</span></span>
<span data-line=""><span style="color:#FFF">              class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">                "mr-2 h-4 w-4"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">                value </span><span style="color:#FFF8">!==</span><span style="color:#FFF"> framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">value </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF8"> "text-transparent"</span></span>
<span data-line=""><span style="color:#FFF8">              )&#125;</span></span>
<span data-line=""><span style="color:#FFF8">            /></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">label</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Re(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> Check </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/check"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronsUpDown </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/chevrons-up-down"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> tick </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Command </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/command/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Popover </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/popover/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cn </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/utils.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> frameworks </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> [</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "sveltekit"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "SvelteKit"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "next.js"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Next.js"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "nuxt.js"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Nuxt.js"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "remix"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Remix"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#123;</span></span>
<span data-line=""><span style="color:#FFF">      value</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "astro"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      label</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "Astro"</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ];</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> value </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">  $</span><span style="color:#FFF8">:</span><span style="color:#FFF"> selectedValue </span><span style="color:#FFF8">=</span></span>
<span data-line=""><span style="color:#FFF">    frameworks</span><span style="color:#FFF8">.</span><span style="color:#FFF">find</span><span style="color:#FFF8">((</span><span style="color:#FFF">f</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF"> f</span><span style="color:#FFF8">.</span><span style="color:#FFF">value </span><span style="color:#FFF8">===</span><span style="color:#FFF"> value</span><span style="color:#FFF8">)?.</span><span style="color:#FFF">label </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> "Select a framework..."</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> We want to refocus the trigger button when the user selects</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> an item from the list so users can continue navigating the</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> rest of the form with the keyboard.</span></span>
<span data-line=""><span style="color:#FFF8">  function</span><span style="color:#FFF;font-weight:bold"> closeAndFocusTrigger</span><span style="color:#FFF8">(</span><span style="color:#FFF">triggerId</span><span style="color:#FFF8">:</span><span style="color:#FFF"> string</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    open </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> false;</span></span>
<span data-line=""><span style="color:#FFF">    tick</span><span style="color:#FFF8">().</span><span style="color:#FFF">then</span><span style="color:#FFF8">(()</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      document</span><span style="color:#FFF8">.</span><span style="color:#FFF">getElementById</span><span style="color:#FFF8">(</span><span style="color:#FFF">triggerId</span><span style="color:#FFF8">)?.</span><span style="color:#FFF">focus</span><span style="color:#FFF8">();</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root </span><span style="color:#FFF8">bind:</span><span style="color:#FFF">open </span><span style="color:#FFF8">let:</span><span style="color:#FFF">ids</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Button</span></span>
<span data-line=""><span style="color:#FFF">      builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span></span>
<span data-line=""><span style="color:#FFF">      variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"outline"</span></span>
<span data-line=""><span style="color:#FFF">      role</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"combobox"</span></span>
<span data-line=""><span style="color:#FFF">      aria-expanded</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">open</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">      class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[200px] justify-between"</span></span>
<span data-line=""><span style="color:#FFF8">    ></span></span>
<span data-line=""><span style="color:#FFF8">      &#123;</span><span style="color:#FFF">selectedValue</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">ChevronsUpDown class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ml-2 h-4 w-4 shrink-0 opacity-50"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[200px] p-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Input placeholder</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"Search framework..."</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span><span style="color:#FFF">No framework found.</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Empty</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;#each</span><span style="color:#FFF"> frameworks </span><span style="color:#FFF8">as</span><span style="color:#FFF"> framework</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span></span>
<span data-line=""><span style="color:#FFF">            value</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">value</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">            onSelect</span><span style="color:#FFF8">=&#123;(</span><span style="color:#FFF">currentValue</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">              value </span><span style="color:#FFF8">=</span><span style="color:#FFF"> currentValue</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">              closeAndFocusTrigger</span><span style="color:#FFF8">(</span><span style="color:#FFF">ids</span><span style="color:#FFF8">.</span><span style="color:#FFF">trigger</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">            &#125;&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          ></span></span>
<span data-line=""><span style="color:#FFF8">            &lt;</span><span style="color:#FFF">Check</span></span>
<span data-line=""><span style="color:#FFF">              class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">                "mr-2 h-4 w-4"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">                value </span><span style="color:#FFF8">!==</span><span style="color:#FFF"> framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">value </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF8"> "text-transparent"</span></span>
<span data-line=""><span style="color:#FFF8">              )&#125;</span></span>
<span data-line=""><span style="color:#FFF8">            /></span></span>
<span data-line=""><span style="color:#FFF8">            &#123;</span><span style="color:#FFF">framework</span><span style="color:#FFF8">.</span><span style="color:#FFF">label</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF8">          &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Item</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &#123;/each&#125;</span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Group</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Command</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Popover</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function De(y){let s,a,F,l,p,i,d;return a=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Le]},$$scope:{ctx:y}}}),l=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Re]},$$scope:{ctx:y}}}),{c(){s=D("figure"),x(a.$$.fragment),F=D("figure"),x(l.$$.fragment),p=C(),i=D("div"),this.h()},l(o){s=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var e=j(s);v(a.$$.fragment,e),e.forEach(t),F=R(o,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var m=j(F);v(l.$$.fragment,m),m.forEach(t),p=k(o),i=R(o,"DIV",{}),j(i).forEach(t),this.h()},h(){_(s,"__src__","../src/lib/registry/new-york/example/combobox-demo.svelte"),_(s,"__style__","new-york"),_(s,"class","code"),_(s,"data-rehype-pretty-code-figure",""),_(F,"__src__","../src/lib/registry/default/example/combobox-demo.svelte"),_(F,"__style__","default"),_(F,"class","code"),_(F,"data-rehype-pretty-code-figure","")},m(o,e){r(o,s,e),b(a,s,null),r(o,F,e),b(l,F,null),r(o,p,e),r(o,i,e),d=!0},p(o,e){const m={};e&64&&(m.$$scope={dirty:e,ctx:o}),a.$set(m);const u={};e&64&&(u.$$scope={dirty:e,ctx:o}),l.$set(u)},i(o){d||(w(a.$$.fragment,o),w(l.$$.fragment,o),d=!0)},o(o){h(a.$$.fragment,o),h(l.$$.fragment,o),d=!1},d(o){o&&(t(s),t(F),t(p),t(i)),g(a),g(l)}}}function Ee(y){let s;return{c(){s=$("Combobox")},l(a){s=f(a,"Combobox")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function je(y){let s,a,F,l;return a=new U({props:{href:"/docs/components/combobox",$$slots:{default:[Ee]},$$scope:{ctx:y}}}),{c(){s=$("Be sure to check out the "),x(a.$$.fragment),F=$(" docs for more information.")},l(p){s=f(p,"Be sure to check out the "),v(a.$$.fragment,p),F=f(p," docs for more information.")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function Te(y){let s;return{c(){s=$("Updates to Form")},l(a){s=f(a,"Updates to Form")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ge(y){let s;return{c(){s=$("Form.Label Changes")},l(a){s=f(a,"Form.Label Changes")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ae(y){let s,a,F="<code>&lt;Form.Label /></code>",l,p,i="<code>ids</code>",d,o,e="<code>getFormField()</code>",m,u,B="<code>$</code>",E;return{c(){s=$("Since we had to make some internal changes to formsnap to fix outstanding issues, there is a slight modification we have to make to the "),a=new P(!1),l=$(" component. The "),p=new P(!1),d=$(" returned from "),o=new P(!1),m=$(" is now a store, so we need to prefix it with "),u=new P(!1),E=$(" when we use it."),this.h()},l(L){s=f(L,"Since we had to make some internal changes to formsnap to fix outstanding issues, there is a slight modification we have to make to the "),a=I(L,!1),l=f(L," component. The "),p=I(L,!1),d=f(L," returned from "),o=I(L,!1),m=f(L," is now a store, so we need to prefix it with "),u=I(L,!1),E=f(L," when we use it."),this.h()},h(){a.a=l,p.a=d,o.a=m,u.a=E},m(L,A){r(L,s,A),a.m(F,L,A),r(L,l,A),p.m(i,L,A),r(L,d,A),o.m(e,L,A),r(L,m,A),u.m(B,L,A),r(L,E,A)},p:T,d(L){L&&(t(s),a.d(),t(l),p.d(),t(d),o.d(),t(m),u.d(),t(E))}}}function Ue(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Label</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">  for</span><span style="color:#FFF8">=&#123;$</span><span style="color:#FFF">ids</span><span style="color:#FFF8">.</span><span style="color:#FFF">input</span><span style="color:#FFF8">&#125;</span></span>
<span data-line=""><span style="color:#FFF">  class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">($</span><span style="color:#FFF">errors </span><span style="color:#FFF8">&amp;&amp;</span><span style="color:#FFF8"> "text-destructive"</span><span style="color:#FFF8">,</span><span style="color:#FFF"> className</span><span style="color:#FFF8">)&#125;</span></span>
<span data-line=""><span style="color:#FFF">  &#123;</span><span style="color:#FFF8">...</span><span style="color:#FFF">$$restProps&#125;</span></span>
<span data-line=""><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;slot</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Label</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function ze(y){let s;return{c(){s=$("Form.Control")},l(a){s=f(a,"Form.Control")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Me(y){let s,a,F="<code>&lt;Form.Control /></code>",l,p,i="<code>form/index.ts</code>",d;return{c(){s=$("Formsnap introduced a new component "),a=new P(!1),l=$(" which wraps non-traditional form elements. This allows us to ensure the components are accessible, and work well with the rest of the form components. You'll need to define & export that control in your "),p=new P(!1),d=$(" file."),this.h()},l(o){s=f(o,"Formsnap introduced a new component "),a=I(o,!1),l=f(o," which wraps non-traditional form elements. This allows us to ensure the components are accessible, and work well with the rest of the form components. You'll need to define & export that control in your "),p=I(o,!1),d=f(o," file."),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function Ne(y){let s,a=`<code data-language="ts" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">//</span><span style="color:#FFF4"> ...rest</span></span>
<span data-line=""><span style="color:#FFF8">const</span><span style="color:#FFF"> Control </span><span style="color:#FFF8">=</span><span style="color:#FFF"> FormPrimitive</span><span style="color:#FFF8">.</span><span style="color:#FFF">Control</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> ...rest</span></span>
<span data-line=""><span style="color:#FFF">  Control</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">  Control </span><span style="color:#FFF8">as</span><span style="color:#FFF"> FormControl</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function Ve(y){let s;return{c(){s=$("August 2023 - Transitions & More")},l(a){s=f(a,"August 2023 - Transitions & More")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function We(y){let s;return{c(){s=$("Transitions")},l(a){s=f(a,"Transitions")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function He(y){let s;return{c(){s=$("Svelte transitions")},l(a){s=f(a,"Svelte transitions")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Oe(y){let s,a,F="<code>tailwindcss-animate</code>",l,p,i,d,o="<code>tailwindcss-animate</code>",e,m;return p=new U({props:{href:"https://svelte.dev/docs/svelte-transition",$$slots:{default:[He]},$$scope:{ctx:y}}}),{c(){s=$("To support both enter and exit transitions, we've had to move from "),a=new P(!1),l=$(" to "),x(p.$$.fragment),i=$(". You can still use the "),d=new P(!1),e=$(" if you'd like, but you won't have exit transitions on most components."),this.h()},l(u){s=f(u,"To support both enter and exit transitions, we've had to move from "),a=I(u,!1),l=f(u," to "),v(p.$$.fragment,u),i=f(u,". You can still use the "),d=I(u,!1),e=f(u," if you'd like, but you won't have exit transitions on most components."),this.h()},h(){a.a=l,d.a=e},m(u,B){r(u,s,B),a.m(F,u,B),r(u,l,B),b(p,u,B),r(u,i,B),d.m(o,u,B),r(u,e,B),m=!0},p(u,B){const E={};B&64&&(E.$$scope={dirty:B,ctx:u}),p.$set(E)},i(u){m||(w(p.$$.fragment,u),m=!0)},o(u){h(p.$$.fragment,u),m=!1},d(u){u&&(t(s),a.d(),t(l),t(i),d.d(),t(e)),g(p,u)}}}function Ke(y){let s,a,F="<code>bits-ui</code>",l,p,i="<code>0.5.0</code>",d;return{c(){s=$("To get the updated transition support, be sure to upgrade to the latest version of "),a=new P(!1),l=$(", which at the time of this writing is "),p=new P(!1),d=$("."),this.h()},l(o){s=f(o,"To get the updated transition support, be sure to upgrade to the latest version of "),a=I(o,!1),l=f(o,", which at the time of this writing is "),p=I(o,!1),d=f(o,"."),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function Ze(y){let s;return{c(){s=$("@thomasglopes")},l(a){s=f(a,"@thomasglopes")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function qe(y){let s,a,F="<code>flyAndScale</code>",l,p,i,d,o="<code>utils.ts</code>",e,m,u="<code>init</code>",B,E;return p=new U({props:{href:"https://twitter.com/thomasglopes",$$slots:{default:[Ze]},$$scope:{ctx:y}}}),{c(){s=$("We now provide a custom transition "),a=new P(!1),l=$(" (thanks "),x(p.$$.fragment),i=$(") which most components use. It's added to the "),d=new P(!1),e=$(" file when you "),m=new P(!1),B=$(" a new project."),this.h()},l(L){s=f(L,"We now provide a custom transition "),a=I(L,!1),l=f(L," (thanks "),v(p.$$.fragment,L),i=f(L,") which most components use. It's added to the "),d=I(L,!1),e=f(L," file when you "),m=I(L,!1),B=f(L," a new project."),this.h()},h(){a.a=l,d.a=e,m.a=B},m(L,A){r(L,s,A),a.m(F,L,A),r(L,l,A),b(p,L,A),r(L,i,A),d.m(o,L,A),r(L,e,A),m.m(u,L,A),r(L,B,A),E=!0},p(L,A){const W={};A&64&&(W.$$scope={dirty:A,ctx:L}),p.$set(W)},i(L){E||(w(p.$$.fragment,L),E=!0)},o(L){h(p.$$.fragment,L),E=!1},d(L){L&&(t(s),a.d(),t(l),t(i),d.d(),t(e),m.d(),t(B)),g(p,L)}}}function Ye(y){let s;return{c(){s=$("Migration")},l(a){s=f(a,"Migration")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Xe(y){let s,a,F="<code>tailwindcss-animate</code>",l;return{c(){s=$("If you're using "),a=new P(!1),l=$(" and want to migrate to the new transition system, you'll need to do the following:"),this.h()},l(p){s=f(p,"If you're using "),a=I(p,!1),l=f(p," and want to migrate to the new transition system, you'll need to do the following:"),this.h()},h(){a.a=l},m(p,i){r(p,s,i),a.m(F,p,i),r(p,l,i)},p:T,d(p){p&&(t(s),a.d(),t(l))}}}function Je(y){let s,a,F="<code>utils.ts</code>",l,p,i="<code>flyAndScale</code>",d;return{c(){s=$("Update your "),a=new P(!1),l=$(" file to include the "),p=new P(!1),d=$(" transition:"),this.h()},l(o){s=f(o,"Update your "),a=I(o,!1),l=f(o," file to include the "),p=I(o,!1),d=f(o," transition:"),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function Qe(y){let s,a=`<code data-language="ts" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF8"> type</span><span style="color:#FFF"> ClassValue</span><span style="color:#FFF8">,</span><span style="color:#FFF"> clsx </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "clsx"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> twMerge </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "tailwind-merge"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cubicOut </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte/easing"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> type</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> TransitionConfig </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte/transition"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> function</span><span style="color:#FFF;font-weight:bold"> cn</span><span style="color:#FFF8">(...</span><span style="color:#FFF">inputs</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> ClassValue</span><span style="color:#FFF8">[])</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  return</span><span style="color:#FFF"> twMerge</span><span style="color:#FFF8">(</span><span style="color:#FFF">clsx</span><span style="color:#FFF8">(</span><span style="color:#FFF">inputs</span><span style="color:#FFF8">));</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">type</span><span style="color:#FFF;font-weight:bold"> FlyAndScaleParams</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">  y</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  x</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  start</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  duration</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> const</span><span style="color:#FFF;font-weight:bold"> flyAndScale</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">  node</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Element</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">  params</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> FlyAndScaleParams</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> y</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> -8,</span><span style="color:#FFF"> x</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0,</span><span style="color:#FFF"> start</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0.95,</span><span style="color:#FFF"> duration</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 150</span><span style="color:#FFF8"> &#125;</span></span>
<span data-line=""><span style="color:#FFF8">):</span><span style="color:#FFF;font-weight:bold"> TransitionConfig</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> style </span><span style="color:#FFF8">=</span><span style="color:#FFF"> getComputedStyle</span><span style="color:#FFF8">(</span><span style="color:#FFF">node</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> transform </span><span style="color:#FFF8">=</span><span style="color:#FFF"> style</span><span style="color:#FFF8">.</span><span style="color:#FFF">transform </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "none"</span><span style="color:#FFF8"> ?</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8"> :</span><span style="color:#FFF"> style</span><span style="color:#FFF8">.</span><span style="color:#FFF">transform</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> scaleConversion</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">    valueA</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    scaleA</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF">number</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF">    scaleB</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF">number</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number</span><span style="color:#FFF8">]</span></span>
<span data-line=""><span style="color:#FFF8">  )</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF8"> [</span><span style="color:#FFF">minA</span><span style="color:#FFF8">,</span><span style="color:#FFF"> maxA</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> scaleA</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF8"> [</span><span style="color:#FFF">minB</span><span style="color:#FFF8">,</span><span style="color:#FFF"> maxB</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> scaleB</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF"> percentage </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> (</span><span style="color:#FFF">valueA </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minA</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> /</span><span style="color:#FFF8"> (</span><span style="color:#FFF">maxA </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minA</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF"> valueB </span><span style="color:#FFF8">=</span><span style="color:#FFF"> percentage </span><span style="color:#FFF8">*</span><span style="color:#FFF8"> (</span><span style="color:#FFF">maxB </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minB</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> +</span><span style="color:#FFF"> minB</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF"> valueB</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> styleToString</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">    style</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Record</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF">string</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number </span><span style="color:#FFF8">|</span><span style="color:#FFF"> string </span><span style="color:#FFF8">|</span><span style="color:#FFF"> undefined</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  ):</span><span style="color:#FFF"> string </span><span style="color:#FFF8">=></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF"> Object</span><span style="color:#FFF8">.</span><span style="color:#FFF">keys</span><span style="color:#FFF8">(</span><span style="color:#FFF">style</span><span style="color:#FFF8">).</span><span style="color:#FFF">reduce</span><span style="color:#FFF8">((</span><span style="color:#FFF">str</span><span style="color:#FFF8">,</span><span style="color:#FFF"> key</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">style</span><span style="color:#FFF8">[</span><span style="color:#FFF">key</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> ===</span><span style="color:#FFF8"> undefined)</span><span style="color:#FFF8"> return</span><span style="color:#FFF"> str</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">      return</span><span style="color:#FFF"> str </span><span style="color:#FFF8">+</span><span style="color:#FFF"> key </span><span style="color:#FFF8">+</span><span style="color:#FFF8"> ":"</span><span style="color:#FFF8"> +</span><span style="color:#FFF"> style</span><span style="color:#FFF8">[</span><span style="color:#FFF">key</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> +</span><span style="color:#FFF8"> ";"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  return</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    duration</span><span style="color:#FFF8">:</span><span style="color:#FFF"> params</span><span style="color:#FFF8">.</span><span style="color:#FFF">duration </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 200,</span></span>
<span data-line=""><span style="color:#FFF">    delay</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0,</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">    css</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> (</span><span style="color:#FFF">t</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> y </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">y </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 5,</span><span style="color:#FFF8"> 0]);</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> x </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">x </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 0,</span><span style="color:#FFF8"> 0]);</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> scale </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">start </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 0.95,</span><span style="color:#FFF8"> 1]);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">      return</span><span style="color:#FFF"> styleToString</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF">        transform</span><span style="color:#FFF8">:</span></span>
<span data-line=""><span style="color:#FFF">          transform </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "translate3d("</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          x </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "px, "</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          y </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "px, 0) scale("</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          scale </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          ")"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        opacity</span><span style="color:#FFF8">:</span><span style="color:#FFF"> t</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF">    easing</span><span style="color:#FFF8">:</span><span style="color:#FFF"> cubicOut</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function st(y){let s,a,F="<code>AlertDialog.Content</code>",l;return{c(){s=$("Inside the components that use transitions/animations, you'll need to remove the animation classes and add the transition. Here's an example of the "),a=new P(!1),l=$(" component:"),this.h()},l(p){s=f(p,"Inside the components that use transitions/animations, you'll need to remove the animation classes and add the transition. Here's an example of the "),a=I(p,!1),l=f(p," component:"),this.h()},h(){a.a=l},m(p,i){r(p,s,i),a.m(F,p,i),r(p,l,i)},p:T,d(p){p&&(t(s),a.d(),t(l))}}}function at(y){let s,a=`<code data-language="svelte" data-theme="Lambda Studio â€” Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> AlertDialog </span><span style="color:#FFF8">as</span><span style="color:#FFF"> AlertDialogPrimitive </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "bits-ui"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> AlertDialog </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "./index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cn</span><span style="color:#FFF8">,</span><span style="color:#FFF"> flyAndScale </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/utils.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  type</span><span style="color:#FFF;font-weight:bold"> $$Props</span><span style="color:#FFF8"> =</span><span style="color:#FFF;font-weight:bold"> AlertDialogPrimitive</span><span style="color:#FFF8">.</span><span style="color:#FFF;font-weight:bold">ContentProps</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  let</span><span style="color:#FFF"> className</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> $$Props</span><span style="color:#FFF8">[</span><span style="color:#FFF8">"class"</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> undefined;</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> let</span><span style="color:#FFF"> transition</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> $$Props</span><span style="color:#FFF8">[</span><span style="color:#FFF8">"transition"</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> flyAndScale</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> let</span><span style="color:#FFF"> transitionConfig</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> $$Props</span><span style="color:#FFF8">[</span><span style="color:#FFF8">"transitionConfig"</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> undefined;</span></span>
<span data-line=""><span style="color:#FFF8">  export</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> className </span><span style="color:#FFF8">as</span><span style="color:#FFF"> class </span><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">AlertDialog</span><span style="color:#FFF8">.</span><span style="color:#FFF">Portal</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">AlertDialog</span><span style="color:#FFF8">.</span><span style="color:#FFF">Overlay </span><span style="color:#FFF8">/></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">AlertDialogPrimitive</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span></span>
<span data-line=""><span style="color:#FFF">    &#123;transition&#125;</span></span>
<span data-line=""><span style="color:#FFF">    &#123;transitionConfig&#125;</span></span>
<span data-line=""><span style="color:#FFF">    class</span><span style="color:#FFF8">=&#123;</span><span style="color:#FFF">cn</span><span style="color:#FFF8">(</span></span>
<span data-line=""><span style="color:#FFF8">      "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg  sm:rounded-lg md:w-full"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      className</span></span>
<span data-line=""><span style="color:#FFF8">    )&#125;</span></span>
<span data-line=""><span style="color:#FFF">    &#123;</span><span style="color:#FFF8">...</span><span style="color:#FFF">$$restProps&#125;</span></span>
<span data-line=""><span style="color:#FFF8">  ></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;slot</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">AlertDialogPrimitive</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">AlertDialog</span><span style="color:#FFF8">.</span><span style="color:#FFF">Portal</span><span style="color:#FFF8">></span></span></code>`,F;return{c(){s=new P(!1),F=S(),this.h()},l(l){s=I(l,!1),F=S(),this.h()},h(){s.a=F},m(l,p){s.m(a,l,p),r(l,F,p)},p:T,d(l){l&&(t(F),s.d())}}}function nt(y){let s;return{c(){s=$("repo")},l(a){s=f(a,"repo")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function Ft(y){let s,a,F,l;return a=new U({props:{href:"https://github.com/huntabyte/shadcn-svelte/tree/main/apps/www/src/lib/registry/",$$slots:{default:[nt]},$$scope:{ctx:y}}}),{c(){s=$("If you're unsure which specific classes should be removed, you can reference the components in the "),x(a.$$.fragment),F=$(" to see the changes.")},l(p){s=f(p,"If you're unsure which specific classes should be removed, you can reference the components in the "),v(a.$$.fragment,p),F=f(p," to see the changes.")},m(p,i){r(p,s,i),b(a,p,i),r(p,F,i),l=!0},p(p,i){const d={};i&64&&(d.$$scope={dirty:i,ctx:p}),a.$set(d)},i(p){l||(w(a.$$.fragment,p),l=!0)},o(p){h(a.$$.fragment,p),l=!1},d(p){p&&(t(s),t(F)),g(a,p)}}}function lt(y){let s;return{c(){s=$("Events")},l(a){s=f(a,"Events")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function pt(y){let s;return{c(){s=$("Melt UI")},l(a){s=f(a,"Melt UI")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function ot(y){let s,a,F,l,p="<code>on:m-click</code>",i,d,o="<code>on:m-keydown</code>",e,m,u="<code>on:click</code>",B,E,L="<code>on:keydown</code>",A,W;return a=new U({props:{href:"https://melt-ui.com",$$slots:{default:[pt]},$$scope:{ctx:y}}}),{c(){s=$("Previous, we were using the same syntax as "),x(a.$$.fragment),F=$(" for events, as we were simply forwarding them. So you'd have to do "),l=new P(!1),i=$(" or "),d=new P(!1),e=$(". While this isn't a huge deal, since we're using components, we decided we wanted to use the same syntax as you would for any other Svelte component. So now you can just do "),m=new P(!1),B=$(" or "),E=new P(!1),A=$("."),this.h()},l(G){s=f(G,"Previous, we were using the same syntax as "),v(a.$$.fragment,G),F=f(G," for events, as we were simply forwarding them. So you'd have to do "),l=I(G,!1),i=f(G," or "),d=I(G,!1),e=f(G,". While this isn't a huge deal, since we're using components, we decided we wanted to use the same syntax as you would for any other Svelte component. So now you can just do "),m=I(G,!1),B=f(G," or "),E=I(G,!1),A=f(G,"."),this.h()},h(){l.a=i,d.a=e,m.a=B,E.a=A},m(G,V){r(G,s,V),b(a,G,V),r(G,F,V),l.m(p,G,V),r(G,i,V),d.m(o,G,V),r(G,e,V),m.m(u,G,V),r(G,B,V),E.m(L,G,V),r(G,A,V),W=!0},p(G,V){const O={};V&64&&(O.$$scope={dirty:V,ctx:G}),a.$set(O)},i(G){W||(w(a.$$.fragment,G),W=!0)},o(G){h(a.$$.fragment,G),W=!1},d(G){G&&(t(s),t(F),l.d(),t(i),d.d(),t(e),m.d(),t(B),E.d(),t(A)),g(a,G)}}}function et(y){let s;return{c(){s=$("Behind the scenes, we're redispatching the event, so the contents of the event are the same, but the syntax is a bit more familiar.")},l(a){s=f(a,"Behind the scenes, we're redispatching the event, so the contents of the event are the same, but the syntax is a bit more familiar.")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function tt(y){let s;return{c(){s=$("Migration")},l(a){s=f(a,"Migration")},m(a,F){r(a,s,F)},d(a){a&&t(s)}}}function rt(y){let s,a,F="<code>m-</code>",l,p,i="<code>bits-ui</code>",d;return{c(){s=$("To migrate to the new event syntax, you'll need to update your components that are forwarding the "),a=new P(!1),l=$(" events. Ensure you're on the latest version of "),p=new P(!1),d=$(" before doing so."),this.h()},l(o){s=f(o,"To migrate to the new event syntax, you'll need to update your components that are forwarding the "),a=I(o,!1),l=f(o," events. Ensure you're on the latest version of "),p=I(o,!1),d=f(o," before doing so."),this.h()},h(){a.a=l,p.a=d},m(o,e){r(o,s,e),a.m(F,o,e),r(o,l,e),p.m(i,o,e),r(o,d,e)},p:T,d(o){o&&(t(s),a.d(),t(l),p.d(),t(d))}}}function ct(y){let s,a,F,l,p,i,d,o,e,m,u,B,E,L,A,W,G,V,O,za,Fs,Ma,ls,Na,ps,Va,os,Wa,es,Ha,ts,Oa,rs,Ka,cs,Za,ys,qa,is,Ya,ds,Xa,Pa,ms,Ja,us,Qa,La,fs,sn,$s,an,_s,nn,gs,Fn,hs,ln,ws,pn,bs,on,vs,en,xs,tn,ks,rn,Cs,cn,Bs,yn,Ss,dn,Is,mn,Ps,un,Ls,fn,Rs,$n,Ds,_n,Es,gn,js,hn,Ts,wn,Gs,bn,As,vn,Us,xn,zs,kn,Ms,Cn,Ns,Bn,Vs,Sn,Ws,In,Hs,Pn,Os,Ln,Ks,Rn,Zs,Dn,qs,En,Ys,jn,Xs,Tn,Js,Gn,Qs,An,sa,Un,aa,zn,na,Mn,Fa,Nn,la,Vn,pa,Wn,oa,Hn,ea,On,K,Z,_F="form-label.svelte",ta,Kn,ra,Zn,ca,qn,q,Y,gF="src/lib/ui/form/index.ts",ya,Yn,ia,Xn,da,Jn,ma,Qn,ua,sF,fa,aF,$a,nF,_a,FF,ga,lF,X,J,hF="src/lib/utils.ts",ha,pF,wa,oF,Q,ss,wF="src/lib/components/ui/alert-dialog-content.svelte",ba,eF,va,tF,xa,rF,ka,cF,Ca,yF,Ba,iF,Sa,dF;s=new Ra({props:{id:"march-2024",$$slots:{default:[yp]},$$scope:{ctx:y}}}),F=new N({props:{id:"introducing-blocks",$$slots:{default:[ip]},$$scope:{ctx:y}}}),p=new z({props:{$$slots:{default:[mp]},$$scope:{ctx:y}}});function pp(n,c){return typeof as=="string"?fp:up}let Ga=pp()(y);function op(n,c){return typeof ns=="string"?_p:$p}let Aa=op()(y);return e=new z({props:{$$slots:{default:[wp]},$$scope:{ctx:y}}}),u=new N({props:{id:"new-component-breadcrumb",$$slots:{default:[bp]},$$scope:{ctx:y}}}),E=new z({props:{$$slots:{default:[xp]},$$scope:{ctx:y}}}),A=new H({props:{name:"breadcrumb-demo",$$slots:{default:[Bp]},$$scope:{ctx:y}}}),G=new N({props:{id:"new-component-scroll-area",$$slots:{default:[Sp]},$$scope:{ctx:y}}}),O=new z({props:{$$slots:{default:[Lp]},$$scope:{ctx:y}}}),Fs=new z({props:{$$slots:{default:[Rp]},$$scope:{ctx:y}}}),ls=new uF({props:{id:"examples",$$slots:{default:[Dp]},$$scope:{ctx:y}}}),ps=new H({props:{name:"scroll-area-demo",$$slots:{default:[Tp]},$$scope:{ctx:y}}}),os=new H({props:{name:"scroll-area-horizontal",$$slots:{default:[Up]},$$scope:{ctx:y}}}),es=new Ra({props:{id:"february-2024",$$slots:{default:[zp]},$$scope:{ctx:y}}}),ts=new N({props:{id:"new-component-resizable",$$slots:{default:[Mp]},$$scope:{ctx:y}}}),rs=new z({props:{$$slots:{default:[Hp]},$$scope:{ctx:y}}}),cs=new H({props:{name:"resizable-demo",$$slots:{default:[Zp]},$$scope:{ctx:y}}}),ys=new N({props:{id:"updated-icon-imports",$$slots:{default:[qp]},$$scope:{ctx:y}}}),is=new z({props:{$$slots:{default:[Xp]},$$scope:{ctx:y}}}),ds=new z({props:{$$slots:{default:[Jp]},$$scope:{ctx:y}}}),ms=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[Qp]},$$scope:{ctx:y}}}),us=new z({props:{$$slots:{default:[so]},$$scope:{ctx:y}}}),fs=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio â€” Blackout",$$slots:{default:[ao]},$$scope:{ctx:y}}}),$s=new z({props:{$$slots:{default:[no]},$$scope:{ctx:y}}}),_s=new N({props:{id:"major-forms-update",$$slots:{default:[Fo]},$$scope:{ctx:y}}}),gs=new z({props:{$$slots:{default:[lo]},$$scope:{ctx:y}}}),hs=new z({props:{$$slots:{default:[po]},$$scope:{ctx:y}}}),ws=new z({props:{$$slots:{default:[eo]},$$scope:{ctx:y}}}),bs=new z({props:{$$slots:{default:[ro]},$$scope:{ctx:y}}}),vs=new Ra({props:{id:"january-2024",$$slots:{default:[co]},$$scope:{ctx:y}}}),xs=new z({props:{$$slots:{default:[fo]},$$scope:{ctx:y}}}),ks=new N({props:{id:"new-component-carousel",$$slots:{default:[$o]},$$scope:{ctx:y}}}),Cs=new z({props:{$$slots:{default:[go]},$$scope:{ctx:y}}}),Bs=new H({props:{name:"carousel-demo",$$slots:{default:[bo]},$$scope:{ctx:y}}}),Ss=new N({props:{id:"new-component-drawer",$$slots:{default:[vo]},$$scope:{ctx:y}}}),Is=new z({props:{$$slots:{default:[Bo]},$$scope:{ctx:y}}}),Ps=new H({props:{name:"drawer-demo",$$slots:{default:[Po]},$$scope:{ctx:y}}}),Ls=new N({props:{id:"new-component-sonner",$$slots:{default:[Lo]},$$scope:{ctx:y}}}),Rs=new z({props:{$$slots:{default:[jo]},$$scope:{ctx:y}}}),Ds=new H({props:{name:"sonner-demo",$$slots:{default:[Ao]},$$scope:{ctx:y}}}),Es=new N({props:{id:"new-component-pagination",$$slots:{default:[Uo]},$$scope:{ctx:y}}}),js=new z({props:{$$slots:{default:[Mo]},$$scope:{ctx:y}}}),Ts=new H({props:{name:"pagination-demo",$$slots:{default:[Wo]},$$scope:{ctx:y}}}),Gs=new Ra({props:{id:"december-2023",$$slots:{default:[Ho]},$$scope:{ctx:y}}}),As=new z({props:{$$slots:{default:[qo]},$$scope:{ctx:y}}}),Us=new N({props:{id:"new-component-calendar",$$slots:{default:[Yo]},$$scope:{ctx:y}}}),zs=new H({props:{name:"calendar-demo",$$slots:{default:[Qo]},$$scope:{ctx:y}}}),Ms=new N({props:{id:"new-component-range-calendar",$$slots:{default:[se]},$$scope:{ctx:y}}}),Ns=new H({props:{name:"range-calendar-demo",$$slots:{default:[Fe]},$$scope:{ctx:y}}}),Vs=new N({props:{id:"new-component-date-picker",$$slots:{default:[le]},$$scope:{ctx:y}}}),Ws=new H({props:{name:"date-picker-demo",$$slots:{default:[ee]},$$scope:{ctx:y}}}),Hs=new Ra({props:{id:"november-2023",$$slots:{default:[te]},$$scope:{ctx:y}}}),Os=new N({props:{id:"new-component-toggle-group",$$slots:{default:[re]},$$scope:{ctx:y}}}),Ks=new z({props:{$$slots:{default:[ye]},$$scope:{ctx:y}}}),Zs=new H({props:{name:"toggle-group-demo",$$slots:{default:[me]},$$scope:{ctx:y}}}),qs=new Ra({props:{id:"october-2023",$$slots:{default:[ue]},$$scope:{ctx:y}}}),Ys=new z({props:{$$slots:{default:[_e]},$$scope:{ctx:y}}}),Xs=new N({props:{id:"new-component-command",$$slots:{default:[ge]},$$scope:{ctx:y}}}),Js=new z({props:{$$slots:{default:[ve]},$$scope:{ctx:y}}}),Qs=new H({props:{name:"command-dialog",$$slots:{default:[Ce]},$$scope:{ctx:y}}}),sa=new z({props:{$$slots:{default:[Se]},$$scope:{ctx:y}}}),aa=new N({props:{id:"new-component-combobox",$$slots:{default:[Ie]},$$scope:{ctx:y}}}),na=new z({props:{$$slots:{default:[Pe]},$$scope:{ctx:y}}}),Fa=new H({props:{name:"combobox-demo",$$slots:{default:[De]},$$scope:{ctx:y}}}),la=new z({props:{$$slots:{default:[je]},$$scope:{ctx:y}}}),pa=new N({props:{id:"updates-to-form",$$slots:{default:[Te]},$$scope:{ctx:y}}}),oa=new uF({props:{id:"formlabel-changes",$$slots:{default:[Ge]},$$scope:{ctx:y}}}),ea=new z({props:{$$slots:{default:[Ae]},$$scope:{ctx:y}}}),ta=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[Ue]},$$scope:{ctx:y}}}),ra=new N({props:{id:"formcontrol",$$slots:{default:[ze]},$$scope:{ctx:y}}}),ca=new z({props:{$$slots:{default:[Me]},$$scope:{ctx:y}}}),ya=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[Ne]},$$scope:{ctx:y}}}),ia=new Ra({props:{id:"august-2023---transitions--more",$$slots:{default:[Ve]},$$scope:{ctx:y}}}),da=new N({props:{id:"transitions",$$slots:{default:[We]},$$scope:{ctx:y}}}),ma=new z({props:{$$slots:{default:[Oe]},$$scope:{ctx:y}}}),ua=new z({props:{$$slots:{default:[Ke]},$$scope:{ctx:y}}}),fa=new z({props:{$$slots:{default:[qe]},$$scope:{ctx:y}}}),$a=new uF({props:{id:"migration",$$slots:{default:[Ye]},$$scope:{ctx:y}}}),_a=new z({props:{$$slots:{default:[Xe]},$$scope:{ctx:y}}}),ga=new z({props:{$$slots:{default:[Je]},$$scope:{ctx:y}}}),ha=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[Qe]},$$scope:{ctx:y}}}),wa=new z({props:{$$slots:{default:[st]},$$scope:{ctx:y}}}),ba=new M({props:{class:"Lambda Studio â€” Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio â€” Blackout","data-metadata":"",$$slots:{default:[at]},$$scope:{ctx:y}}}),va=new z({props:{$$slots:{default:[Ft]},$$scope:{ctx:y}}}),xa=new N({props:{id:"events",$$slots:{default:[lt]},$$scope:{ctx:y}}}),ka=new z({props:{$$slots:{default:[ot]},$$scope:{ctx:y}}}),Ca=new z({props:{$$slots:{default:[et]},$$scope:{ctx:y}}}),Ba=new uF({props:{id:"migration-1",$$slots:{default:[tt]},$$scope:{ctx:y}}}),Sa=new z({props:{$$slots:{default:[rt]},$$scope:{ctx:y}}}),{c(){x(s.$$.fragment),a=C(),x(F.$$.fragment),l=C(),x(p.$$.fragment),i=C(),Ga.c(),d=C(),Aa.c(),o=C(),x(e.$$.fragment),m=C(),x(u.$$.fragment),B=C(),x(E.$$.fragment),L=C(),x(A.$$.fragment),W=C(),x(G.$$.fragment),V=C(),x(O.$$.fragment),za=C(),x(Fs.$$.fragment),Ma=C(),x(ls.$$.fragment),Na=C(),x(ps.$$.fragment),Va=C(),x(os.$$.fragment),Wa=C(),x(es.$$.fragment),Ha=C(),x(ts.$$.fragment),Oa=C(),x(rs.$$.fragment),Ka=C(),x(cs.$$.fragment),Za=C(),x(ys.$$.fragment),qa=C(),x(is.$$.fragment),Ya=C(),x(ds.$$.fragment),Xa=C(),Pa=D("figure"),x(ms.$$.fragment),Ja=C(),x(us.$$.fragment),Qa=C(),La=D("figure"),x(fs.$$.fragment),sn=C(),x($s.$$.fragment),an=C(),x(_s.$$.fragment),nn=C(),x(gs.$$.fragment),Fn=C(),x(hs.$$.fragment),ln=C(),x(ws.$$.fragment),pn=C(),x(bs.$$.fragment),on=C(),x(vs.$$.fragment),en=C(),x(xs.$$.fragment),tn=C(),x(ks.$$.fragment),rn=C(),x(Cs.$$.fragment),cn=C(),x(Bs.$$.fragment),yn=C(),x(Ss.$$.fragment),dn=C(),x(Is.$$.fragment),mn=C(),x(Ps.$$.fragment),un=C(),x(Ls.$$.fragment),fn=C(),x(Rs.$$.fragment),$n=C(),x(Ds.$$.fragment),_n=C(),x(Es.$$.fragment),gn=C(),x(js.$$.fragment),hn=C(),x(Ts.$$.fragment),wn=C(),x(Gs.$$.fragment),bn=C(),x(As.$$.fragment),vn=C(),x(Us.$$.fragment),xn=C(),x(zs.$$.fragment),kn=C(),x(Ms.$$.fragment),Cn=C(),x(Ns.$$.fragment),Bn=C(),x(Vs.$$.fragment),Sn=C(),x(Ws.$$.fragment),In=C(),x(Hs.$$.fragment),Pn=C(),x(Os.$$.fragment),Ln=C(),x(Ks.$$.fragment),Rn=C(),x(Zs.$$.fragment),Dn=C(),x(qs.$$.fragment),En=C(),x(Ys.$$.fragment),jn=C(),x(Xs.$$.fragment),Tn=C(),x(Js.$$.fragment),Gn=C(),x(Qs.$$.fragment),An=C(),x(sa.$$.fragment),Un=C(),x(aa.$$.fragment),zn=C(),x(na.$$.fragment),Mn=C(),x(Fa.$$.fragment),Nn=C(),x(la.$$.fragment),Vn=C(),x(pa.$$.fragment),Wn=C(),x(oa.$$.fragment),Hn=C(),x(ea.$$.fragment),On=C(),K=D("figure"),Z=D("figcaption"),Z.textContent=_F,x(ta.$$.fragment),Kn=C(),x(ra.$$.fragment),Zn=C(),x(ca.$$.fragment),qn=C(),q=D("figure"),Y=D("figcaption"),Y.textContent=gF,x(ya.$$.fragment),Yn=C(),x(ia.$$.fragment),Xn=C(),x(da.$$.fragment),Jn=C(),x(ma.$$.fragment),Qn=C(),x(ua.$$.fragment),sF=C(),x(fa.$$.fragment),aF=C(),x($a.$$.fragment),nF=C(),x(_a.$$.fragment),FF=C(),x(ga.$$.fragment),lF=C(),X=D("figure"),J=D("figcaption"),J.textContent=hF,x(ha.$$.fragment),pF=C(),x(wa.$$.fragment),oF=C(),Q=D("figure"),ss=D("figcaption"),ss.textContent=wF,x(ba.$$.fragment),eF=C(),x(va.$$.fragment),tF=C(),x(xa.$$.fragment),rF=C(),x(ka.$$.fragment),cF=C(),x(Ca.$$.fragment),yF=C(),x(Ba.$$.fragment),iF=C(),x(Sa.$$.fragment),this.h()},l(n){v(s.$$.fragment,n),a=k(n),v(F.$$.fragment,n),l=k(n),v(p.$$.fragment,n),i=k(n),Ga.l(n),d=k(n),Aa.l(n),o=k(n),v(e.$$.fragment,n),m=k(n),v(u.$$.fragment,n),B=k(n),v(E.$$.fragment,n),L=k(n),v(A.$$.fragment,n),W=k(n),v(G.$$.fragment,n),V=k(n),v(O.$$.fragment,n),za=k(n),v(Fs.$$.fragment,n),Ma=k(n),v(ls.$$.fragment,n),Na=k(n),v(ps.$$.fragment,n),Va=k(n),v(os.$$.fragment,n),Wa=k(n),v(es.$$.fragment,n),Ha=k(n),v(ts.$$.fragment,n),Oa=k(n),v(rs.$$.fragment,n),Ka=k(n),v(cs.$$.fragment,n),Za=k(n),v(ys.$$.fragment,n),qa=k(n),v(is.$$.fragment,n),Ya=k(n),v(ds.$$.fragment,n),Xa=k(n),Pa=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0});var c=j(Pa);v(ms.$$.fragment,c),c.forEach(t),Ja=k(n),v(us.$$.fragment,n),Qa=k(n),La=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Ua=j(La);v(fs.$$.fragment,Ua),Ua.forEach(t),sn=k(n),v($s.$$.fragment,n),an=k(n),v(_s.$$.fragment,n),nn=k(n),v(gs.$$.fragment,n),Fn=k(n),v(hs.$$.fragment,n),ln=k(n),v(ws.$$.fragment,n),pn=k(n),v(bs.$$.fragment,n),on=k(n),v(vs.$$.fragment,n),en=k(n),v(xs.$$.fragment,n),tn=k(n),v(ks.$$.fragment,n),rn=k(n),v(Cs.$$.fragment,n),cn=k(n),v(Bs.$$.fragment,n),yn=k(n),v(Ss.$$.fragment,n),dn=k(n),v(Is.$$.fragment,n),mn=k(n),v(Ps.$$.fragment,n),un=k(n),v(Ls.$$.fragment,n),fn=k(n),v(Rs.$$.fragment,n),$n=k(n),v(Ds.$$.fragment,n),_n=k(n),v(Es.$$.fragment,n),gn=k(n),v(js.$$.fragment,n),hn=k(n),v(Ts.$$.fragment,n),wn=k(n),v(Gs.$$.fragment,n),bn=k(n),v(As.$$.fragment,n),vn=k(n),v(Us.$$.fragment,n),xn=k(n),v(zs.$$.fragment,n),kn=k(n),v(Ms.$$.fragment,n),Cn=k(n),v(Ns.$$.fragment,n),Bn=k(n),v(Vs.$$.fragment,n),Sn=k(n),v(Ws.$$.fragment,n),In=k(n),v(Hs.$$.fragment,n),Pn=k(n),v(Os.$$.fragment,n),Ln=k(n),v(Ks.$$.fragment,n),Rn=k(n),v(Zs.$$.fragment,n),Dn=k(n),v(qs.$$.fragment,n),En=k(n),v(Ys.$$.fragment,n),jn=k(n),v(Xs.$$.fragment,n),Tn=k(n),v(Js.$$.fragment,n),Gn=k(n),v(Qs.$$.fragment,n),An=k(n),v(sa.$$.fragment,n),Un=k(n),v(aa.$$.fragment,n),zn=k(n),v(na.$$.fragment,n),Mn=k(n),v(Fa.$$.fragment,n),Nn=k(n),v(la.$$.fragment,n),Vn=k(n),v(pa.$$.fragment,n),Wn=k(n),v(oa.$$.fragment,n),Hn=k(n),v(ea.$$.fragment,n),On=k(n),K=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Da=j(K);Z=R(Da,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),mF(Z)!=="svelte-w6jqpr"&&(Z.textContent=_F),v(ta.$$.fragment,Da),Da.forEach(t),Kn=k(n),v(ra.$$.fragment,n),Zn=k(n),v(ca.$$.fragment,n),qn=k(n),q=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Ea=j(q);Y=R(Ea,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),mF(Y)!=="svelte-3g4hfd"&&(Y.textContent=gF),v(ya.$$.fragment,Ea),Ea.forEach(t),Yn=k(n),v(ia.$$.fragment,n),Xn=k(n),v(da.$$.fragment,n),Jn=k(n),v(ma.$$.fragment,n),Qn=k(n),v(ua.$$.fragment,n),sF=k(n),v(fa.$$.fragment,n),aF=k(n),v($a.$$.fragment,n),nF=k(n),v(_a.$$.fragment,n),FF=k(n),v(ga.$$.fragment,n),lF=k(n),X=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var ja=j(X);J=R(ja,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),mF(J)!=="svelte-1xjl1eo"&&(J.textContent=hF),v(ha.$$.fragment,ja),ja.forEach(t),pF=k(n),v(wa.$$.fragment,n),oF=k(n),Q=R(n,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Ta=j(Q);ss=R(Ta,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),mF(ss)!=="svelte-wotvdk"&&(ss.textContent=wF),v(ba.$$.fragment,Ta),Ta.forEach(t),eF=k(n),v(va.$$.fragment,n),tF=k(n),v(xa.$$.fragment,n),rF=k(n),v(ka.$$.fragment,n),cF=k(n),v(Ca.$$.fragment,n),yF=k(n),v(Ba.$$.fragment,n),iF=k(n),v(Sa.$$.fragment,n),this.h()},h(){_(Pa,"data-rehype-pretty-code-figure",""),_(La,"data-rehype-pretty-code-figure",""),_(Z,"data-rehype-pretty-code-title",""),_(Z,"data-language","svelte"),_(Z,"data-theme","Lambda Studio â€” Blackout"),_(K,"data-rehype-pretty-code-figure",""),_(K,"data-metadata",""),_(Y,"data-rehype-pretty-code-title",""),_(Y,"data-language","ts"),_(Y,"data-theme","Lambda Studio â€” Blackout"),_(q,"data-rehype-pretty-code-figure",""),_(q,"data-metadata",""),_(J,"data-rehype-pretty-code-title",""),_(J,"data-language","ts"),_(J,"data-theme","Lambda Studio â€” Blackout"),_(X,"data-rehype-pretty-code-figure",""),_(X,"data-metadata",""),_(ss,"data-rehype-pretty-code-title",""),_(ss,"data-language","svelte"),_(ss,"data-theme","Lambda Studio â€” Blackout"),_(Q,"data-rehype-pretty-code-figure",""),_(Q,"data-metadata","")},m(n,c){b(s,n,c),r(n,a,c),b(F,n,c),r(n,l,c),b(p,n,c),r(n,i,c),Ga.m(n,c),r(n,d,c),Aa.m(n,c),r(n,o,c),b(e,n,c),r(n,m,c),b(u,n,c),r(n,B,c),b(E,n,c),r(n,L,c),b(A,n,c),r(n,W,c),b(G,n,c),r(n,V,c),b(O,n,c),r(n,za,c),b(Fs,n,c),r(n,Ma,c),b(ls,n,c),r(n,Na,c),b(ps,n,c),r(n,Va,c),b(os,n,c),r(n,Wa,c),b(es,n,c),r(n,Ha,c),b(ts,n,c),r(n,Oa,c),b(rs,n,c),r(n,Ka,c),b(cs,n,c),r(n,Za,c),b(ys,n,c),r(n,qa,c),b(is,n,c),r(n,Ya,c),b(ds,n,c),r(n,Xa,c),r(n,Pa,c),b(ms,Pa,null),r(n,Ja,c),b(us,n,c),r(n,Qa,c),r(n,La,c),b(fs,La,null),r(n,sn,c),b($s,n,c),r(n,an,c),b(_s,n,c),r(n,nn,c),b(gs,n,c),r(n,Fn,c),b(hs,n,c),r(n,ln,c),b(ws,n,c),r(n,pn,c),b(bs,n,c),r(n,on,c),b(vs,n,c),r(n,en,c),b(xs,n,c),r(n,tn,c),b(ks,n,c),r(n,rn,c),b(Cs,n,c),r(n,cn,c),b(Bs,n,c),r(n,yn,c),b(Ss,n,c),r(n,dn,c),b(Is,n,c),r(n,mn,c),b(Ps,n,c),r(n,un,c),b(Ls,n,c),r(n,fn,c),b(Rs,n,c),r(n,$n,c),b(Ds,n,c),r(n,_n,c),b(Es,n,c),r(n,gn,c),b(js,n,c),r(n,hn,c),b(Ts,n,c),r(n,wn,c),b(Gs,n,c),r(n,bn,c),b(As,n,c),r(n,vn,c),b(Us,n,c),r(n,xn,c),b(zs,n,c),r(n,kn,c),b(Ms,n,c),r(n,Cn,c),b(Ns,n,c),r(n,Bn,c),b(Vs,n,c),r(n,Sn,c),b(Ws,n,c),r(n,In,c),b(Hs,n,c),r(n,Pn,c),b(Os,n,c),r(n,Ln,c),b(Ks,n,c),r(n,Rn,c),b(Zs,n,c),r(n,Dn,c),b(qs,n,c),r(n,En,c),b(Ys,n,c),r(n,jn,c),b(Xs,n,c),r(n,Tn,c),b(Js,n,c),r(n,Gn,c),b(Qs,n,c),r(n,An,c),b(sa,n,c),r(n,Un,c),b(aa,n,c),r(n,zn,c),b(na,n,c),r(n,Mn,c),b(Fa,n,c),r(n,Nn,c),b(la,n,c),r(n,Vn,c),b(pa,n,c),r(n,Wn,c),b(oa,n,c),r(n,Hn,c),b(ea,n,c),r(n,On,c),r(n,K,c),Ia(K,Z),b(ta,K,null),r(n,Kn,c),b(ra,n,c),r(n,Zn,c),b(ca,n,c),r(n,qn,c),r(n,q,c),Ia(q,Y),b(ya,q,null),r(n,Yn,c),b(ia,n,c),r(n,Xn,c),b(da,n,c),r(n,Jn,c),b(ma,n,c),r(n,Qn,c),b(ua,n,c),r(n,sF,c),b(fa,n,c),r(n,aF,c),b($a,n,c),r(n,nF,c),b(_a,n,c),r(n,FF,c),b(ga,n,c),r(n,lF,c),r(n,X,c),Ia(X,J),b(ha,X,null),r(n,pF,c),b(wa,n,c),r(n,oF,c),r(n,Q,c),Ia(Q,ss),b(ba,Q,null),r(n,eF,c),b(va,n,c),r(n,tF,c),b(xa,n,c),r(n,rF,c),b(ka,n,c),r(n,cF,c),b(Ca,n,c),r(n,yF,c),b(Ba,n,c),r(n,iF,c),b(Sa,n,c),dF=!0},p(n,c){const Ua={};c&64&&(Ua.$$scope={dirty:c,ctx:n}),s.$set(Ua);const Da={};c&64&&(Da.$$scope={dirty:c,ctx:n}),F.$set(Da);const Ea={};c&64&&(Ea.$$scope={dirty:c,ctx:n}),p.$set(Ea),Ga.p(n,c),Aa.p(n,c);const ja={};c&64&&(ja.$$scope={dirty:c,ctx:n}),e.$set(ja);const Ta={};c&64&&(Ta.$$scope={dirty:c,ctx:n}),u.$set(Ta);const bF={};c&64&&(bF.$$scope={dirty:c,ctx:n}),E.$set(bF);const vF={};c&64&&(vF.$$scope={dirty:c,ctx:n}),A.$set(vF);const xF={};c&64&&(xF.$$scope={dirty:c,ctx:n}),G.$set(xF);const kF={};c&64&&(kF.$$scope={dirty:c,ctx:n}),O.$set(kF);const CF={};c&64&&(CF.$$scope={dirty:c,ctx:n}),Fs.$set(CF);const BF={};c&64&&(BF.$$scope={dirty:c,ctx:n}),ls.$set(BF);const SF={};c&64&&(SF.$$scope={dirty:c,ctx:n}),ps.$set(SF);const IF={};c&64&&(IF.$$scope={dirty:c,ctx:n}),os.$set(IF);const PF={};c&64&&(PF.$$scope={dirty:c,ctx:n}),es.$set(PF);const LF={};c&64&&(LF.$$scope={dirty:c,ctx:n}),ts.$set(LF);const RF={};c&64&&(RF.$$scope={dirty:c,ctx:n}),rs.$set(RF);const DF={};c&64&&(DF.$$scope={dirty:c,ctx:n}),cs.$set(DF);const EF={};c&64&&(EF.$$scope={dirty:c,ctx:n}),ys.$set(EF);const jF={};c&64&&(jF.$$scope={dirty:c,ctx:n}),is.$set(jF);const TF={};c&64&&(TF.$$scope={dirty:c,ctx:n}),ds.$set(TF);const GF={};c&64&&(GF.$$scope={dirty:c,ctx:n}),ms.$set(GF);const AF={};c&64&&(AF.$$scope={dirty:c,ctx:n}),us.$set(AF);const UF={};c&64&&(UF.$$scope={dirty:c,ctx:n}),fs.$set(UF);const zF={};c&64&&(zF.$$scope={dirty:c,ctx:n}),$s.$set(zF);const MF={};c&64&&(MF.$$scope={dirty:c,ctx:n}),_s.$set(MF);const NF={};c&64&&(NF.$$scope={dirty:c,ctx:n}),gs.$set(NF);const VF={};c&64&&(VF.$$scope={dirty:c,ctx:n}),hs.$set(VF);const WF={};c&64&&(WF.$$scope={dirty:c,ctx:n}),ws.$set(WF);const HF={};c&64&&(HF.$$scope={dirty:c,ctx:n}),bs.$set(HF);const OF={};c&64&&(OF.$$scope={dirty:c,ctx:n}),vs.$set(OF);const KF={};c&64&&(KF.$$scope={dirty:c,ctx:n}),xs.$set(KF);const ZF={};c&64&&(ZF.$$scope={dirty:c,ctx:n}),ks.$set(ZF);const qF={};c&64&&(qF.$$scope={dirty:c,ctx:n}),Cs.$set(qF);const YF={};c&64&&(YF.$$scope={dirty:c,ctx:n}),Bs.$set(YF);const XF={};c&64&&(XF.$$scope={dirty:c,ctx:n}),Ss.$set(XF);const JF={};c&64&&(JF.$$scope={dirty:c,ctx:n}),Is.$set(JF);const QF={};c&64&&(QF.$$scope={dirty:c,ctx:n}),Ps.$set(QF);const sl={};c&64&&(sl.$$scope={dirty:c,ctx:n}),Ls.$set(sl);const al={};c&64&&(al.$$scope={dirty:c,ctx:n}),Rs.$set(al);const nl={};c&64&&(nl.$$scope={dirty:c,ctx:n}),Ds.$set(nl);const Fl={};c&64&&(Fl.$$scope={dirty:c,ctx:n}),Es.$set(Fl);const ll={};c&64&&(ll.$$scope={dirty:c,ctx:n}),js.$set(ll);const pl={};c&64&&(pl.$$scope={dirty:c,ctx:n}),Ts.$set(pl);const ol={};c&64&&(ol.$$scope={dirty:c,ctx:n}),Gs.$set(ol);const el={};c&64&&(el.$$scope={dirty:c,ctx:n}),As.$set(el);const tl={};c&64&&(tl.$$scope={dirty:c,ctx:n}),Us.$set(tl);const rl={};c&64&&(rl.$$scope={dirty:c,ctx:n}),zs.$set(rl);const cl={};c&64&&(cl.$$scope={dirty:c,ctx:n}),Ms.$set(cl);const yl={};c&64&&(yl.$$scope={dirty:c,ctx:n}),Ns.$set(yl);const il={};c&64&&(il.$$scope={dirty:c,ctx:n}),Vs.$set(il);const dl={};c&64&&(dl.$$scope={dirty:c,ctx:n}),Ws.$set(dl);const ml={};c&64&&(ml.$$scope={dirty:c,ctx:n}),Hs.$set(ml);const ul={};c&64&&(ul.$$scope={dirty:c,ctx:n}),Os.$set(ul);const fl={};c&64&&(fl.$$scope={dirty:c,ctx:n}),Ks.$set(fl);const $l={};c&64&&($l.$$scope={dirty:c,ctx:n}),Zs.$set($l);const _l={};c&64&&(_l.$$scope={dirty:c,ctx:n}),qs.$set(_l);const gl={};c&64&&(gl.$$scope={dirty:c,ctx:n}),Ys.$set(gl);const hl={};c&64&&(hl.$$scope={dirty:c,ctx:n}),Xs.$set(hl);const wl={};c&64&&(wl.$$scope={dirty:c,ctx:n}),Js.$set(wl);const bl={};c&64&&(bl.$$scope={dirty:c,ctx:n}),Qs.$set(bl);const vl={};c&64&&(vl.$$scope={dirty:c,ctx:n}),sa.$set(vl);const xl={};c&64&&(xl.$$scope={dirty:c,ctx:n}),aa.$set(xl);const kl={};c&64&&(kl.$$scope={dirty:c,ctx:n}),na.$set(kl);const Cl={};c&64&&(Cl.$$scope={dirty:c,ctx:n}),Fa.$set(Cl);const Bl={};c&64&&(Bl.$$scope={dirty:c,ctx:n}),la.$set(Bl);const Sl={};c&64&&(Sl.$$scope={dirty:c,ctx:n}),pa.$set(Sl);const Il={};c&64&&(Il.$$scope={dirty:c,ctx:n}),oa.$set(Il);const Pl={};c&64&&(Pl.$$scope={dirty:c,ctx:n}),ea.$set(Pl);const Ll={};c&64&&(Ll.$$scope={dirty:c,ctx:n}),ta.$set(Ll);const Rl={};c&64&&(Rl.$$scope={dirty:c,ctx:n}),ra.$set(Rl);const Dl={};c&64&&(Dl.$$scope={dirty:c,ctx:n}),ca.$set(Dl);const El={};c&64&&(El.$$scope={dirty:c,ctx:n}),ya.$set(El);const jl={};c&64&&(jl.$$scope={dirty:c,ctx:n}),ia.$set(jl);const Tl={};c&64&&(Tl.$$scope={dirty:c,ctx:n}),da.$set(Tl);const Gl={};c&64&&(Gl.$$scope={dirty:c,ctx:n}),ma.$set(Gl);const Al={};c&64&&(Al.$$scope={dirty:c,ctx:n}),ua.$set(Al);const Ul={};c&64&&(Ul.$$scope={dirty:c,ctx:n}),fa.$set(Ul);const zl={};c&64&&(zl.$$scope={dirty:c,ctx:n}),$a.$set(zl);const Ml={};c&64&&(Ml.$$scope={dirty:c,ctx:n}),_a.$set(Ml);const Nl={};c&64&&(Nl.$$scope={dirty:c,ctx:n}),ga.$set(Nl);const Vl={};c&64&&(Vl.$$scope={dirty:c,ctx:n}),ha.$set(Vl);const Wl={};c&64&&(Wl.$$scope={dirty:c,ctx:n}),wa.$set(Wl);const Hl={};c&64&&(Hl.$$scope={dirty:c,ctx:n}),ba.$set(Hl);const Ol={};c&64&&(Ol.$$scope={dirty:c,ctx:n}),va.$set(Ol);const Kl={};c&64&&(Kl.$$scope={dirty:c,ctx:n}),xa.$set(Kl);const Zl={};c&64&&(Zl.$$scope={dirty:c,ctx:n}),ka.$set(Zl);const ql={};c&64&&(ql.$$scope={dirty:c,ctx:n}),Ca.$set(ql);const Yl={};c&64&&(Yl.$$scope={dirty:c,ctx:n}),Ba.$set(Yl);const Xl={};c&64&&(Xl.$$scope={dirty:c,ctx:n}),Sa.$set(Xl)},i(n){dF||(w(s.$$.fragment,n),w(F.$$.fragment,n),w(p.$$.fragment,n),w(e.$$.fragment,n),w(u.$$.fragment,n),w(E.$$.fragment,n),w(A.$$.fragment,n),w(G.$$.fragment,n),w(O.$$.fragment,n),w(Fs.$$.fragment,n),w(ls.$$.fragment,n),w(ps.$$.fragment,n),w(os.$$.fragment,n),w(es.$$.fragment,n),w(ts.$$.fragment,n),w(rs.$$.fragment,n),w(cs.$$.fragment,n),w(ys.$$.fragment,n),w(is.$$.fragment,n),w(ds.$$.fragment,n),w(ms.$$.fragment,n),w(us.$$.fragment,n),w(fs.$$.fragment,n),w($s.$$.fragment,n),w(_s.$$.fragment,n),w(gs.$$.fragment,n),w(hs.$$.fragment,n),w(ws.$$.fragment,n),w(bs.$$.fragment,n),w(vs.$$.fragment,n),w(xs.$$.fragment,n),w(ks.$$.fragment,n),w(Cs.$$.fragment,n),w(Bs.$$.fragment,n),w(Ss.$$.fragment,n),w(Is.$$.fragment,n),w(Ps.$$.fragment,n),w(Ls.$$.fragment,n),w(Rs.$$.fragment,n),w(Ds.$$.fragment,n),w(Es.$$.fragment,n),w(js.$$.fragment,n),w(Ts.$$.fragment,n),w(Gs.$$.fragment,n),w(As.$$.fragment,n),w(Us.$$.fragment,n),w(zs.$$.fragment,n),w(Ms.$$.fragment,n),w(Ns.$$.fragment,n),w(Vs.$$.fragment,n),w(Ws.$$.fragment,n),w(Hs.$$.fragment,n),w(Os.$$.fragment,n),w(Ks.$$.fragment,n),w(Zs.$$.fragment,n),w(qs.$$.fragment,n),w(Ys.$$.fragment,n),w(Xs.$$.fragment,n),w(Js.$$.fragment,n),w(Qs.$$.fragment,n),w(sa.$$.fragment,n),w(aa.$$.fragment,n),w(na.$$.fragment,n),w(Fa.$$.fragment,n),w(la.$$.fragment,n),w(pa.$$.fragment,n),w(oa.$$.fragment,n),w(ea.$$.fragment,n),w(ta.$$.fragment,n),w(ra.$$.fragment,n),w(ca.$$.fragment,n),w(ya.$$.fragment,n),w(ia.$$.fragment,n),w(da.$$.fragment,n),w(ma.$$.fragment,n),w(ua.$$.fragment,n),w(fa.$$.fragment,n),w($a.$$.fragment,n),w(_a.$$.fragment,n),w(ga.$$.fragment,n),w(ha.$$.fragment,n),w(wa.$$.fragment,n),w(ba.$$.fragment,n),w(va.$$.fragment,n),w(xa.$$.fragment,n),w(ka.$$.fragment,n),w(Ca.$$.fragment,n),w(Ba.$$.fragment,n),w(Sa.$$.fragment,n),dF=!0)},o(n){h(s.$$.fragment,n),h(F.$$.fragment,n),h(p.$$.fragment,n),h(e.$$.fragment,n),h(u.$$.fragment,n),h(E.$$.fragment,n),h(A.$$.fragment,n),h(G.$$.fragment,n),h(O.$$.fragment,n),h(Fs.$$.fragment,n),h(ls.$$.fragment,n),h(ps.$$.fragment,n),h(os.$$.fragment,n),h(es.$$.fragment,n),h(ts.$$.fragment,n),h(rs.$$.fragment,n),h(cs.$$.fragment,n),h(ys.$$.fragment,n),h(is.$$.fragment,n),h(ds.$$.fragment,n),h(ms.$$.fragment,n),h(us.$$.fragment,n),h(fs.$$.fragment,n),h($s.$$.fragment,n),h(_s.$$.fragment,n),h(gs.$$.fragment,n),h(hs.$$.fragment,n),h(ws.$$.fragment,n),h(bs.$$.fragment,n),h(vs.$$.fragment,n),h(xs.$$.fragment,n),h(ks.$$.fragment,n),h(Cs.$$.fragment,n),h(Bs.$$.fragment,n),h(Ss.$$.fragment,n),h(Is.$$.fragment,n),h(Ps.$$.fragment,n),h(Ls.$$.fragment,n),h(Rs.$$.fragment,n),h(Ds.$$.fragment,n),h(Es.$$.fragment,n),h(js.$$.fragment,n),h(Ts.$$.fragment,n),h(Gs.$$.fragment,n),h(As.$$.fragment,n),h(Us.$$.fragment,n),h(zs.$$.fragment,n),h(Ms.$$.fragment,n),h(Ns.$$.fragment,n),h(Vs.$$.fragment,n),h(Ws.$$.fragment,n),h(Hs.$$.fragment,n),h(Os.$$.fragment,n),h(Ks.$$.fragment,n),h(Zs.$$.fragment,n),h(qs.$$.fragment,n),h(Ys.$$.fragment,n),h(Xs.$$.fragment,n),h(Js.$$.fragment,n),h(Qs.$$.fragment,n),h(sa.$$.fragment,n),h(aa.$$.fragment,n),h(na.$$.fragment,n),h(Fa.$$.fragment,n),h(la.$$.fragment,n),h(pa.$$.fragment,n),h(oa.$$.fragment,n),h(ea.$$.fragment,n),h(ta.$$.fragment,n),h(ra.$$.fragment,n),h(ca.$$.fragment,n),h(ya.$$.fragment,n),h(ia.$$.fragment,n),h(da.$$.fragment,n),h(ma.$$.fragment,n),h(ua.$$.fragment,n),h(fa.$$.fragment,n),h($a.$$.fragment,n),h(_a.$$.fragment,n),h(ga.$$.fragment,n),h(ha.$$.fragment,n),h(wa.$$.fragment,n),h(ba.$$.fragment,n),h(va.$$.fragment,n),h(xa.$$.fragment,n),h(ka.$$.fragment,n),h(Ca.$$.fragment,n),h(Ba.$$.fragment,n),h(Sa.$$.fragment,n),dF=!1},d(n){n&&(t(a),t(l),t(i),t(d),t(o),t(m),t(B),t(L),t(W),t(V),t(za),t(Ma),t(Na),t(Va),t(Wa),t(Ha),t(Oa),t(Ka),t(Za),t(qa),t(Ya),t(Xa),t(Pa),t(Ja),t(Qa),t(La),t(sn),t(an),t(nn),t(Fn),t(ln),t(pn),t(on),t(en),t(tn),t(rn),t(cn),t(yn),t(dn),t(mn),t(un),t(fn),t($n),t(_n),t(gn),t(hn),t(wn),t(bn),t(vn),t(xn),t(kn),t(Cn),t(Bn),t(Sn),t(In),t(Pn),t(Ln),t(Rn),t(Dn),t(En),t(jn),t(Tn),t(Gn),t(An),t(Un),t(zn),t(Mn),t(Nn),t(Vn),t(Wn),t(Hn),t(On),t(K),t(Kn),t(Zn),t(qn),t(q),t(Yn),t(Xn),t(Jn),t(Qn),t(sF),t(aF),t(nF),t(FF),t(lF),t(X),t(pF),t(oF),t(Q),t(eF),t(tF),t(rF),t(cF),t(yF),t(iF)),g(s,n),g(F,n),g(p,n),Ga.d(n),Aa.d(n),g(e,n),g(u,n),g(E,n),g(A,n),g(G,n),g(O,n),g(Fs,n),g(ls,n),g(ps,n),g(os,n),g(es,n),g(ts,n),g(rs,n),g(cs,n),g(ys,n),g(is,n),g(ds,n),g(ms),g(us,n),g(fs),g($s,n),g(_s,n),g(gs,n),g(hs,n),g(ws,n),g(bs,n),g(vs,n),g(xs,n),g(ks,n),g(Cs,n),g(Bs,n),g(Ss,n),g(Is,n),g(Ps,n),g(Ls,n),g(Rs,n),g(Ds,n),g(Es,n),g(js,n),g(Ts,n),g(Gs,n),g(As,n),g(Us,n),g(zs,n),g(Ms,n),g(Ns,n),g(Vs,n),g(Ws,n),g(Hs,n),g(Os,n),g(Ks,n),g(Zs,n),g(qs,n),g(Ys,n),g(Xs,n),g(Js,n),g(Qs,n),g(sa,n),g(aa,n),g(na,n),g(Fa,n),g(la,n),g(pa,n),g(oa,n),g(ea,n),g(ta),g(ra,n),g(ca,n),g(ya),g(ia,n),g(da,n),g(ma,n),g(ua,n),g(fa,n),g($a,n),g(_a,n),g(ga,n),g(ha),g(wa,n),g(ba),g(va,n),g(xa,n),g(ka,n),g(Ca,n),g(Ba,n),g(Sa,n)}}}function yt(y){let s,a;return s=new cp({props:{metadata:lp,$$slots:{default:[ct]},$$scope:{ctx:y}}}),{c(){x(s.$$.fragment)},l(F){v(s.$$.fragment,F)},m(F,l){b(s,F,l),a=!0},p(F,[l]){const p={};l&64&&(p.$$scope={dirty:l,ctx:F}),s.$set(p)},i(F){a||(w(s.$$.fragment,F),a=!0)},o(F){h(s.$$.fragment,F),a=!1},d(F){g(s,F)}}}const lp={title:"Changelog",description:"Latest updates and announcements."},{title:Dt,description:Et}=lp;class jt extends tp{constructor(s){super(),rp(this,s,null,yt,ep,{})}}export{jt as default,lp as metadata};
