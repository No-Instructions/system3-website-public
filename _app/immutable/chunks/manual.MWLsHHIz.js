import{s as Na,d as F,i as o,f as i,t as u,n as I,$ as S,a0 as k,P as B,c as L,q as Ss,h as A,b as Bs,p as d,g as b,e as U,j as x}from"./scheduler.D_DiFEDa.js";import{S as Ma,i as Ya,d as f,t as $,a as _,m as g,c as h,b as v}from"./index.uqldPLAT.js";import{B as Ka}from"./blueprint.BVrJzGxq.js";import"./form-demo.I_FsgVaC.js";import"./index.9B820uFl.js";import"./utils.C8VhKZ24.js";import"./config.WvMhJhFT.js";import"./entry.DtDmLyLa.js";import{S as qa}from"./steps.D2WMxhFa.js";import"./ctx.gjZ7gqPd.js";import"./index.DDMNy4X9.js";import"./root.svelte_svelte_type_style_lang.CmWxcNQk.js";import{H as za}from"./h2.x_ErggQC.js";import{H as W}from"./h3.DiX3ASJ7.js";import{P as T}from"./p.BPSnRojl.js";import{P as G}from"./pre.DuYz_Z_K.js";import{A as Va}from"./a.D2pM8Aj_.js";function Ja(c){let a;return{c(){a=u("Setup your project")},l(n){a=i(n,"Setup your project")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function Qa(c){let a;return{c(){a=u("Add Tailwind")},l(n){a=i(n,"Add Tailwind")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function Wa(c){let a,n,e="<code>svelte-add</code>",l;return{c(){a=u("Use the "),n=new k(!1),l=u(" CLI to add Tailwind CSS to your project."),this.h()},l(t){a=i(t,"Use the "),n=S(t,!1),l=i(t," CLI to add Tailwind CSS to your project."),this.h()},h(){n.a=l},m(t,y){o(t,a,y),n.m(e,t,y),o(t,l,y)},p:I,d(t){t&&(F(a),n.d(),F(l))}}}function Xa(c){let a,n='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> @svelte-add/tailwindcss@latest</span></span></code>',e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function Za(c){let a;return{c(){a=u("Add dependencies")},l(n){a=i(n,"Add dependencies")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function sn(c){let a;return{c(){a=u("Add the following dependencies to your project:")},l(n){a=i(n,"Add the following dependencies to your project:")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function an(c){let a,n='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> tailwind-variants</span><span style="color:#FFF8"> clsx</span><span style="color:#FFF8"> tailwind-merge</span></span></code>',e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function nn(c){let a;return{c(){a=u("Add icon library")},l(n){a=i(n,"Add icon library")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function ln(c){let a,n,e="<code>default</code>",l,t,y="<code>lucide-svelte</code>",m;return{c(){a=u("If you're using the "),n=new k(!1),l=u(" style, install "),t=new k(!1),m=u(":"),this.h()},l(r){a=i(r,"If you're using the "),n=S(r,!1),l=i(r," style, install "),t=S(r,!1),m=i(r,":"),this.h()},h(){n.a=l,t.a=m},m(r,w){o(r,a,w),n.m(e,r,w),o(r,l,w),t.m(y,r,w),o(r,m,w)},p:I,d(r){r&&(F(a),n.d(),F(l),t.d(),F(m))}}}function en(c){let a,n='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> lucide-svelte</span></span></code>',e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function tn(c){let a,n,e="<code>new-york</code>",l,t,y="<code>svelte-radix</code>",m;return{c(){a=u("If you're using the "),n=new k(!1),l=u(" style, install "),t=new k(!1),m=u(":"),this.h()},l(r){a=i(r,"If you're using the "),n=S(r,!1),l=i(r," style, install "),t=S(r,!1),m=i(r,":"),this.h()},h(){n.a=l,t.a=m},m(r,w){o(r,a,w),n.m(e,r,w),o(r,l,w),t.m(y,r,w),o(r,m,w)},p:I,d(r){r&&(F(a),n.d(),F(l),t.d(),F(m))}}}function pn(c){let a,n='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> svelte-radix</span></span></code>',e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function Fn(c){let a;return{c(){a=u("Configure path aliases")},l(n){a=i(n,"Configure path aliases")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function on(c){let a,n,e="<code>$lib</code>",l,t,y="<code>svelte.config.js</code>",m;return{c(){a=u("If you are using SvelteKit and are not using the default alias "),n=new k(!1),l=u(", you'll need to update your "),t=new k(!1),m=u(" file to include those aliases."),this.h()},l(r){a=i(r,"If you are using SvelteKit and are not using the default alias "),n=S(r,!1),l=i(r,", you'll need to update your "),t=S(r,!1),m=i(r," file to include those aliases."),this.h()},h(){n.a=l,t.a=m},m(r,w){o(r,a,w),n.m(e,r,w),o(r,l,w),t.m(y,r,w),o(r,m,w)},p:I,d(r){r&&(F(a),n.d(),F(l),t.d(),F(m))}}}function rn(c){let a,n=`<code data-language="js" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">const</span><span style="color:#FFF"> config </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> ... other config</span></span>
<span data-line=""><span style="color:#FFF">  kit</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    //</span><span style="color:#FFF4"> ... other config</span></span>
<span data-line=""><span style="color:#FFF">    alias</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      "@/*"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "./path/to/lib/*"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function cn(c){let a,n,e="not",l,t,y="<code>tsconfig.json</code>",m,r,w="<code>vite.config.ts</code>",j;return{c(){a=u("If you are "),n=A("em"),n.textContent=e,l=u(" using SvelteKit, then you'll need to update your path aliases in your "),t=new k(!1),m=u(" and "),r=new k(!1),j=u("."),this.h()},l(C){a=i(C,"If you are "),n=L(C,"EM",{"data-svelte-h":!0}),Ss(n)!=="svelte-r5iszh"&&(n.textContent=e),l=i(C," using SvelteKit, then you'll need to update your path aliases in your "),t=S(C,!1),m=i(C," and "),r=S(C,!1),j=i(C,"."),this.h()},h(){t.a=m,r.a=j},m(C,E){o(C,a,E),o(C,n,E),o(C,l,E),t.m(y,C,E),o(C,m,E),r.m(w,C,E),o(C,j,E)},p:I,d(C){C&&(F(a),F(n),F(l),t.d(),F(m),r.d(),F(j))}}}function yn(c){let a,n=`<code data-language="json" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF8">  "</span><span style="color:#FFF">compilerOptions</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    //</span><span style="color:#FFF4"> ... other options</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    "</span><span style="color:#FFF">paths</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      "</span><span style="color:#FFF">$lib</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"./src/lib"</span><span style="color:#FFF8">],</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">      "</span><span style="color:#FFF">$lib/*</span><span style="color:#FFF8">"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"./src/lib/*"</span><span style="color:#FFF8">]</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function dn(c){let a,n=`<code data-language="js" data-theme="Lambda Studio — Blackout" style="display: grid;"><span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">import</span><span style="color:#FFF"> path </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "path"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> default</span><span style="color:#FFF"> defineConfig</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF8">  //</span><span style="color:#FFF4"> ... other options</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">  resolve</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">    alias</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF">      $lib</span><span style="color:#FFF8">:</span><span style="color:#FFF"> path</span><span style="color:#FFF8">.</span><span style="color:#FFF">resolve</span><span style="color:#FFF8">(</span><span style="color:#FFF8">"./src/lib"</span><span style="color:#FFF8">),</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span class="line--highlighted" data-line="" data-highlighted-line=""><span style="color:#FFF8">  &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">&#125;);</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function un(c){let a;return{c(){a=u("Configure tailwind.config.js")},l(n){a=i(n,"Configure tailwind.config.js")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function mn(c){let a,n,e="<code>tailwind.config.js</code>",l;return{c(){a=u("This is what this project's "),n=new k(!1),l=u(" file looks like:"),this.h()},l(t){a=i(t,"This is what this project's "),n=S(t,!1),l=i(t," file looks like:"),this.h()},h(){n.a=l},m(t,y){o(t,a,y),n.m(e,t,y),o(t,l,y)},p:I,d(t){t&&(F(a),n.d(),F(l))}}}function fn(c){let a,n=`<code data-language="javascript" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> fontFamily </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "tailwindcss/defaultTheme"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">/**</span><span style="color:#FFF8"> @type</span><span style="color:#FFF8;font-weight:bold"> &#123;</span><span style="color:#FFF;font-weight:bold">import('tailwindcss').Config</span><span style="color:#FFF8;font-weight:bold">&#125;</span><span style="color:#FFF8"> */</span></span>
<span data-line=""><span style="color:#FFF8">const</span><span style="color:#FFF"> config </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">  darkMode</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"class"</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF">  content</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"./src/**/*.&#123;html,js,svelte,ts&#125;"</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF">  safelist</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"dark"</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF">  theme</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    container</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      center</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> true,</span></span>
<span data-line=""><span style="color:#FFF">      padding</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "2rem"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">      screens</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">        "2xl"</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "1400px"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF">    extend</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">      colors</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        border</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--border) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        input</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--input) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        ring</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--ring) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        background</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--background) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        primary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--primary) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--primary-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        secondary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--secondary) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--secondary-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        destructive</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--destructive) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--destructive-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        muted</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--muted) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--muted-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        accent</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--accent) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--accent-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        popover</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--popover) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--popover-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF">        card</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">          DEFAULT</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--card) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">          foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "hsl(var(--card-foreground) / &lt;alpha-value>)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">        &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;,</span></span>
<span data-line=""><span style="color:#FFF">      borderRadius</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        lg</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "var(--radius)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        md</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "calc(var(--radius) - 2px)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        sm</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> "calc(var(--radius) - 4px)"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;,</span></span>
<span data-line=""><span style="color:#FFF">      fontFamily</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">        sans</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF8">"Inter"</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> ...</span><span style="color:#FFF">fontFamily</span><span style="color:#FFF8">.</span><span style="color:#FFF">sans</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;,</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> default</span><span style="color:#FFF"> config</span><span style="color:#FFF8">;</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function $n(c){let a;return{c(){a=u("Feel free to add or modify as needed to suit your project.")},l(n){a=i(n,"Feel free to add or modify as needed to suit your project.")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function _n(c){let a;return{c(){a=u("Configure styles")},l(n){a=i(n,"Configure styles")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function gn(c){let a;return{c(){a=u("theming section")},l(n){a=i(n,"theming section")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function hn(c){let a,n,e="<code>src/app.pcss</code>",l,t,y,m;return t=new Va({props:{href:"/docs/theming",$$slots:{default:[gn]},$$scope:{ctx:c}}}),{c(){a=u("Add the following to your "),n=new k(!1),l=u(" file. You can learn more about using CSS variables for theming in the "),v(t.$$.fragment),y=u("."),this.h()},l(r){a=i(r,"Add the following to your "),n=S(r,!1),l=i(r," file. You can learn more about using CSS variables for theming in the "),h(t.$$.fragment,r),y=i(r,"."),this.h()},h(){n.a=l},m(r,w){o(r,a,w),n.m(e,r,w),o(r,l,w),g(t,r,w),o(r,y,w),m=!0},p(r,w){const j={};w&1&&(j.$$scope={dirty:w,ctx:r}),t.$set(j)},i(r){m||(_(t.$$.fragment,r),m=!0)},o(r){$(t.$$.fragment,r),m=!1},d(r){r&&(F(a),n.d(),F(l),F(y)),f(t,r)}}}function vn(c){let a,n=`<code data-language="css" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> base</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> components</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">@tailwind</span><span style="color:#FFF"> utilities</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">@layer</span><span style="color:#FFF"> base </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF8">  :</span><span style="color:#FFF">root </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF">    --background</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0</span><span style="color:#FFF8"> 0%</span><span style="color:#FFF8"> 100%;</span></span>
<span data-line=""><span style="color:#FFF">    --foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --muted</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 96.1%;</span></span>
<span data-line=""><span style="color:#FFF">    --muted-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 215.4</span><span style="color:#FFF8"> 16.3%</span><span style="color:#FFF8"> 46.9%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --popover</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0</span><span style="color:#FFF8"> 0%</span><span style="color:#FFF8"> 100%;</span></span>
<span data-line=""><span style="color:#FFF">    --popover-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --border</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 214.3</span><span style="color:#FFF8"> 31.8%</span><span style="color:#FFF8"> 91.4%;</span></span>
<span data-line=""><span style="color:#FFF">    --input</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 214.3</span><span style="color:#FFF8"> 31.8%</span><span style="color:#FFF8"> 91.4%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --card</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0</span><span style="color:#FFF8"> 0%</span><span style="color:#FFF8"> 100%;</span></span>
<span data-line=""><span style="color:#FFF">    --card-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --primary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""><span style="color:#FFF">    --primary-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --secondary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 96.1%;</span></span>
<span data-line=""><span style="color:#FFF">    --secondary-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --accent</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 96.1%;</span></span>
<span data-line=""><span style="color:#FFF">    --accent-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --destructive</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0</span><span style="color:#FFF8"> 92%</span><span style="color:#FFF8"> 38%;</span></span>
<span data-line=""><span style="color:#FFF">    --destructive-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --ring</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 215</span><span style="color:#FFF8"> 20.2%</span><span style="color:#FFF8"> 65.1%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --radius</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0.5rem;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  .</span><span style="color:#FFF">dark </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF">    --background</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 224</span><span style="color:#FFF8"> 71%</span><span style="color:#FFF8"> 4%;</span></span>
<span data-line=""><span style="color:#FFF">    --foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 213</span><span style="color:#FFF8"> 31%</span><span style="color:#FFF8"> 91%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --muted</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 223</span><span style="color:#FFF8"> 47%</span><span style="color:#FFF8"> 11%;</span></span>
<span data-line=""><span style="color:#FFF">    --muted-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 215.4</span><span style="color:#FFF8"> 16.3%</span><span style="color:#FFF8"> 56.9%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --accent</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 216</span><span style="color:#FFF8"> 34%</span><span style="color:#FFF8"> 17%;</span></span>
<span data-line=""><span style="color:#FFF">    --accent-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --popover</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 224</span><span style="color:#FFF8"> 71%</span><span style="color:#FFF8"> 4%;</span></span>
<span data-line=""><span style="color:#FFF">    --popover-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 215</span><span style="color:#FFF8"> 20.2%</span><span style="color:#FFF8"> 65.1%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --border</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 216</span><span style="color:#FFF8"> 34%</span><span style="color:#FFF8"> 17%;</span></span>
<span data-line=""><span style="color:#FFF">    --input</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 216</span><span style="color:#FFF8"> 34%</span><span style="color:#FFF8"> 17%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --card</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 224</span><span style="color:#FFF8"> 71%</span><span style="color:#FFF8"> 4%;</span></span>
<span data-line=""><span style="color:#FFF">    --card-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 213</span><span style="color:#FFF8"> 31%</span><span style="color:#FFF8"> 91%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --primary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""><span style="color:#FFF">    --primary-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 1.2%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --secondary</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 222.2</span><span style="color:#FFF8"> 47.4%</span><span style="color:#FFF8"> 11.2%;</span></span>
<span data-line=""><span style="color:#FFF">    --secondary-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --destructive</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 359</span><span style="color:#FFF8"> 51%</span><span style="color:#FFF8"> 48%;</span></span>
<span data-line=""><span style="color:#FFF">    --destructive-foreground</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 210</span><span style="color:#FFF8"> 40%</span><span style="color:#FFF8"> 98%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --ring</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 216</span><span style="color:#FFF8"> 34%</span><span style="color:#FFF8"> 17%;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF">    --radius</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0.5rem;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">@layer</span><span style="color:#FFF"> base </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF">  * </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF">    @apply border-border</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF">  body </span><span style="color:#FFF8">&#123;</span></span>
<span data-line=""><span style="color:#FFF">    @apply bg-background text-foreground</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">    font-feature-settings</span><span style="color:#FFF8">:</span></span>
<span data-line=""><span style="color:#FFF8">      "rlig"</span><span style="color:#FFF8"> 1,</span></span>
<span data-line=""><span style="color:#FFF8">      "calt"</span><span style="color:#FFF8"> 1;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function wn(c){let a;return{c(){a=u("Configure utils")},l(n){a=i(n,"Configure utils")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function bn(c){let a,n,e="<code>cn</code>",l;return{c(){a=u("You'll want to create a "),n=new k(!1),l=u(" helper to make it easier to conditionally add Tailwind CSS classes. Additionally, you'll want to add the custom transition that is used by various components."),this.h()},l(t){a=i(t,"You'll want to create a "),n=S(t,!1),l=i(t," helper to make it easier to conditionally add Tailwind CSS classes. Additionally, you'll want to add the custom transition that is used by various components."),this.h()},h(){n.a=l},m(t,y){o(t,a,y),n.m(e,t,y),o(t,l,y)},p:I,d(t){t&&(F(a),n.d(),F(l))}}}function xn(c){let a,n=`<code data-language="ts" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF8"> type</span><span style="color:#FFF"> ClassValue</span><span style="color:#FFF8">,</span><span style="color:#FFF"> clsx </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "clsx"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> twMerge </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "tailwind-merge"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> cubicOut </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte/easing"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">import</span><span style="color:#FFF8"> type</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> TransitionConfig </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "svelte/transition"</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> function</span><span style="color:#FFF;font-weight:bold"> cn</span><span style="color:#FFF8">(...</span><span style="color:#FFF">inputs</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> ClassValue</span><span style="color:#FFF8">[])</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  return</span><span style="color:#FFF"> twMerge</span><span style="color:#FFF8">(</span><span style="color:#FFF">clsx</span><span style="color:#FFF8">(</span><span style="color:#FFF">inputs</span><span style="color:#FFF8">));</span></span>
<span data-line=""><span style="color:#FFF8">&#125;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">type</span><span style="color:#FFF;font-weight:bold"> FlyAndScaleParams</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">  y</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  x</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  start</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF">  duration</span><span style="color:#FFF8">?:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">export</span><span style="color:#FFF8"> const</span><span style="color:#FFF;font-weight:bold"> flyAndScale</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">  node</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Element</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">  params</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> FlyAndScaleParams</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> y</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> -8,</span><span style="color:#FFF"> x</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0,</span><span style="color:#FFF"> start</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0.95,</span><span style="color:#FFF"> duration</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 150</span><span style="color:#FFF8"> &#125;</span></span>
<span data-line=""><span style="color:#FFF8">):</span><span style="color:#FFF;font-weight:bold"> TransitionConfig</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> style </span><span style="color:#FFF8">=</span><span style="color:#FFF"> getComputedStyle</span><span style="color:#FFF8">(</span><span style="color:#FFF">node</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF"> transform </span><span style="color:#FFF8">=</span><span style="color:#FFF"> style</span><span style="color:#FFF8">.</span><span style="color:#FFF">transform </span><span style="color:#FFF8">===</span><span style="color:#FFF8"> "none"</span><span style="color:#FFF8"> ?</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8"> :</span><span style="color:#FFF"> style</span><span style="color:#FFF8">.</span><span style="color:#FFF">transform</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> scaleConversion</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">    valueA</span><span style="color:#FFF8">:</span><span style="color:#FFF"> number</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">    scaleA</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF">number</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number</span><span style="color:#FFF8">],</span></span>
<span data-line=""><span style="color:#FFF">    scaleB</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> [</span><span style="color:#FFF">number</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number</span><span style="color:#FFF8">]</span></span>
<span data-line=""><span style="color:#FFF8">  )</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF8"> [</span><span style="color:#FFF">minA</span><span style="color:#FFF8">,</span><span style="color:#FFF"> maxA</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> scaleA</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF8"> [</span><span style="color:#FFF">minB</span><span style="color:#FFF8">,</span><span style="color:#FFF"> maxB</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> =</span><span style="color:#FFF"> scaleB</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF"> percentage </span><span style="color:#FFF8">=</span><span style="color:#FFF8"> (</span><span style="color:#FFF">valueA </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minA</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> /</span><span style="color:#FFF8"> (</span><span style="color:#FFF">maxA </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minA</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">    const</span><span style="color:#FFF"> valueB </span><span style="color:#FFF8">=</span><span style="color:#FFF"> percentage </span><span style="color:#FFF8">*</span><span style="color:#FFF8"> (</span><span style="color:#FFF">maxB </span><span style="color:#FFF8">-</span><span style="color:#FFF"> minB</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> +</span><span style="color:#FFF"> minB</span><span style="color:#FFF8">;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF"> valueB</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  const</span><span style="color:#FFF;font-weight:bold"> styleToString</span><span style="color:#FFF8"> =</span><span style="color:#FFF8"> (</span></span>
<span data-line=""><span style="color:#FFF">    style</span><span style="color:#FFF8">:</span><span style="color:#FFF;font-weight:bold"> Record</span><span style="color:#FFF8">&lt;</span><span style="color:#FFF">string</span><span style="color:#FFF8">,</span><span style="color:#FFF"> number </span><span style="color:#FFF8">|</span><span style="color:#FFF"> string </span><span style="color:#FFF8">|</span><span style="color:#FFF"> undefined</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  ):</span><span style="color:#FFF"> string </span><span style="color:#FFF8">=></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">    return</span><span style="color:#FFF"> Object</span><span style="color:#FFF8">.</span><span style="color:#FFF">keys</span><span style="color:#FFF8">(</span><span style="color:#FFF">style</span><span style="color:#FFF8">).</span><span style="color:#FFF">reduce</span><span style="color:#FFF8">((</span><span style="color:#FFF">str</span><span style="color:#FFF8">,</span><span style="color:#FFF"> key</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      if</span><span style="color:#FFF8"> (</span><span style="color:#FFF">style</span><span style="color:#FFF8">[</span><span style="color:#FFF">key</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> ===</span><span style="color:#FFF8"> undefined)</span><span style="color:#FFF8"> return</span><span style="color:#FFF"> str</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">      return</span><span style="color:#FFF"> str </span><span style="color:#FFF8">+</span><span style="color:#FFF"> key </span><span style="color:#FFF8">+</span><span style="color:#FFF8"> ":"</span><span style="color:#FFF8"> +</span><span style="color:#FFF"> style</span><span style="color:#FFF8">[</span><span style="color:#FFF">key</span><span style="color:#FFF8">]</span><span style="color:#FFF8"> +</span><span style="color:#FFF8"> ";"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span><span style="color:#FFF8"> ""</span><span style="color:#FFF8">);</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">  return</span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF">    duration</span><span style="color:#FFF8">:</span><span style="color:#FFF"> params</span><span style="color:#FFF8">.</span><span style="color:#FFF">duration </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 200,</span></span>
<span data-line=""><span style="color:#FFF">    delay</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> 0,</span></span>
<span data-line=""><span style="color:#FFF;font-weight:bold">    css</span><span style="color:#FFF8">:</span><span style="color:#FFF8"> (</span><span style="color:#FFF">t</span><span style="color:#FFF8">)</span><span style="color:#FFF8"> =></span><span style="color:#FFF8"> &#123;</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> y </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">y </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 5,</span><span style="color:#FFF8"> 0]);</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> x </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">x </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 0,</span><span style="color:#FFF8"> 0]);</span></span>
<span data-line=""><span style="color:#FFF8">      const</span><span style="color:#FFF"> scale </span><span style="color:#FFF8">=</span><span style="color:#FFF"> scaleConversion</span><span style="color:#FFF8">(</span><span style="color:#FFF">t</span><span style="color:#FFF8">,</span><span style="color:#FFF8"> [0,</span><span style="color:#FFF8"> 1],</span><span style="color:#FFF8"> [</span><span style="color:#FFF">params</span><span style="color:#FFF8">.</span><span style="color:#FFF">start </span><span style="color:#FFF8">??</span><span style="color:#FFF8"> 0.95,</span><span style="color:#FFF8"> 1]);</span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">      return</span><span style="color:#FFF"> styleToString</span><span style="color:#FFF8">(&#123;</span></span>
<span data-line=""><span style="color:#FFF">        transform</span><span style="color:#FFF8">:</span></span>
<span data-line=""><span style="color:#FFF">          transform </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "translate3d("</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          x </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "px, "</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          y </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          "px, 0) scale("</span><span style="color:#FFF8"> +</span></span>
<span data-line=""><span style="color:#FFF">          scale </span><span style="color:#FFF8">+</span></span>
<span data-line=""><span style="color:#FFF8">          ")"</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF">        opacity</span><span style="color:#FFF8">:</span><span style="color:#FFF"> t</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">      &#125;);</span></span>
<span data-line=""><span style="color:#FFF8">    &#125;,</span></span>
<span data-line=""><span style="color:#FFF">    easing</span><span style="color:#FFF8">:</span><span style="color:#FFF"> cubicOut</span><span style="color:#FFF8">,</span></span>
<span data-line=""><span style="color:#FFF8">  &#125;;</span></span>
<span data-line=""><span style="color:#FFF8">&#125;;</span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function Sn(c){let a;return{c(){a=u("Import styles to your app")},l(n){a=i(n,"Import styles to your app")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function kn(c){let a,n,e="<code>src/routes/+layout.svelte</code>",l;return{c(){a=u("Create "),n=new k(!1),l=u(" and import the styles:"),this.h()},l(t){a=i(t,"Create "),n=S(t,!1),l=i(t," and import the styles:"),this.h()},h(){n.a=l},m(t,y){o(t,a,y),n.m(e,t,y),o(t,l,y)},p:I,d(t){t&&(F(a),n.d(),F(l))}}}function Cn(c){let a,n=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> "../app.pcss"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;slot</span><span style="color:#FFF8"> /></span></span></code>`,e;return{c(){a=new k(!1),e=B(),this.h()},l(l){a=S(l,!1),e=B(),this.h()},h(){a.a=e},m(l,t){a.m(n,l,t),o(l,e,t)},p:I,d(l){l&&(F(e),a.d())}}}function Bn(c){let a;return{c(){a=u("That's it")},l(n){a=i(n,"That's it")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function Ln(c){let a;return{c(){a=u("You can now start adding components to your project.")},l(n){a=i(n,"You can now start adding components to your project.")},m(n,e){o(n,a,e)},d(n){n&&F(a)}}}function An(c){let a,n,e,l,t,y,m,r,w,j,C,E,X,Os,Z,Ds,ss,Hs,ks,as,Ns,ns,Ms,Cs,ls,Ys,es,Ks,ts,qs,P,R,da="svelte.config.js",ps,zs,Fs,Vs,O,D,ia="tsconfig.json",os,Js,H,N,ua="vite.config.ts",rs,Qs,cs,Ws,ys,Xs,M,Y,ma="tailwind.config.js",ds,Zs,is,sa,us,aa,ms,na,K,q,fa="src/app.pcss",fs,la,$s,ea,_s,ta,z,V,$a="src/lib/utils.ts",gs,pa,hs,Fa,vs,oa,J,Q,_a="src/routes/+layout.svelte",ws,ra,bs,ca,xs,ya;return a=new W({props:{id:"add-tailwind",$$slots:{default:[Qa]},$$scope:{ctx:c}}}),e=new T({props:{$$slots:{default:[Wa]},$$scope:{ctx:c}}}),y=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Xa]},$$scope:{ctx:c}}}),r=new W({props:{id:"add-dependencies",$$slots:{default:[Za]},$$scope:{ctx:c}}}),j=new T({props:{$$slots:{default:[sn]},$$scope:{ctx:c}}}),X=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[an]},$$scope:{ctx:c}}}),Z=new W({props:{id:"add-icon-library",$$slots:{default:[nn]},$$scope:{ctx:c}}}),ss=new T({props:{$$slots:{default:[ln]},$$scope:{ctx:c}}}),as=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[en]},$$scope:{ctx:c}}}),ns=new T({props:{$$slots:{default:[tn]},$$scope:{ctx:c}}}),ls=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[pn]},$$scope:{ctx:c}}}),es=new W({props:{id:"configure-path-aliases",$$slots:{default:[Fn]},$$scope:{ctx:c}}}),ts=new T({props:{$$slots:{default:[on]},$$scope:{ctx:c}}}),ps=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"js","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[rn]},$$scope:{ctx:c}}}),Fs=new T({props:{$$slots:{default:[cn]},$$scope:{ctx:c}}}),os=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"json","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[yn]},$$scope:{ctx:c}}}),rs=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"js","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[dn]},$$scope:{ctx:c}}}),cs=new W({props:{id:"configure-tailwindconfigjs",$$slots:{default:[un]},$$scope:{ctx:c}}}),ys=new T({props:{$$slots:{default:[mn]},$$scope:{ctx:c}}}),ds=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"javascript","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[fn]},$$scope:{ctx:c}}}),is=new T({props:{$$slots:{default:[$n]},$$scope:{ctx:c}}}),us=new W({props:{id:"configure-styles",$$slots:{default:[_n]},$$scope:{ctx:c}}}),ms=new T({props:{$$slots:{default:[hn]},$$scope:{ctx:c}}}),fs=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"css","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[vn]},$$scope:{ctx:c}}}),$s=new W({props:{id:"configure-utils",$$slots:{default:[wn]},$$scope:{ctx:c}}}),_s=new T({props:{$$slots:{default:[bn]},$$scope:{ctx:c}}}),gs=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"ts","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[xn]},$$scope:{ctx:c}}}),hs=new W({props:{id:"import-styles-to-your-app",$$slots:{default:[Sn]},$$scope:{ctx:c}}}),vs=new T({props:{$$slots:{default:[kn]},$$scope:{ctx:c}}}),ws=new G({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout","data-metadata":"",$$slots:{default:[Cn]},$$scope:{ctx:c}}}),bs=new W({props:{id:"thats-it",$$slots:{default:[Bn]},$$scope:{ctx:c}}}),xs=new T({props:{$$slots:{default:[Ln]},$$scope:{ctx:c}}}),{c(){v(a.$$.fragment),n=x(),v(e.$$.fragment),l=x(),t=A("figure"),v(y.$$.fragment),m=x(),v(r.$$.fragment),w=x(),v(j.$$.fragment),C=x(),E=A("figure"),v(X.$$.fragment),Os=x(),v(Z.$$.fragment),Ds=x(),v(ss.$$.fragment),Hs=x(),ks=A("figure"),v(as.$$.fragment),Ns=x(),v(ns.$$.fragment),Ms=x(),Cs=A("figure"),v(ls.$$.fragment),Ys=x(),v(es.$$.fragment),Ks=x(),v(ts.$$.fragment),qs=x(),P=A("figure"),R=A("figcaption"),R.textContent=da,v(ps.$$.fragment),zs=x(),v(Fs.$$.fragment),Vs=x(),O=A("figure"),D=A("figcaption"),D.textContent=ia,v(os.$$.fragment),Js=x(),H=A("figure"),N=A("figcaption"),N.textContent=ua,v(rs.$$.fragment),Qs=x(),v(cs.$$.fragment),Ws=x(),v(ys.$$.fragment),Xs=x(),M=A("figure"),Y=A("figcaption"),Y.textContent=ma,v(ds.$$.fragment),Zs=x(),v(is.$$.fragment),sa=x(),v(us.$$.fragment),aa=x(),v(ms.$$.fragment),na=x(),K=A("figure"),q=A("figcaption"),q.textContent=fa,v(fs.$$.fragment),la=x(),v($s.$$.fragment),ea=x(),v(_s.$$.fragment),ta=x(),z=A("figure"),V=A("figcaption"),V.textContent=$a,v(gs.$$.fragment),pa=x(),v(hs.$$.fragment),Fa=x(),v(vs.$$.fragment),oa=x(),J=A("figure"),Q=A("figcaption"),Q.textContent=_a,v(ws.$$.fragment),ra=x(),v(bs.$$.fragment),ca=x(),v(xs.$$.fragment),this.h()},l(s){h(a.$$.fragment,s),n=b(s),h(e.$$.fragment,s),l=b(s),t=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0});var p=U(t);h(y.$$.fragment,p),p.forEach(F),m=b(s),h(r.$$.fragment,s),w=b(s),h(j.$$.fragment,s),C=b(s),E=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Gs=U(E);h(X.$$.fragment,Gs),Gs.forEach(F),Os=b(s),h(Z.$$.fragment,s),Ds=b(s),h(ss.$$.fragment,s),Hs=b(s),ks=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Ps=U(ks);h(as.$$.fragment,Ps),Ps.forEach(F),Ns=b(s),h(ns.$$.fragment,s),Ms=b(s),Cs=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0});var Rs=U(Cs);h(ls.$$.fragment,Rs),Rs.forEach(F),Ys=b(s),h(es.$$.fragment,s),Ks=b(s),h(ts.$$.fragment,s),qs=b(s),P=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Ls=U(P);R=L(Ls,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(R)!=="svelte-1h3izy3"&&(R.textContent=da),h(ps.$$.fragment,Ls),Ls.forEach(F),zs=b(s),h(Fs.$$.fragment,s),Vs=b(s),O=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var As=U(O);D=L(As,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(D)!=="svelte-s37m97"&&(D.textContent=ia),h(os.$$.fragment,As),As.forEach(F),Js=b(s),H=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Is=U(H);N=L(Is,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(N)!=="svelte-1vde19o"&&(N.textContent=ua),h(rs.$$.fragment,Is),Is.forEach(F),Qs=b(s),h(cs.$$.fragment,s),Ws=b(s),h(ys.$$.fragment,s),Xs=b(s),M=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var js=U(M);Y=L(js,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(Y)!=="svelte-16kl678"&&(Y.textContent=ma),h(ds.$$.fragment,js),js.forEach(F),Zs=b(s),h(is.$$.fragment,s),sa=b(s),h(us.$$.fragment,s),aa=b(s),h(ms.$$.fragment,s),na=b(s),K=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Es=U(K);q=L(Es,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(q)!=="svelte-7nolyk"&&(q.textContent=fa),h(fs.$$.fragment,Es),Es.forEach(F),la=b(s),h($s.$$.fragment,s),ea=b(s),h(_s.$$.fragment,s),ta=b(s),z=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Ts=U(z);V=L(Ts,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(V)!=="svelte-1xjl1eo"&&(V.textContent=$a),h(gs.$$.fragment,Ts),Ts.forEach(F),pa=b(s),h(hs.$$.fragment,s),Fa=b(s),h(vs.$$.fragment,s),oa=b(s),J=L(s,"FIGURE",{"data-rehype-pretty-code-figure":!0,"data-metadata":!0});var Us=U(J);Q=L(Us,"FIGCAPTION",{"data-rehype-pretty-code-title":!0,"data-language":!0,"data-theme":!0,"data-svelte-h":!0}),Ss(Q)!=="svelte-a2tbsn"&&(Q.textContent=_a),h(ws.$$.fragment,Us),Us.forEach(F),ra=b(s),h(bs.$$.fragment,s),ca=b(s),h(xs.$$.fragment,s),this.h()},h(){d(t,"data-rehype-pretty-code-figure",""),d(E,"data-rehype-pretty-code-figure",""),d(ks,"data-rehype-pretty-code-figure",""),d(Cs,"data-rehype-pretty-code-figure",""),d(R,"data-rehype-pretty-code-title",""),d(R,"data-language","js"),d(R,"data-theme","Lambda Studio — Blackout"),d(P,"data-rehype-pretty-code-figure",""),d(P,"data-metadata",""),d(D,"data-rehype-pretty-code-title",""),d(D,"data-language","json"),d(D,"data-theme","Lambda Studio — Blackout"),d(O,"data-rehype-pretty-code-figure",""),d(O,"data-metadata",""),d(N,"data-rehype-pretty-code-title",""),d(N,"data-language","js"),d(N,"data-theme","Lambda Studio — Blackout"),d(H,"data-rehype-pretty-code-figure",""),d(H,"data-metadata",""),d(Y,"data-rehype-pretty-code-title",""),d(Y,"data-language","javascript"),d(Y,"data-theme","Lambda Studio — Blackout"),d(M,"data-rehype-pretty-code-figure",""),d(M,"data-metadata",""),d(q,"data-rehype-pretty-code-title",""),d(q,"data-language","css"),d(q,"data-theme","Lambda Studio — Blackout"),d(K,"data-rehype-pretty-code-figure",""),d(K,"data-metadata",""),d(V,"data-rehype-pretty-code-title",""),d(V,"data-language","ts"),d(V,"data-theme","Lambda Studio — Blackout"),d(z,"data-rehype-pretty-code-figure",""),d(z,"data-metadata",""),d(Q,"data-rehype-pretty-code-title",""),d(Q,"data-language","svelte"),d(Q,"data-theme","Lambda Studio — Blackout"),d(J,"data-rehype-pretty-code-figure",""),d(J,"data-metadata","")},m(s,p){g(a,s,p),o(s,n,p),g(e,s,p),o(s,l,p),o(s,t,p),g(y,t,null),o(s,m,p),g(r,s,p),o(s,w,p),g(j,s,p),o(s,C,p),o(s,E,p),g(X,E,null),o(s,Os,p),g(Z,s,p),o(s,Ds,p),g(ss,s,p),o(s,Hs,p),o(s,ks,p),g(as,ks,null),o(s,Ns,p),g(ns,s,p),o(s,Ms,p),o(s,Cs,p),g(ls,Cs,null),o(s,Ys,p),g(es,s,p),o(s,Ks,p),g(ts,s,p),o(s,qs,p),o(s,P,p),Bs(P,R),g(ps,P,null),o(s,zs,p),g(Fs,s,p),o(s,Vs,p),o(s,O,p),Bs(O,D),g(os,O,null),o(s,Js,p),o(s,H,p),Bs(H,N),g(rs,H,null),o(s,Qs,p),g(cs,s,p),o(s,Ws,p),g(ys,s,p),o(s,Xs,p),o(s,M,p),Bs(M,Y),g(ds,M,null),o(s,Zs,p),g(is,s,p),o(s,sa,p),g(us,s,p),o(s,aa,p),g(ms,s,p),o(s,na,p),o(s,K,p),Bs(K,q),g(fs,K,null),o(s,la,p),g($s,s,p),o(s,ea,p),g(_s,s,p),o(s,ta,p),o(s,z,p),Bs(z,V),g(gs,z,null),o(s,pa,p),g(hs,s,p),o(s,Fa,p),g(vs,s,p),o(s,oa,p),o(s,J,p),Bs(J,Q),g(ws,J,null),o(s,ra,p),g(bs,s,p),o(s,ca,p),g(xs,s,p),ya=!0},p(s,p){const Gs={};p&1&&(Gs.$$scope={dirty:p,ctx:s}),a.$set(Gs);const Ps={};p&1&&(Ps.$$scope={dirty:p,ctx:s}),e.$set(Ps);const Rs={};p&1&&(Rs.$$scope={dirty:p,ctx:s}),y.$set(Rs);const Ls={};p&1&&(Ls.$$scope={dirty:p,ctx:s}),r.$set(Ls);const As={};p&1&&(As.$$scope={dirty:p,ctx:s}),j.$set(As);const Is={};p&1&&(Is.$$scope={dirty:p,ctx:s}),X.$set(Is);const js={};p&1&&(js.$$scope={dirty:p,ctx:s}),Z.$set(js);const Es={};p&1&&(Es.$$scope={dirty:p,ctx:s}),ss.$set(Es);const Ts={};p&1&&(Ts.$$scope={dirty:p,ctx:s}),as.$set(Ts);const Us={};p&1&&(Us.$$scope={dirty:p,ctx:s}),ns.$set(Us);const ga={};p&1&&(ga.$$scope={dirty:p,ctx:s}),ls.$set(ga);const ha={};p&1&&(ha.$$scope={dirty:p,ctx:s}),es.$set(ha);const va={};p&1&&(va.$$scope={dirty:p,ctx:s}),ts.$set(va);const wa={};p&1&&(wa.$$scope={dirty:p,ctx:s}),ps.$set(wa);const ba={};p&1&&(ba.$$scope={dirty:p,ctx:s}),Fs.$set(ba);const xa={};p&1&&(xa.$$scope={dirty:p,ctx:s}),os.$set(xa);const Sa={};p&1&&(Sa.$$scope={dirty:p,ctx:s}),rs.$set(Sa);const ka={};p&1&&(ka.$$scope={dirty:p,ctx:s}),cs.$set(ka);const Ca={};p&1&&(Ca.$$scope={dirty:p,ctx:s}),ys.$set(Ca);const Ba={};p&1&&(Ba.$$scope={dirty:p,ctx:s}),ds.$set(Ba);const La={};p&1&&(La.$$scope={dirty:p,ctx:s}),is.$set(La);const Aa={};p&1&&(Aa.$$scope={dirty:p,ctx:s}),us.$set(Aa);const Ia={};p&1&&(Ia.$$scope={dirty:p,ctx:s}),ms.$set(Ia);const ja={};p&1&&(ja.$$scope={dirty:p,ctx:s}),fs.$set(ja);const Ea={};p&1&&(Ea.$$scope={dirty:p,ctx:s}),$s.$set(Ea);const Ta={};p&1&&(Ta.$$scope={dirty:p,ctx:s}),_s.$set(Ta);const Ua={};p&1&&(Ua.$$scope={dirty:p,ctx:s}),gs.$set(Ua);const Ga={};p&1&&(Ga.$$scope={dirty:p,ctx:s}),hs.$set(Ga);const Pa={};p&1&&(Pa.$$scope={dirty:p,ctx:s}),vs.$set(Pa);const Ra={};p&1&&(Ra.$$scope={dirty:p,ctx:s}),ws.$set(Ra);const Oa={};p&1&&(Oa.$$scope={dirty:p,ctx:s}),bs.$set(Oa);const Da={};p&1&&(Da.$$scope={dirty:p,ctx:s}),xs.$set(Da)},i(s){ya||(_(a.$$.fragment,s),_(e.$$.fragment,s),_(y.$$.fragment,s),_(r.$$.fragment,s),_(j.$$.fragment,s),_(X.$$.fragment,s),_(Z.$$.fragment,s),_(ss.$$.fragment,s),_(as.$$.fragment,s),_(ns.$$.fragment,s),_(ls.$$.fragment,s),_(es.$$.fragment,s),_(ts.$$.fragment,s),_(ps.$$.fragment,s),_(Fs.$$.fragment,s),_(os.$$.fragment,s),_(rs.$$.fragment,s),_(cs.$$.fragment,s),_(ys.$$.fragment,s),_(ds.$$.fragment,s),_(is.$$.fragment,s),_(us.$$.fragment,s),_(ms.$$.fragment,s),_(fs.$$.fragment,s),_($s.$$.fragment,s),_(_s.$$.fragment,s),_(gs.$$.fragment,s),_(hs.$$.fragment,s),_(vs.$$.fragment,s),_(ws.$$.fragment,s),_(bs.$$.fragment,s),_(xs.$$.fragment,s),ya=!0)},o(s){$(a.$$.fragment,s),$(e.$$.fragment,s),$(y.$$.fragment,s),$(r.$$.fragment,s),$(j.$$.fragment,s),$(X.$$.fragment,s),$(Z.$$.fragment,s),$(ss.$$.fragment,s),$(as.$$.fragment,s),$(ns.$$.fragment,s),$(ls.$$.fragment,s),$(es.$$.fragment,s),$(ts.$$.fragment,s),$(ps.$$.fragment,s),$(Fs.$$.fragment,s),$(os.$$.fragment,s),$(rs.$$.fragment,s),$(cs.$$.fragment,s),$(ys.$$.fragment,s),$(ds.$$.fragment,s),$(is.$$.fragment,s),$(us.$$.fragment,s),$(ms.$$.fragment,s),$(fs.$$.fragment,s),$($s.$$.fragment,s),$(_s.$$.fragment,s),$(gs.$$.fragment,s),$(hs.$$.fragment,s),$(vs.$$.fragment,s),$(ws.$$.fragment,s),$(bs.$$.fragment,s),$(xs.$$.fragment,s),ya=!1},d(s){s&&(F(n),F(l),F(t),F(m),F(w),F(C),F(E),F(Os),F(Ds),F(Hs),F(ks),F(Ns),F(Ms),F(Cs),F(Ys),F(Ks),F(qs),F(P),F(zs),F(Vs),F(O),F(Js),F(H),F(Qs),F(Ws),F(Xs),F(M),F(Zs),F(sa),F(aa),F(na),F(K),F(la),F(ea),F(ta),F(z),F(pa),F(Fa),F(oa),F(J),F(ra),F(ca)),f(a,s),f(e,s),f(y),f(r,s),f(j,s),f(X),f(Z,s),f(ss,s),f(as),f(ns,s),f(ls),f(es,s),f(ts,s),f(ps),f(Fs,s),f(os),f(rs),f(cs,s),f(ys,s),f(ds),f(is,s),f(us,s),f(ms,s),f(fs),f($s,s),f(_s,s),f(gs),f(hs,s),f(vs,s),f(ws),f(bs,s),f(xs,s)}}}function In(c){let a,n,e,l;return a=new za({props:{id:"setup-your-project",$$slots:{default:[Ja]},$$scope:{ctx:c}}}),e=new qa({props:{$$slots:{default:[An]},$$scope:{ctx:c}}}),{c(){v(a.$$.fragment),n=x(),v(e.$$.fragment)},l(t){h(a.$$.fragment,t),n=b(t),h(e.$$.fragment,t)},m(t,y){g(a,t,y),o(t,n,y),g(e,t,y),l=!0},p(t,y){const m={};y&1&&(m.$$scope={dirty:y,ctx:t}),a.$set(m);const r={};y&1&&(r.$$scope={dirty:y,ctx:t}),e.$set(r)},i(t){l||(_(a.$$.fragment,t),_(e.$$.fragment,t),l=!0)},o(t){$(a.$$.fragment,t),$(e.$$.fragment,t),l=!1},d(t){t&&F(n),f(a,t),f(e,t)}}}function jn(c){let a,n;return a=new Ka({props:{metadata:Ha,$$slots:{default:[In]},$$scope:{ctx:c}}}),{c(){v(a.$$.fragment)},l(e){h(a.$$.fragment,e)},m(e,l){g(a,e,l),n=!0},p(e,[l]){const t={};l&1&&(t.$$scope={dirty:l,ctx:e}),a.$set(t)},i(e){n||(_(a.$$.fragment,e),n=!0)},o(e){$(a.$$.fragment,e),n=!1},d(e){f(a,e)}}}const Ha={title:"Manual Installation",description:"How to setup shadcn-svelte manually."},{title:Qn,description:Wn}=Ha;class Xn extends Ma{constructor(a){super(),Ya(this,a,null,jn,Na,{})}}export{Xn as default,Ha as metadata};
