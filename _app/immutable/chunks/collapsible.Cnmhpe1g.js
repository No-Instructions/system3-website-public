import{s as J,d as F,n as E,i as y,$ as I,P as w,a0 as R,p as b,c as k,e as L,g as B,h as j,j as S,f as U,t as G}from"./scheduler.D_DiFEDa.js";import{S as K,i as Q,d as u,t as f,a as $,m as _,c as g,b as h}from"./index.uqldPLAT.js";import{B as W}from"./blueprint.Bd3YoRzQ.js";import"./form-demo.B08xRlqs.js";import"./index.B0FfbRil.js";import"./utils.fivB9m7D.js";import{C as X}from"./component-preview.hNYyS-u8.js";import"./entry.ooCN-y9H.js";import{M as Z}from"./manual-install.Dvo4O_6C.js";import"./config.CoqDDwiV.js";import"./ctx.DcxkEPGJ.js";import"./index.CEHzx98d.js";import"./root.svelte_svelte_type_style_lang.CmWxcNQk.js";import{P as H}from"./pre.2IiOzvd4.js";import{H as A}from"./h2.Cl0zqFnA.js";import{O as N}from"./ol.D2W5VIJL.js";import{L as V}from"./li.Bnz2KjAz.js";function ss(r){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> CaretSort </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "svelte-radix/CaretSort.svelte"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Collapsible </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/collapsible/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[350px] space-y-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center justify-between space-x-4 px-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">h4 class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">@huntabyte starred 3 repositories</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h4</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ghost"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sm"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-9 p-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">CaretSort class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">    @huntabyte/bits-ui</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"space-y-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">      @melt-ui/melt-ui</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">      @sveltejs/svelte</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new R(!1),a=w(),this.h()},l(n){s=I(n,!1),a=w(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),y(n,a,t)},p:E,d(n){n&&(F(a),s.d())}}}function as(r){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF"> ChevronsUpDown </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "lucide-svelte/icons/chevrons-up-down"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Collapsible </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/collapsible/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> &#123;</span><span style="color:#FFF"> Button </span><span style="color:#FFF8">&#125;</span><span style="color:#FFF8"> from</span><span style="color:#FFF8"> "$lib/components/ui/button/index.js"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-[350px] space-y-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"flex items-center justify-between space-x-4 px-4"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">h4 class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"text-sm font-semibold"</span><span style="color:#FFF8">></span><span style="color:#FFF">@huntabyte starred 3 repositories</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">h4</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger asChild </span><span style="color:#FFF8">let:</span><span style="color:#FFF">builder</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;</span><span style="color:#FFF">Button builders</span><span style="color:#FFF8">=&#123;[</span><span style="color:#FFF">builder</span><span style="color:#FFF8">]&#125;</span><span style="color:#FFF"> variant</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ghost"</span><span style="color:#FFF"> size</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sm"</span><span style="color:#FFF"> class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"w-9 p-0"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">ChevronsUpDown class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"h-4 w-4"</span><span style="color:#FFF8"> /></span></span>
<span data-line=""><span style="color:#FFF8">        &lt;</span><span style="color:#FFF">span class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"sr-only"</span><span style="color:#FFF8">></span><span style="color:#FFF">Toggle</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">span</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">      &lt;/</span><span style="color:#FFF">Button</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">    @huntabyte/bits-ui</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"space-y-2"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">      @melt-ui/melt-ui</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">    &lt;</span><span style="color:#FFF">div class</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"rounded-md border px-4 py-3 font-mono text-sm"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">      @sveltejs/svelte</span></span>
<span data-line=""><span style="color:#FFF8">    &lt;/</span><span style="color:#FFF">div</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new R(!1),a=w(),this.h()},l(n){s=I(n,!1),a=w(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),y(n,a,t)},p:E,d(n){n&&(F(a),s.d())}}}function ns(r){let s,l,a,n,t,c,m;return l=new H({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ss]},$$scope:{ctx:r}}}),n=new H({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[as]},$$scope:{ctx:r}}}),{c(){s=j("figure"),h(l.$$.fragment),a=j("figure"),h(n.$$.fragment),t=S(),c=j("div"),this.h()},l(e){s=k(e,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var o=L(s);g(l.$$.fragment,o),o.forEach(F),a=k(e,"FIGURE",{__src__:!0,__style__:!0,class:!0,"data-rehype-pretty-code-figure":!0});var d=L(a);g(n.$$.fragment,d),d.forEach(F),t=B(e),c=k(e,"DIV",{}),L(c).forEach(F),this.h()},h(){b(s,"__src__","../src/lib/registry/new-york/example/collapsible-demo.svelte"),b(s,"__style__","new-york"),b(s,"class","code"),b(s,"data-rehype-pretty-code-figure",""),b(a,"__src__","../src/lib/registry/default/example/collapsible-demo.svelte"),b(a,"__style__","default"),b(a,"class","code"),b(a,"data-rehype-pretty-code-figure","")},m(e,o){y(e,s,o),_(l,s,null),y(e,a,o),_(n,a,null),y(e,t,o),y(e,c,o),m=!0},p(e,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:e}),l.$set(d);const x={};o&1&&(x.$$scope={dirty:o,ctx:e}),n.$set(x)},i(e){m||($(l.$$.fragment,e),$(n.$$.fragment,e),m=!0)},o(e){f(l.$$.fragment,e),f(n.$$.fragment,e),m=!1},d(e){e&&(F(s),F(a),F(t),F(c)),u(l),u(n)}}}function ls(r){let s;return{c(){s=G("Installation")},l(l){s=U(l,"Installation")},m(l,a){y(l,s,a)},d(l){l&&F(s)}}}function es(r){let s,l='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> add</span><span style="color:#FFF8"> collapsible</span></span></code>',a;return{c(){s=new R(!1),a=w(),this.h()},l(n){s=I(n,!1),a=w(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),y(n,a,t)},p:E,d(n){n&&(F(a),s.d())}}}function ts(r){let s,l,a="<code>bits-ui</code>",n;return{c(){s=G("Install "),l=new R(!1),n=G(":"),this.h()},l(t){s=U(t,"Install "),l=I(t,!1),n=U(t,":"),this.h()},h(){l.a=n},m(t,c){y(t,s,c),l.m(a,t,c),y(t,n,c)},p:E,d(t){t&&(F(s),l.d(),F(n))}}}function ps(r){let s,l;return s=new V({props:{$$slots:{default:[ts]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,n){_(s,a,n),l=!0},p(a,n){const t={};n&1&&(t.$$scope={dirty:n,ctx:a}),s.$set(t)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){f(s.$$.fragment,a),l=!1},d(a){u(s,a)}}}function os(r){let s,l='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npm</span><span style="color:#FFF8"> install</span><span style="color:#FFF8"> bits-ui</span></span></code>',a;return{c(){s=new R(!1),a=w(),this.h()},l(n){s=I(n,!1),a=w(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),y(n,a,t)},p:E,d(n){n&&(F(a),s.d())}}}function Fs(r){let s;return{c(){s=G("Copy and paste the component source files linked at the top of this page into your project.")},l(l){s=U(l,"Copy and paste the component source files linked at the top of this page into your project.")},m(l,a){y(l,s,a)},d(l){l&&F(s)}}}function rs(r){let s,l;return s=new V({props:{$$slots:{default:[Fs]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,n){_(s,a,n),l=!0},p(a,n){const t={};n&1&&(t.$$scope={dirty:n,ctx:a}),s.$set(t)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){f(s.$$.fragment,a),l=!1},d(a){u(s,a)}}}function cs(r){let s,l,a,n,t,c,m;return s=new N({props:{$$slots:{default:[ps]},$$scope:{ctx:r}}}),n=new H({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[os]},$$scope:{ctx:r}}}),c=new N({props:{start:"2",$$slots:{default:[rs]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment),l=S(),a=j("figure"),h(n.$$.fragment),t=S(),h(c.$$.fragment),this.h()},l(e){g(s.$$.fragment,e),l=B(e),a=k(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var o=L(a);g(n.$$.fragment,o),o.forEach(F),t=B(e),g(c.$$.fragment,e),this.h()},h(){b(a,"data-rehype-pretty-code-figure","")},m(e,o){_(s,e,o),y(e,l,o),y(e,a,o),_(n,a,null),y(e,t,o),_(c,e,o),m=!0},p(e,o){const d={};o&1&&(d.$$scope={dirty:o,ctx:e}),s.$set(d);const x={};o&1&&(x.$$scope={dirty:o,ctx:e}),n.$set(x);const v={};o&1&&(v.$$scope={dirty:o,ctx:e}),c.$set(v)},i(e){m||($(s.$$.fragment,e),$(n.$$.fragment,e),$(c.$$.fragment,e),m=!0)},o(e){f(s.$$.fragment,e),f(n.$$.fragment,e),f(c.$$.fragment,e),m=!1},d(e){e&&(F(l),F(a),F(t)),u(s,e),u(n),u(c,e)}}}function is(r){let s;return{c(){s=G("Usage")},l(l){s=U(l,"Usage")},m(l,a){y(l,s,a)},d(l){l&&F(s)}}}function ys(r){let s,l=`<code data-language="svelte" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">script lang</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"ts"</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  import</span><span style="color:#FFF8"> *</span><span style="color:#FFF8"> as</span><span style="color:#FFF"> Collapsible </span><span style="color:#FFF8">from</span><span style="color:#FFF8"> "$lib/components/ui/collapsible"</span><span style="color:#FFF8">;</span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">script</span><span style="color:#FFF8">></span></span>
<span data-line=""> </span>
<span data-line=""><span style="color:#FFF8">&lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span><span style="color:#FFF">Can I use this in my project?</span><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Trigger</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">  &lt;</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF">    Yes. Free to use for personal and commercial projects. No attribution</span></span>
<span data-line=""><span style="color:#FFF">    required.</span></span>
<span data-line=""><span style="color:#FFF8">  &lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Content</span><span style="color:#FFF8">></span></span>
<span data-line=""><span style="color:#FFF8">&lt;/</span><span style="color:#FFF">Collapsible</span><span style="color:#FFF8">.</span><span style="color:#FFF">Root</span><span style="color:#FFF8">></span></span></code>`,a;return{c(){s=new R(!1),a=w(),this.h()},l(n){s=I(n,!1),a=w(),this.h()},h(){s.a=a},m(n,t){s.m(l,n,t),y(n,a,t)},p:E,d(n){n&&(F(a),s.d())}}}function ds(r){let s,l,a,n,t,c,m,e,o,d,x,v,C,D;return s=new X({props:{name:"collapsible-demo",$$slots:{default:[ns]},$$scope:{ctx:r}}}),a=new A({props:{id:"installation",$$slots:{default:[ls]},$$scope:{ctx:r}}}),c=new H({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[es]},$$scope:{ctx:r}}}),e=new Z({props:{$$slots:{default:[cs]},$$scope:{ctx:r}}}),d=new A({props:{id:"usage",$$slots:{default:[is]},$$scope:{ctx:r}}}),C=new H({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"svelte","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ys]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment),l=S(),h(a.$$.fragment),n=S(),t=j("figure"),h(c.$$.fragment),m=S(),h(e.$$.fragment),o=S(),h(d.$$.fragment),x=S(),v=j("figure"),h(C.$$.fragment),this.h()},l(p){g(s.$$.fragment,p),l=B(p),g(a.$$.fragment,p),n=B(p),t=k(p,"FIGURE",{"data-rehype-pretty-code-figure":!0});var i=L(t);g(c.$$.fragment,i),i.forEach(F),m=B(p),g(e.$$.fragment,p),o=B(p),g(d.$$.fragment,p),x=B(p),v=k(p,"FIGURE",{"data-rehype-pretty-code-figure":!0});var T=L(v);g(C.$$.fragment,T),T.forEach(F),this.h()},h(){b(t,"data-rehype-pretty-code-figure",""),b(v,"data-rehype-pretty-code-figure","")},m(p,i){_(s,p,i),y(p,l,i),_(a,p,i),y(p,n,i),y(p,t,i),_(c,t,null),y(p,m,i),_(e,p,i),y(p,o,i),_(d,p,i),y(p,x,i),y(p,v,i),_(C,v,null),D=!0},p(p,i){const T={};i&1&&(T.$$scope={dirty:i,ctx:p}),s.$set(T);const P={};i&1&&(P.$$scope={dirty:i,ctx:p}),a.$set(P);const q={};i&1&&(q.$$scope={dirty:i,ctx:p}),c.$set(q);const z={};i&1&&(z.$$scope={dirty:i,ctx:p}),e.$set(z);const M={};i&1&&(M.$$scope={dirty:i,ctx:p}),d.$set(M);const O={};i&1&&(O.$$scope={dirty:i,ctx:p}),C.$set(O)},i(p){D||($(s.$$.fragment,p),$(a.$$.fragment,p),$(c.$$.fragment,p),$(e.$$.fragment,p),$(d.$$.fragment,p),$(C.$$.fragment,p),D=!0)},o(p){f(s.$$.fragment,p),f(a.$$.fragment,p),f(c.$$.fragment,p),f(e.$$.fragment,p),f(d.$$.fragment,p),f(C.$$.fragment,p),D=!1},d(p){p&&(F(l),F(n),F(t),F(m),F(o),F(x),F(v)),u(s,p),u(a,p),u(c),u(e,p),u(d,p),u(C)}}}function ms(r){let s,l;return s=new W({props:{metadata:Y,$$slots:{default:[ds]},$$scope:{ctx:r}}}),{c(){h(s.$$.fragment)},l(a){g(s.$$.fragment,a)},m(a,n){_(s,a,n),l=!0},p(a,[n]){const t={};n&1&&(t.$$scope={dirty:n,ctx:a}),s.$set(t)},i(a){l||($(s.$$.fragment,a),l=!0)},o(a){f(s.$$.fragment,a),l=!1},d(a){u(s,a)}}}const Y={title:"Collapsible",description:"An interactive component which expands/collapses a panel.",component:!0,featured:!0,source:"https://github.com/huntabyte/shadcn-svelte/tree/main/apps/www/src/lib/registry/default/ui/collapsible",bits:"https://www.bits-ui.com/docs/components/collapsible"},{title:Is,description:Rs,component:Ts,featured:Us,source:Gs,bits:Hs}=Y;class Ds extends K{constructor(s){super(),Q(this,s,null,ms,J,{})}}export{Ds as default,Y as metadata};
