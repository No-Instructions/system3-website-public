import{s as tt,d as o,i as d,f as h,t as g,n as j,$ as S,a0 as B,P as L,p as U,g as y,c as E,e as R,j as x,h as I}from"./scheduler.D_DiFEDa.js";import{S as at,i as st,d as f,t as r,a as $,m as u,c,b as _}from"./index.uqldPLAT.js";import{B as nt}from"./blueprint.Bd3YoRzQ.js";import{H as qe}from"./h2.Cl0zqFnA.js";import{P as de}from"./p.DgiKx-3N.js";import{P as O}from"./pre.2IiOzvd4.js";import{H as Pe}from"./h3.JUGHlUvN.js";function pt(i){let t;return{c(){t=g("init")},l(a){t=h(a,"init")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function lt(i){let t,a,n="<code>init</code>",s;return{c(){t=g("Use the "),a=new B(!1),s=g(" command to initialize dependencies for a new project."),this.h()},l(l){t=h(l,"Use the "),a=S(l,!1),s=h(l," command to initialize dependencies for a new project."),this.h()},h(){a.a=s},m(l,w){d(l,t,w),a.m(n,l,w),d(l,s,w)},p:j,d(l){l&&(o(t),a.d(),o(s))}}}function ot(i){let t,a,n="<code>init</code>",s,l,w="<code>cn</code>",k,F,T="<code>tailwind.config.cjs</code>",v;return{c(){t=g("The "),a=new B(!1),s=g(" command installs dependencies, adds the "),l=new B(!1),k=g(" util, configures "),F=new B(!1),v=g(", and creates CSS variables for the project."),this.h()},l(m){t=h(m,"The "),a=S(m,!1),s=h(m," command installs dependencies, adds the "),l=S(m,!1),k=h(m," util, configures "),F=S(m,!1),v=h(m,", and creates CSS variables for the project."),this.h()},h(){a.a=s,l.a=k,F.a=v},m(m,b){d(m,t,b),a.m(n,m,b),d(m,s,b),l.m(w,m,b),d(m,k,b),F.m(T,m,b),d(m,v,b)},p:j,d(m){m&&(o(t),a.d(),o(s),l.d(),o(k),F.d(),o(v))}}}function dt(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> init</span></span></code>',n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function it(i){let t,a,n="<code>components.json</code>",s;return{c(){t=g("You will be asked a few questions to configure "),a=new B(!1),s=g(":"),this.h()},l(l){t=h(l,"You will be asked a few questions to configure "),a=S(l,!1),s=h(l,":"),this.h()},h(){a.a=s},m(l,w){d(l,t,w),a.m(n,l,w),d(l,s,w)},p:j,d(l){l&&(o(t),a.d(),o(s))}}}function mt(i){let t,a=`<code data-line-numbers="" data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;" data-line-numbers-max-digits="1"><span data-line=""><span>Which style would you like to use? › Default</span></span>
<span data-line=""><span>Which color would you like to use as base color? › Slate</span></span>
<span data-line=""><span>Where is your global CSS file? › src/app.pcss</span></span>
<span data-line=""><span>Where is your tailwind.config.[cjs|js|ts] located? › tailwind.config.js</span></span>
<span data-line=""><span>Configure the import alias for components: › $lib/components</span></span>
<span data-line=""><span>Configure the import alias for utils: › $lib/utils</span></span></code>`,n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function ft(i){let t;return{c(){t=g("Options")},l(a){t=h(a,"Options")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function rt(i){let t,a=`<code data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span>Usage: shadcn-svelte init [options]</span></span>
<span data-line=""> </span>
<span data-line=""><span>initialize your project and install dependencies</span></span>
<span data-line=""> </span>
<span data-line=""><span>Options:</span></span>
<span data-line=""><span>  -y, --yes        skip confirmation prompt. (default: false)</span></span>
<span data-line=""><span>  -c, --cwd &lt;cwd>  the working directory. (default: the current directory)</span></span>
<span data-line=""><span>  -h, --help       display help for command</span></span></code>`,n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function $t(i){let t;return{c(){t=g("add")},l(a){t=h(a,"add")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function ut(i){let t,a,n="<code>add</code>",s;return{c(){t=g("Use the "),a=new B(!1),s=g(" command to add components and dependencies to your project."),this.h()},l(l){t=h(l,"Use the "),a=S(l,!1),s=h(l," command to add components and dependencies to your project."),this.h()},h(){a.a=s},m(l,w){d(l,t,w),a.m(n,l,w),d(l,s,w)},p:j,d(l){l&&(o(t),a.d(),o(s))}}}function ct(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> add</span><span style="color:#FFF"> [component]</span></span></code>',n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function _t(i){let t;return{c(){t=g("You will be presented with a list of components to choose from:")},l(a){t=h(a,"You will be presented with a list of components to choose from:")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function ht(i){let t,a=`<code data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span>Which components would you like to add? › Space to select. Return to submit.</span></span>
<span data-line=""> </span>
<span data-line=""><span>◯  accordion</span></span>
<span data-line=""><span>◯  alert</span></span>
<span data-line=""><span>◯  alert-dialog</span></span>
<span data-line=""><span>◯  aspect-ratio</span></span>
<span data-line=""><span>◯  avatar</span></span>
<span data-line=""><span>◯  badge</span></span>
<span data-line=""><span>◯  button</span></span>
<span data-line=""><span>◯  card</span></span>
<span data-line=""><span>◯  checkbox</span></span>
<span data-line=""><span>◯  collapsible</span></span></code>`,n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function gt(i){let t;return{c(){t=g("Options")},l(a){t=h(a,"Options")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function wt(i){let t,a=`<code data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span>Usage: shadcn-svelte add [options] [components...]</span></span>
<span data-line=""> </span>
<span data-line=""><span>add components to your project</span></span>
<span data-line=""> </span>
<span data-line=""><span>Arguments:</span></span>
<span data-line=""><span>  components         name of components</span></span>
<span data-line=""> </span>
<span data-line=""><span>Options:</span></span>
<span data-line=""><span>  --nodep            disable adding &amp; installing dependencies (advanced) (default: false)</span></span>
<span data-line=""><span>  -a, --all          add all components to your project. (default: false)</span></span>
<span data-line=""><span>  -y, --yes          skip confirmation prompt. (default: false)</span></span>
<span data-line=""><span>  -o, --overwrite    overwrite existing files. (default: false)</span></span>
<span data-line=""><span>  --proxy            fetch components from registry using a proxy.</span></span>
<span data-line=""><span>  -c, --cwd &lt;cwd>    the working directory. (default: the current directory)</span></span>
<span data-line=""><span>  -p, --path &lt;path>  the path to add the component to.</span></span>
<span data-line=""><span>  -h, --help         display help for command</span></span></code>`,n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function bt(i){let t;return{c(){t=g("update")},l(a){t=h(a,"update")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function yt(i){let t,a,n="<code>update</code>",s;return{c(){t=g("Use the "),a=new B(!1),s=g(" command to update components in your project. This will overwrite any modifications you've made to the components, so be sure to commit your changes before running this command."),this.h()},l(l){t=h(l,"Use the "),a=S(l,!1),s=h(l," command to update components in your project. This will overwrite any modifications you've made to the components, so be sure to commit your changes before running this command."),this.h()},h(){a.a=s},m(l,w){d(l,t,w),a.m(n,l,w),d(l,s,w)},p:j,d(l){l&&(o(t),a.d(),o(s))}}}function xt(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF;font-weight:bold">npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> update</span><span style="color:#FFF"> [component]</span></span></code>',n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function Ft(i){let t;return{c(){t=g("Options")},l(a){t=h(a,"Options")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function vt(i){let t,a=`<code data-language="txt" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span>Usage: shadcn-svelte update [options] [components...]</span></span>
<span data-line=""> </span>
<span data-line=""><span>update components in your project</span></span>
<span data-line=""> </span>
<span data-line=""><span>Arguments:</span></span>
<span data-line=""><span>  components       name of components</span></span>
<span data-line=""> </span>
<span data-line=""><span>Options:</span></span>
<span data-line=""><span>  -a, --all        update all existing components. (default: false)</span></span>
<span data-line=""><span>  -y, --yes        skip confirmation prompt. (default: false)</span></span>
<span data-line=""><span>  -c, --cwd &lt;cwd>  the working directory. (default: the current directory)</span></span>
<span data-line=""><span>  -h, --help       display help for command</span></span></code>`,n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function kt(i){let t;return{c(){t=g("Outgoing Requests")},l(a){t=h(a,"Outgoing Requests")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function St(i){let t;return{c(){t=g("Proxy")},l(a){t=h(a,"Proxy")},m(a,n){d(a,t,n)},d(a){a&&o(t)}}}function Bt(i){let t,a,n="<code>shadcn</code>",s,l,w="<code>HTTP_PROXY</code>",k,F,T="<code>http_proxy</code>",v;return{c(){t=g("This enables the use of a proxy when sending out requests to fetch from the "),a=new B(!1),s=g(" registry. If the "),l=new B(!1),k=g(" or "),F=new B(!1),v=g(" environment variables have been set, the request library underneath will respect the proxy settings."),this.h()},l(m){t=h(m,"This enables the use of a proxy when sending out requests to fetch from the "),a=S(m,!1),s=h(m," registry. If the "),l=S(m,!1),k=h(m," or "),F=S(m,!1),v=h(m," environment variables have been set, the request library underneath will respect the proxy settings."),this.h()},h(){a.a=s,l.a=k,F.a=v},m(m,b){d(m,t,b),a.m(n,m,b),d(m,s,b),l.m(w,m,b),d(m,k,b),F.m(T,m,b),d(m,v,b)},p:j,d(m){m&&(o(t),a.d(),o(s),l.d(),o(k),F.d(),o(v))}}}function Lt(i){let t,a='<code data-language="bash" data-theme="Lambda Studio — Blackout" style="display: grid;"><span data-line=""><span style="color:#FFF">HTTP_PROXY</span><span style="color:#FFF8">=</span><span style="color:#FFF8">"&lt;proxy-url>"</span><span style="color:#FFF;font-weight:bold"> npx</span><span style="color:#FFF8"> shadcn-svelte@latest</span><span style="color:#FFF8"> init</span></span></code>',n;return{c(){t=new B(!1),n=L(),this.h()},l(s){t=S(s,!1),n=L(),this.h()},h(){t.a=n},m(s,l){t.m(a,s,l),d(s,n,l)},p:j,d(s){s&&(o(n),t.d())}}}function jt(i){let t,a,n,s,l,w,k,F,T,v,m,b,q,he,P,ge,te,C,we,G,be,H,ye,ae,Y,xe,W,Fe,se,z,ve,A,ke,ne,X,Se,D,Be,J,Le,pe,K,je,M,Ue,le,N,Ee,Q,Re,V,Ie,Z,Oe,oe,ee,Te;return t=new qe({props:{id:"init",$$slots:{default:[pt]},$$scope:{ctx:i}}}),n=new de({props:{$$slots:{default:[lt]},$$scope:{ctx:i}}}),l=new de({props:{$$slots:{default:[ot]},$$scope:{ctx:i}}}),F=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[dt]},$$scope:{ctx:i}}}),v=new de({props:{$$slots:{default:[it]},$$scope:{ctx:i}}}),q=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[mt]},$$scope:{ctx:i}}}),P=new Pe({props:{id:"options",$$slots:{default:[ft]},$$scope:{ctx:i}}}),C=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[rt]},$$scope:{ctx:i}}}),G=new qe({props:{id:"add",$$slots:{default:[$t]},$$scope:{ctx:i}}}),H=new de({props:{$$slots:{default:[ut]},$$scope:{ctx:i}}}),Y=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ct]},$$scope:{ctx:i}}}),W=new de({props:{$$slots:{default:[_t]},$$scope:{ctx:i}}}),z=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[ht]},$$scope:{ctx:i}}}),A=new Pe({props:{id:"options-1",$$slots:{default:[gt]},$$scope:{ctx:i}}}),X=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[wt]},$$scope:{ctx:i}}}),D=new qe({props:{id:"update",$$slots:{default:[bt]},$$scope:{ctx:i}}}),J=new de({props:{$$slots:{default:[yt]},$$scope:{ctx:i}}}),K=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[xt]},$$scope:{ctx:i}}}),M=new Pe({props:{id:"options-2",$$slots:{default:[Ft]},$$scope:{ctx:i}}}),N=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"txt","data-theme":"Lambda Studio — Blackout",$$slots:{default:[vt]},$$scope:{ctx:i}}}),Q=new qe({props:{id:"outgoing-requests",$$slots:{default:[kt]},$$scope:{ctx:i}}}),V=new Pe({props:{id:"proxy",$$slots:{default:[St]},$$scope:{ctx:i}}}),Z=new de({props:{$$slots:{default:[Bt]},$$scope:{ctx:i}}}),ee=new O({props:{class:"Lambda Studio — Blackout",tabindex:"0","data-language":"bash","data-theme":"Lambda Studio — Blackout",$$slots:{default:[Lt]},$$scope:{ctx:i}}}),{c(){_(t.$$.fragment),a=x(),_(n.$$.fragment),s=x(),_(l.$$.fragment),w=x(),k=I("figure"),_(F.$$.fragment),T=x(),_(v.$$.fragment),m=x(),b=I("figure"),_(q.$$.fragment),he=x(),_(P.$$.fragment),ge=x(),te=I("figure"),_(C.$$.fragment),we=x(),_(G.$$.fragment),be=x(),_(H.$$.fragment),ye=x(),ae=I("figure"),_(Y.$$.fragment),xe=x(),_(W.$$.fragment),Fe=x(),se=I("figure"),_(z.$$.fragment),ve=x(),_(A.$$.fragment),ke=x(),ne=I("figure"),_(X.$$.fragment),Se=x(),_(D.$$.fragment),Be=x(),_(J.$$.fragment),Le=x(),pe=I("figure"),_(K.$$.fragment),je=x(),_(M.$$.fragment),Ue=x(),le=I("figure"),_(N.$$.fragment),Ee=x(),_(Q.$$.fragment),Re=x(),_(V.$$.fragment),Ie=x(),_(Z.$$.fragment),Oe=x(),oe=I("figure"),_(ee.$$.fragment),this.h()},l(e){c(t.$$.fragment,e),a=y(e),c(n.$$.fragment,e),s=y(e),c(l.$$.fragment,e),w=y(e),k=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var p=R(k);c(F.$$.fragment,p),p.forEach(o),T=y(e),c(v.$$.fragment,e),m=y(e),b=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var ie=R(b);c(q.$$.fragment,ie),ie.forEach(o),he=y(e),c(P.$$.fragment,e),ge=y(e),te=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var me=R(te);c(C.$$.fragment,me),me.forEach(o),we=y(e),c(G.$$.fragment,e),be=y(e),c(H.$$.fragment,e),ye=y(e),ae=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var fe=R(ae);c(Y.$$.fragment,fe),fe.forEach(o),xe=y(e),c(W.$$.fragment,e),Fe=y(e),se=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var re=R(se);c(z.$$.fragment,re),re.forEach(o),ve=y(e),c(A.$$.fragment,e),ke=y(e),ne=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var $e=R(ne);c(X.$$.fragment,$e),$e.forEach(o),Se=y(e),c(D.$$.fragment,e),Be=y(e),c(J.$$.fragment,e),Le=y(e),pe=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var ue=R(pe);c(K.$$.fragment,ue),ue.forEach(o),je=y(e),c(M.$$.fragment,e),Ue=y(e),le=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var ce=R(le);c(N.$$.fragment,ce),ce.forEach(o),Ee=y(e),c(Q.$$.fragment,e),Re=y(e),c(V.$$.fragment,e),Ie=y(e),c(Z.$$.fragment,e),Oe=y(e),oe=E(e,"FIGURE",{"data-rehype-pretty-code-figure":!0});var _e=R(oe);c(ee.$$.fragment,_e),_e.forEach(o),this.h()},h(){U(k,"data-rehype-pretty-code-figure",""),U(b,"data-rehype-pretty-code-figure",""),U(te,"data-rehype-pretty-code-figure",""),U(ae,"data-rehype-pretty-code-figure",""),U(se,"data-rehype-pretty-code-figure",""),U(ne,"data-rehype-pretty-code-figure",""),U(pe,"data-rehype-pretty-code-figure",""),U(le,"data-rehype-pretty-code-figure",""),U(oe,"data-rehype-pretty-code-figure","")},m(e,p){u(t,e,p),d(e,a,p),u(n,e,p),d(e,s,p),u(l,e,p),d(e,w,p),d(e,k,p),u(F,k,null),d(e,T,p),u(v,e,p),d(e,m,p),d(e,b,p),u(q,b,null),d(e,he,p),u(P,e,p),d(e,ge,p),d(e,te,p),u(C,te,null),d(e,we,p),u(G,e,p),d(e,be,p),u(H,e,p),d(e,ye,p),d(e,ae,p),u(Y,ae,null),d(e,xe,p),u(W,e,p),d(e,Fe,p),d(e,se,p),u(z,se,null),d(e,ve,p),u(A,e,p),d(e,ke,p),d(e,ne,p),u(X,ne,null),d(e,Se,p),u(D,e,p),d(e,Be,p),u(J,e,p),d(e,Le,p),d(e,pe,p),u(K,pe,null),d(e,je,p),u(M,e,p),d(e,Ue,p),d(e,le,p),u(N,le,null),d(e,Ee,p),u(Q,e,p),d(e,Re,p),u(V,e,p),d(e,Ie,p),u(Z,e,p),d(e,Oe,p),d(e,oe,p),u(ee,oe,null),Te=!0},p(e,p){const ie={};p&1&&(ie.$$scope={dirty:p,ctx:e}),t.$set(ie);const me={};p&1&&(me.$$scope={dirty:p,ctx:e}),n.$set(me);const fe={};p&1&&(fe.$$scope={dirty:p,ctx:e}),l.$set(fe);const re={};p&1&&(re.$$scope={dirty:p,ctx:e}),F.$set(re);const $e={};p&1&&($e.$$scope={dirty:p,ctx:e}),v.$set($e);const ue={};p&1&&(ue.$$scope={dirty:p,ctx:e}),q.$set(ue);const ce={};p&1&&(ce.$$scope={dirty:p,ctx:e}),P.$set(ce);const _e={};p&1&&(_e.$$scope={dirty:p,ctx:e}),C.$set(_e);const Ce={};p&1&&(Ce.$$scope={dirty:p,ctx:e}),G.$set(Ce);const Ge={};p&1&&(Ge.$$scope={dirty:p,ctx:e}),H.$set(Ge);const He={};p&1&&(He.$$scope={dirty:p,ctx:e}),Y.$set(He);const Ye={};p&1&&(Ye.$$scope={dirty:p,ctx:e}),W.$set(Ye);const We={};p&1&&(We.$$scope={dirty:p,ctx:e}),z.$set(We);const ze={};p&1&&(ze.$$scope={dirty:p,ctx:e}),A.$set(ze);const Ae={};p&1&&(Ae.$$scope={dirty:p,ctx:e}),X.$set(Ae);const Xe={};p&1&&(Xe.$$scope={dirty:p,ctx:e}),D.$set(Xe);const De={};p&1&&(De.$$scope={dirty:p,ctx:e}),J.$set(De);const Je={};p&1&&(Je.$$scope={dirty:p,ctx:e}),K.$set(Je);const Ke={};p&1&&(Ke.$$scope={dirty:p,ctx:e}),M.$set(Ke);const Me={};p&1&&(Me.$$scope={dirty:p,ctx:e}),N.$set(Me);const Ne={};p&1&&(Ne.$$scope={dirty:p,ctx:e}),Q.$set(Ne);const Qe={};p&1&&(Qe.$$scope={dirty:p,ctx:e}),V.$set(Qe);const Ve={};p&1&&(Ve.$$scope={dirty:p,ctx:e}),Z.$set(Ve);const Ze={};p&1&&(Ze.$$scope={dirty:p,ctx:e}),ee.$set(Ze)},i(e){Te||($(t.$$.fragment,e),$(n.$$.fragment,e),$(l.$$.fragment,e),$(F.$$.fragment,e),$(v.$$.fragment,e),$(q.$$.fragment,e),$(P.$$.fragment,e),$(C.$$.fragment,e),$(G.$$.fragment,e),$(H.$$.fragment,e),$(Y.$$.fragment,e),$(W.$$.fragment,e),$(z.$$.fragment,e),$(A.$$.fragment,e),$(X.$$.fragment,e),$(D.$$.fragment,e),$(J.$$.fragment,e),$(K.$$.fragment,e),$(M.$$.fragment,e),$(N.$$.fragment,e),$(Q.$$.fragment,e),$(V.$$.fragment,e),$(Z.$$.fragment,e),$(ee.$$.fragment,e),Te=!0)},o(e){r(t.$$.fragment,e),r(n.$$.fragment,e),r(l.$$.fragment,e),r(F.$$.fragment,e),r(v.$$.fragment,e),r(q.$$.fragment,e),r(P.$$.fragment,e),r(C.$$.fragment,e),r(G.$$.fragment,e),r(H.$$.fragment,e),r(Y.$$.fragment,e),r(W.$$.fragment,e),r(z.$$.fragment,e),r(A.$$.fragment,e),r(X.$$.fragment,e),r(D.$$.fragment,e),r(J.$$.fragment,e),r(K.$$.fragment,e),r(M.$$.fragment,e),r(N.$$.fragment,e),r(Q.$$.fragment,e),r(V.$$.fragment,e),r(Z.$$.fragment,e),r(ee.$$.fragment,e),Te=!1},d(e){e&&(o(a),o(s),o(w),o(k),o(T),o(m),o(b),o(he),o(ge),o(te),o(we),o(be),o(ye),o(ae),o(xe),o(Fe),o(se),o(ve),o(ke),o(ne),o(Se),o(Be),o(Le),o(pe),o(je),o(Ue),o(le),o(Ee),o(Re),o(Ie),o(Oe),o(oe)),f(t,e),f(n,e),f(l,e),f(F),f(v,e),f(q),f(P,e),f(C),f(G,e),f(H,e),f(Y),f(W,e),f(z),f(A,e),f(X),f(D,e),f(J,e),f(K),f(M,e),f(N),f(Q,e),f(V,e),f(Z,e),f(ee)}}}function Ut(i){let t,a;return t=new nt({props:{metadata:et,$$slots:{default:[jt]},$$scope:{ctx:i}}}),{c(){_(t.$$.fragment)},l(n){c(t.$$.fragment,n)},m(n,s){u(t,n,s),a=!0},p(n,[s]){const l={};s&1&&(l.$$scope={dirty:s,ctx:n}),t.$set(l)},i(n){a||($(t.$$.fragment,n),a=!0)},o(n){r(t.$$.fragment,n),a=!1},d(n){f(t,n)}}}const et={title:"CLI",description:"Use the CLI to add components to your project."},{title:Ct,description:Gt}=et;class Ht extends at{constructor(t){super(),st(this,t,null,Ut,tt,{})}}export{Ht as default,et as metadata};
